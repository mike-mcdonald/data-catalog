diff --git a/src/Form/MergeTerms.php b/src/Form/MergeTerms.php
index 4fb1c05..53ed261 100644
--- a/src/Form/MergeTerms.php
+++ b/src/Form/MergeTerms.php
@@ -13,7 +13,8 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 /**
  * Term merge form.
  */
-class MergeTerms extends FormBase {
+class MergeTerms extends FormBase
+{
 
   /**
    * The entity type manager.
@@ -51,7 +52,8 @@ class MergeTerms extends FormBase {
    * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $tempStoreFactory
    *   The private temporary storage factory service.
    */
-  public function __construct(EntityTypeManagerInterface $entityTypeManager, PrivateTempStoreFactory $tempStoreFactory) {
+  public function __construct(EntityTypeManagerInterface $entityTypeManager, PrivateTempStoreFactory $tempStoreFactory)
+  {
     $this->entityTypeManager = $entityTypeManager;
     $this->termStorage = $entityTypeManager->getStorage('taxonomy_term');
     $this->tempStoreFactory = $tempStoreFactory;
@@ -60,7 +62,8 @@ class MergeTerms extends FormBase {
   /**
    * {@inheritdoc}
    */
-  public static function create(ContainerInterface $container) {
+  public static function create(ContainerInterface $container)
+  {
     return new static(
       $container->get('entity_type.manager'),
       $container->get('tempstore.private')
@@ -73,14 +76,16 @@ class MergeTerms extends FormBase {
    * @return string
    *   The unique string identifying the form.
    */
-  public function getFormId() {
+  public function getFormId()
+  {
     return 'taxonomy_merge_terms';
   }
 
   /**
    * {@inheritdoc}
    */
-  public function buildForm(array $form, FormStateInterface $form_state, VocabularyInterface $taxonomy_vocabulary = NULL) {
+  public function buildForm(array $form, FormStateInterface $form_state, VocabularyInterface $taxonomy_vocabulary = NULL)
+  {
     $this->vocabulary = $taxonomy_vocabulary;
 
     $form['terms'] = [
@@ -105,7 +110,8 @@ class MergeTerms extends FormBase {
   /**
    * {@inheritdoc}
    */
-  public function validateForm(array &$form, FormStateInterface $form_state) {
+  public function validateForm(array &$form, FormStateInterface $form_state)
+  {
     parent::validateForm($form, $form_state);
 
     $selected_terms = $form_state->getValue('terms');
@@ -118,7 +124,8 @@ class MergeTerms extends FormBase {
   /**
    * {@inheritdoc}
    */
-  public function submitForm(array &$form, FormStateInterface $form_state) {
+  public function submitForm(array &$form, FormStateInterface $form_state)
+  {
     $selected_terms = $form_state->getValue('terms');
 
     $term_store = $this->tempStoreFactory->get('term_merge');
@@ -138,7 +145,8 @@ class MergeTerms extends FormBase {
    * @return \Drupal\Core\StringTranslation\TranslatableMarkup
    *   The title.
    */
-  public function titleCallback(VocabularyInterface $taxonomy_vocabulary) {
+  public function titleCallback(VocabularyInterface $taxonomy_vocabulary)
+  {
     return $this->t('Merge %vocabulary terms', ['%vocabulary' => $taxonomy_vocabulary->label()]);
   }
 
@@ -151,7 +159,8 @@ class MergeTerms extends FormBase {
    * @return string[]
    *   An array of taxonomy term labels keyed by their id.
    */
-  protected function getTermOptions(VocabularyInterface $vocabulary) {
+  protected function getTermOptions(VocabularyInterface $vocabulary)
+  {
     $options = [];
 
     $terms = $this->termStorage->loadByProperties(['vid' => $vocabulary->id()]);
@@ -159,7 +168,10 @@ class MergeTerms extends FormBase {
       $options[$term->id()] = $term->label();
     }
 
+    uasort($options,  function ($a, $b) {
+      return strcmp($a, $b);
+    });
+
     return $options;
   }
-
 }
diff --git a/src/Form/MergeTermsTarget.php b/src/Form/MergeTermsTarget.php
index 63da829..e84032a 100644
--- a/src/Form/MergeTermsTarget.php
+++ b/src/Form/MergeTermsTarget.php
@@ -14,7 +14,8 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 /**
  * Term merge target terms form.
  */
-class MergeTermsTarget extends FormBase {
+class MergeTermsTarget extends FormBase
+{
 
   /**
    * The entity type manager.
@@ -52,7 +53,8 @@ class MergeTermsTarget extends FormBase {
    * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $tempStoreFactory
    *   The private temporary storage factory.
    */
-  public function __construct(EntityTypeManagerInterface $entityTypeManager, PrivateTempStoreFactory $tempStoreFactory) {
+  public function __construct(EntityTypeManagerInterface $entityTypeManager, PrivateTempStoreFactory $tempStoreFactory)
+  {
     $this->entityTypeManager = $entityTypeManager;
     $this->termStorage = $entityTypeManager->getStorage('taxonomy_term');
     $this->tempStoreFactory = $tempStoreFactory;
@@ -61,7 +63,8 @@ class MergeTermsTarget extends FormBase {
   /**
    * {@inheritdoc}
    */
-  public static function create(ContainerInterface $container) {
+  public static function create(ContainerInterface $container)
+  {
     return new static(
       $container->get('entity_type.manager'),
       $container->get('tempstore.private')
@@ -71,7 +74,8 @@ class MergeTermsTarget extends FormBase {
   /**
    * {@inheritdoc}
    */
-  public function getFormId() {
+  public function getFormId()
+  {
     return 'taxonomy_merge_terms_target';
   }
 
@@ -81,14 +85,16 @@ class MergeTermsTarget extends FormBase {
    * @return \Drupal\Core\StringTranslation\TranslatableMarkup
    *   The title.
    */
-  public function titleCallback() {
+  public function titleCallback()
+  {
     return $this->t('Please select a target term');
   }
 
   /**
    * {@inheritdoc}
    */
-  public function buildForm(array $form, FormStateInterface $form_state, VocabularyInterface $taxonomy_vocabulary = NULL) {
+  public function buildForm(array $form, FormStateInterface $form_state, VocabularyInterface $taxonomy_vocabulary = NULL)
+  {
     $this->vocabulary = $taxonomy_vocabulary;
 
     $form['description']['#markup'] = $this->t('Please enter a new term or select an existing term to merge into.');
@@ -118,7 +124,8 @@ class MergeTermsTarget extends FormBase {
   /**
    * {@inheritdoc}
    */
-  public function validateForm(array &$form, FormStateInterface $form_state) {
+  public function validateForm(array &$form, FormStateInterface $form_state)
+  {
     parent::validateForm($form, $form_state);
 
     $new = !empty($form_state->getValue('new'));
@@ -134,7 +141,8 @@ class MergeTermsTarget extends FormBase {
   /**
    * {@inheritdoc}
    */
-  public function submitForm(array &$form, FormStateInterface $form_state) {
+  public function submitForm(array &$form, FormStateInterface $form_state)
+  {
     if (!empty($form_state->getValue('new'))) {
       $this->getTempStore()->set('target', $form_state->getValue('new'));
     }
@@ -154,7 +162,8 @@ class MergeTermsTarget extends FormBase {
    * @return string[]
    *   Existing term labels keyed by id.
    */
-  protected function buildExistingTermsOptions(): array {
+  protected function buildExistingTermsOptions(): array
+  {
     $query = $this->termStorage->getQuery();
     $selected_term_ids = $this->getSelectedTermIds();
     $query->condition('vid', $this->vocabulary->id());
@@ -172,6 +181,10 @@ class MergeTermsTarget extends FormBase {
       $options[$term->id()] = $term->label();
     }
 
+    uasort($options,  function ($a, $b) {
+      return strcmp($a, $b);
+    });
+
     return $options;
   }
 
@@ -181,7 +194,8 @@ class MergeTermsTarget extends FormBase {
    * @return int[]
    *   The selected term ids.
    */
-  protected function getSelectedTermIds(): array {
+  protected function getSelectedTermIds(): array
+  {
     return (array) $this->getTempStore()->get('terms');
   }
 
@@ -191,8 +205,8 @@ class MergeTermsTarget extends FormBase {
    * @return \Drupal\Core\TempStore\PrivateTempStore
    *   The private temp store.
    */
-  protected function getTempStore(): PrivateTempStore {
+  protected function getTempStore(): PrivateTempStore
+  {
     return $this->tempStoreFactory->get('term_merge');
   }
-
 }
