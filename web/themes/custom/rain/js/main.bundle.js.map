{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./icons/more-vertical.svg","webpack:///./icons/chevron-down.svg","webpack:///./icons/move.svg","webpack:///./icons/info.svg","webpack:///./js/src/alpine.es6.js","webpack:///./node_modules/alpinejs/dist/alpine.js","webpack:///./js/src/cshs.es6.js","webpack:///./js/src/dropbutton.es6.js","webpack:///./js/src/simpler-select.es6.js","webpack:///./js/src/tabledrag.es6.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_defineProperty","obj","configurable","writable","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","arrayUnique","array","Array","from","Set","isTesting","navigator","userAgent","includes","warnIfMalformedTemplate","el","directive","tagName","toLowerCase","console","warn","content","childElementCount","camelCase","subject","replace","match","char","toUpperCase","debounce","func","wait","timeout","context","this","args","later","clearTimeout","setTimeout","saferEval","expression","dataContext","additionalHelperVariables","Function","values","xAttrRE","isXAttr","attr","replaceAtAndColonWithStandardSyntax","test","getXAttrs","component","type","directives","attributes","map","parseHtmlAttribute","spreadDirective","spreadObject","$data","concat","entries","directiveOrder","sort","a","b","typeA","indexOf","typeB","sortDirectives","normalizedName","typeMatch","valueMatch","modifiers","startsWith","convertClassStringToArray","classList","filterFn","Boolean","split","transitionIn","show","forceSkip","__x_transition","attrs","showAttr","settingBothSidesOfTransition","index","showCallback","styleValues","duration","modifierValue","origin","first","opacity","scale","second","transitionHelper","transitionHelperIn","some","ensureStringExpression","evaluateReturnExpression","enter","find","enterStart","enterEnd","transitionClasses","transitionClassesIn","transitionOut","hide","hideCallback","transitionHelperOut","leave","leaveStart","leaveEnd","transitionClassesOut","fallback","rawValue","isNumeric","join","hook1","hook2","cancelAnimationFrame","nextFrame","callback","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","transitionProperty","trim","transitionDuration","transitionTimingFunction","transition","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","add","remove","once","isConnected","cleanup","start","during","requestAnimationFrame","Number","getComputedStyle","animationDuration","end","isNaN","called","handleForDirective","templateEl","initialUpdate","extraVars","iteratorNames","parseForExpression","items","ifAttribute","parseInt","evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement","currentEl","item","iterationScopeVariables","scopeVariables","collection","getIterationScopeVariables","currentKey","bindKeyAttribute","generateKeyForIteration","nextEl","__x_for_key","tmpNextEl","parentElement","insertBefore","nextElementSibling","undefined","lookAheadForMatchingKeyedElementAndMoveItIfFound","__x_for","updateElements","clone","document","importNode","addElementInLoopAfterCurrentEl","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","removeAnyLeftOverElementsFromPreviousUpdate","forIteratorRE","inMatch","res","iteratorMatch","handleAttributeBindingDirective","attrName","attrType","Alpine","ignoreFocusedForValueBinding","activeElement","isSameNode","checked","isArray","val","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","classNames","className","newClasses","removeAttribute","isBooleanAttr","setIfChanged","getAttribute","registerListener","event","passive","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","body","isKeyEvent","keyModifiers","debounceIndex","splice","keyToModifier","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","then","nextModifier","evaluateCommandExpression","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","newValue","safeParseNumber","multiple","selectedOptions","number","parseFloat","getPrototypeOf","ObjectCreate","ObjectDefineProperty","ObjectDefineProperties","isExtensible","getOwnPropertyNames","preventExtensions","ArrayPush","ArrayConcat","ArrayMap","isUndefined","isFunction","proxyToValueMap","WeakMap","registerProxy","proxy","set","unwrap","replicaOrAny","wrapValue","membrane","valueIsObservable","getProxy","lockShadowTarget","shadowTarget","originalTarget","descriptor","wrapDescriptor","ReactiveProxyHandler","valueObserved","valueMutated","thisArg","argArray","newTarget","shadowIsExtensible","targetIsExtensible","desc","shadowDescriptor","originalDescriptor","unwrapDescriptor","wrapReadOnlyValue","getReadOnlyProxy","ReadOnlyHandler","createShadowTarget","ObjectDotPrototype","defaultValueIsObservable","proto","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","ReactiveMembrane","valueDistortion","objectGraph","unwrappedValue","distorted","getReactiveState","readOnly","reactive","distortedValue","reactiveState","reactiveHandler","Proxy","readOnlyHandler","Component","componentForClone","$el","dataAttr","dataExpression","initExpression","dataExtras","canonicalComponentElementReference","magicProperties","unobservedData","getUnobservedData","data","wrapDataInObservable","initReturnedCallback","$refs","getRefsProxy","nextTickStack","$nextTick","watchers","$watch","showDirectiveStack","showDirectiveLastElement","onBeforeComponentInitializeds","pauseReactivity","listenForNewElementsToInitialize","onComponentInitializeds","observable","unwrappedData","copy","unwrap$1","self","updateDom","mutationCallback","wrap","fullDotNotationKey","dotNotationParts","reduce","comparisonData","part","is","initializeComponentCallback","walk","node","firstElementChild","__x","rootEl","walkAndSkipNestedComponents","__x_inserted_me","initializeElement","executeAndClearRemainingShowDirectiveStack","executeAndClearNextTickStack","registerListeners","resolveBoundAttributes","updateElement","shift","reverse","thing","Promise","resolve","finish","nestedPromise","promise","rightSideOfExpression","registerModelListener","output","textContent","handleTextDirective","innerHTML","handleHtmlDirective","display","removeProperty","handle","handleShowDirective","expressionResult","elementHasAlreadyBeenAdded","handleIfDirective","$dispatch","getDispatchFunction","AsyncFunction","async","constructor","methodReference","saferEvalNoReturn","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","ref","version","pauseMutationObserver","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector","error","newEl","addMagicProperty","onComponentInitialized","onBeforeComponentInitialized","deferLoadingAlpine","factory","$","Drupal","behaviors","cshs","attach","settings","each","idx","element","id","simplerSelect","jQuery","DropButton","dropbutton","extend","title","$dropbutton","$list","$actions","$primary","slice","addClass","append","theme","on","hoverOut","hoverIn","focusOut","focusIn","dropbuttonClickHandler","toggleClass","dropButton","$dropbuttons","$body","il","dropbuttons","toggle","hasClass","timerID","open","close","dropbuttonToggle","moreVertical","pluginName","defaults","noneLabel","noneValue","labels","Plugin","$element","$currentSelect","selectOptions","init","that","destroy","$option","label","parent","children","tree","buildTree","initialValue","initialParents","$selectElement","createSelect","getAllParents","after","selectSetValue","$nextSelect","getOptionInfoByValue","nextAll","level","chevronClasses","chevronElement","chevronDown","selectElement","$select","$wrapper","change","selectRemoveNext","$selected","selectedValue","parentValue","optionInfo","addSelectAfter","selectGetLevel","grep","child","parents","$newSelect","getOptionByValue","fn","drupalSettings","showWeight","JSON","parse","localStorage","getItem","tableDrag","base","table","initTableDrag","tableSettings","$table","dragObject","rowObject","oldRowElement","oldY","changed","maxDepth","rtl","css","striping","scrollSettings","amount","interval","trigger","scrollInterval","scrollY","windowHeight","indentEnabled","group","relationship","limit","indentCount","indent","testRow","appendTo","$indentation","prepend","indentAmount","offsetLeft","makeDraggable","before","toggleColumns","initColumns","dragRow","originalEvent","touches","dropRow","displayColumns","hidden","cell","columnIndex","tableSetting","field","eq","addColspanClass","$row","cells","colSpan","displayWeight","showColumns","hideColumns","findOnce","setItem","removeItem","$tables","rowSettings","row","tableSettingsGroup","delta","targetClass","rowSetting","$item","move","$indentationLast","Math","max","dragStart","safeBlur","keyCode","groupHeight","keyChange","$previousRow","prev","previousRow","direction","swap","scrollBy","tBodies","rows","$nextRow","next","nextRow","nextGroup","nextGroupRow","removeClass","restripeTable","onDrag","initOffset","getPointerOffset","initPointerCoords","pointerCoords","indentPointerPos","topY","offset","top","bottomY","currentPointerCoords","y","x","scrollAmount","checkScroll","clearInterval","setScroll","currentRow","findDropTargetRow","xDiff","indentDiff","round","indentChange","indents","droppedRow","$droppedRow","updateFields","updateField","markChanged","fadeIn","removeIndentClasses","onDrop","pageX","pageY","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","docPos","pointerPos","left","not","rowY","rowHeight","firstChild","isValidSwap","changedRow","$changedRow","sourceRow","useSibling","copyDragClasses","targetElement","sourceClass","sourceElement","action","siblings","findSiblings","maxVal","weight","targetRow","cursorY","de","documentElement","innerHeight","clientHeight","clientWidth","all","pageYOffset","setInterval","aboveTable","belowTable","tableRow","method","addClasses","$tableRow","groupDepth","findChildren","merge","parentIndentation","rowIndentation","indentNum","prevRow","validIndentInterval","min","position","detachBehaviors","attachBehaviors","onSwap","$prevRow","maxIndent","minIndent","$group","abs","onIndent","directions","checkRowIndentation","checkRow","marker","swappedRow","tableDragChangedMarker","info","tableDragIndentation","tableDragChangedWarning"],"mappings":"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","file":"js/main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"fill-current stroke-current h-6 w-6 feather feather-more-vertical\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"5\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"19\\\" r=\\\"1\\\"></circle></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"fill-current h-6 w-6\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" class=\\\"fill-current stroke-current h-6 w-6\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-move\\\"><polyline points=\\\"5 9 2 12 5 15\\\"></polyline><polyline points=\\\"9 5 12 2 15 5\\\"></polyline><polyline points=\\\"15 19 12 22 9 19\\\"></polyline><polyline points=\\\"19 9 22 12 19 15\\\"></polyline><line x1=\\\"2\\\" y1=\\\"12\\\" x2=\\\"22\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"2\\\" x2=\\\"12\\\" y2=\\\"22\\\"></line></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"stroke-current h-6 w-6 feather feather-info\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"></circle><line x1=\\\"12\\\" y1=\\\"16\\\" x2=\\\"12\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"8\\\" x2=\\\"12\\\" y2=\\\"8\\\"></line></svg>\"","/**\n * This file exists only to import the alpine.js package into the theme.\n */\nimport 'alpinejs';\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Alpine = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  // Thanks @stimulus:\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\n  function domReady() {\n    return new Promise(resolve => {\n      if (document.readyState == \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  function arrayUnique(array) {\n    return Array.from(new Set(array));\n  }\n  function isTesting() {\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\n  }\n  function warnIfMalformedTemplate(el, directive) {\n    if (el.tagName.toLowerCase() !== 'template') {\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\n    } else if (el.content.childElementCount !== 1) {\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with multiple element roots. Make sure <template> only has a single child element.`);\n    }\n  }\n  function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\n  }\n  function camelCase(subject) {\n    return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n  }\n  function walk(el, callback) {\n    if (callback(el) === false) return;\n    let node = el.firstElementChild;\n\n    while (node) {\n      walk(node, callback);\n      node = node.nextElementSibling;\n    }\n  }\n  function debounce(func, wait) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        func.apply(context, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n  function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    if (typeof expression === 'function') {\n      return expression.call(dataContext);\n    }\n\n    return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\n  }\n  function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    if (typeof expression === 'function') {\n      return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));\n    }\n\n    let AsyncFunction = Function;\n    /* MODERN-ONLY:START */\n\n    AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n    /* MODERN-ONLY:END */\n    // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\n    // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\n\n    if (Object.keys(dataContext).includes(expression)) {\n      let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n\n      if (typeof methodReference === 'function') {\n        return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));\n      } else {\n        return Promise.resolve();\n      }\n    }\n\n    return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));\n  }\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\b/;\n  function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\n    return xAttrRE.test(name);\n  }\n  function getXAttrs(el, component, type) {\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\n\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\n\n    if (spreadDirective) {\n      let spreadObject = saferEval(spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\n\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\n        name,\n        value\n      })));\n    }\n\n    if (type) return directives.filter(i => i.type === type);\n    return sortDirectives(directives);\n  }\n\n  function sortDirectives(directives) {\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\n    return directives.sort((a, b) => {\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n    });\n  }\n\n  function parseHtmlAttribute({\n    name,\n    value\n  }) {\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\n    const typeMatch = normalizedName.match(xAttrRE);\n    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\\-:]+)/);\n    const modifiers = normalizedName.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace('.', '')),\n      expression: value\n    };\n  }\n  function isBooleanAttr(attrName) {\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\n    // Array roughly ordered by estimated usage\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\n    return booleanAttributes.includes(attrName);\n  }\n  function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n      return name.replace('@', 'x-on:');\n    } else if (name.startsWith(':')) {\n      return name.replace(':', 'x-bind:');\n    }\n\n    return name;\n  }\n  function convertClassStringToArray(classList, filterFn = Boolean) {\n    return classList.split(' ').filter(filterFn);\n  }\n  const TRANSITION_TYPE_IN = 'in';\n  const TRANSITION_TYPE_OUT = 'out';\n  function transitionIn(el, show, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\n\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\n      transitionHelperIn(el, modifiers, show); // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\n      transitionClassesIn(el, component, attrs, show);\n    } else {\n      // If neither, just show that damn thing.\n      show();\n    }\n  }\n  function transitionOut(el, hide, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return hide();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0];\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers;\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide);\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\n      transitionClassesOut(el, component, attrs, hide);\n    } else {\n      hide();\n    }\n  }\n  function transitionHelperIn(el, modifiers, showCallback) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n      duration: modifierValue(modifiers, 'duration', 150),\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      },\n      second: {\n        opacity: 1,\n        scale: 100\n      }\n    };\n    transitionHelper(el, modifiers, showCallback, () => {}, styleValues, TRANSITION_TYPE_IN);\n  }\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\n    const styleValues = {\n      duration: duration,\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 1,\n        scale: 100\n      },\n      second: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      }\n    };\n    transitionHelper(el, modifiers, () => {}, hideCallback, styleValues, TRANSITION_TYPE_OUT);\n  }\n\n  function modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\n\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\n    if (!rawValue) return fallback;\n\n    if (key === 'scale') {\n      // Check if the very next value is NOT a number and return the fallback.\n      // If x-show.transition.scale, we'll use the default scale value.\n      // That is how a user opts out of the opacity transition.\n      if (!isNumeric(rawValue)) return fallback;\n    }\n\n    if (key === 'duration') {\n      // Support x-show.transition.duration.500ms && duration.500\n      let match = rawValue.match(/([0-9]+)ms/);\n      if (match) return match[1];\n    }\n\n    if (key === 'origin') {\n      // Support chaining origin directions: x-show.transition.top.right\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\n      }\n    }\n\n    return rawValue;\n  }\n\n  function transitionHelper(el, modifiers, hook1, hook2, styleValues, type) {\n    // clear the previous transition if exists to avoid caching the wrong styles\n    if (el.__x_transition) {\n      cancelAnimationFrame(el.__x_transition.nextFrame);\n      el.__x_transition.callback && el.__x_transition.callback();\n    } // If the user set these style values, we'll put them back when we're done with them.\n\n\n    const opacityCache = el.style.opacity;\n    const transformCache = el.style.transform;\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n\n    const stages = {\n      start() {\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\n      },\n\n      during() {\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        if (transitionOpacity) el.style.opacity = opacityCache;\n        if (transitionScale) el.style.transform = transformCache;\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\n        el.style.transitionProperty = null;\n        el.style.transitionDuration = null;\n        el.style.transitionTimingFunction = null;\n      }\n\n    };\n    transition(el, stages, type);\n  }\n  function transitionClassesIn(el, component, directives, showCallback) {\n    let ensureStringExpression = expression => {\n      return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\n    };\n\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\n      expression: ''\n    }).expression));\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\n      expression: ''\n    }).expression));\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\n      expression: ''\n    }).expression));\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN);\n  }\n  function transitionClassesOut(el, component, directives, hideCallback) {\n    const leave = convertClassStringToArray((directives.find(i => i.value === 'leave') || {\n      expression: ''\n    }).expression);\n    const leaveStart = convertClassStringToArray((directives.find(i => i.value === 'leave-start') || {\n      expression: ''\n    }).expression);\n    const leaveEnd = convertClassStringToArray((directives.find(i => i.value === 'leave-end') || {\n      expression: ''\n    }).expression);\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT);\n  }\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type) {\n    // clear the previous transition if exists to avoid caching the wrong classes\n    if (el.__x_transition) {\n      cancelAnimationFrame(el.__x_transition.nextFrame);\n      el.__x_transition.callback && el.__x_transition.callback();\n    }\n\n    const originalClasses = el.__x_original_classes || [];\n    const stages = {\n      start() {\n        el.classList.add(...classesStart);\n      },\n\n      during() {\n        el.classList.add(...classesDuring);\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        // Don't remove classes that were in the original class attribute.\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\n        el.classList.add(...classesEnd);\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\n      }\n\n    };\n    transition(el, stages, type);\n  }\n  function transition(el, stages, type) {\n    el.__x_transition = {\n      // Set transition type so we can avoid clearing transition if the direction is the same\n      type: type,\n      // create a callback for the last stages of the transition so we can call it\n      // from different point and early terminate it. Once will ensure that function\n      // is only called one time.\n      callback: once(() => {\n        stages.hide(); // Adding an \"isConnected\" check, in case the callback\n        // removed the element from the DOM.\n\n        if (el.isConnected) {\n          stages.cleanup();\n        }\n\n        delete el.__x_transition;\n      }),\n      // This store the next animation frame so we can cancel it\n      nextFrame: null\n    };\n    stages.start();\n    stages.during();\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\n      // for every single transition property. Let's grab the first one and call it a day.\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\n\n      if (duration === 0) {\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\n      }\n\n      stages.show();\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\n        stages.end();\n        setTimeout(el.__x_transition.callback, duration);\n      });\n    });\n  }\n  function isNumeric(subject) {\n    return !isNaN(subject);\n  } // Thanks @vuejs\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\n\n  function once(callback) {\n    let called = false;\n    return function () {\n      if (!called) {\n        called = true;\n        callback.apply(this, arguments);\n      }\n    };\n  }\n\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(templateEl, 'x-for');\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n\n    let currentEl = templateEl;\n    items.forEach((item, index) => {\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\n\n      if (!nextEl) {\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\n\n        transitionIn(nextEl, () => {}, component, initialUpdate);\n        nextEl.__x_for = iterationScopeVariables;\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\n      } else {\n        // Temporarily remove the key indicator to allow the normal \"updateElements\" to work.\n        delete nextEl.__x_for_key;\n        nextEl.__x_for = iterationScopeVariables;\n        component.updateElements(nextEl, () => nextEl.__x_for);\n      }\n\n      currentEl = nextEl;\n      currentEl.__x_for_key = currentKey;\n    });\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\n  } // This was taken from VueJS 2.* core. Thanks Vue!\n\n  function parseForExpression(expression) {\n    let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n    let stripParensRE = /^\\(|\\)$/g;\n    let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n    let inMatch = expression.match(forAliasRE);\n    if (!inMatch) return;\n    let res = {};\n    res.items = inMatch[2].trim();\n    let item = inMatch[1].trim().replace(stripParensRE, '');\n    let iteratorMatch = item.match(forIteratorRE);\n\n    if (iteratorMatch) {\n      res.item = item.replace(forIteratorRE, '').trim();\n      res.index = iteratorMatch[1].trim();\n\n      if (iteratorMatch[2]) {\n        res.collection = iteratorMatch[2].trim();\n      }\n    } else {\n      res.item = item;\n    }\n\n    return res;\n  }\n\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\n    // We must create a new object, so each iteration has a new scope\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\n    scopeVariables[iteratorNames.item] = item;\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n    return scopeVariables;\n  }\n\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\n\n    if (!bindKeyAttribute) return index;\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\n  }\n\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\n\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\n      return [];\n    } // This adds support for the `i in n` syntax.\n\n\n    if (isNumeric(iteratorNames.items)) {\n      return Array.from(Array(parseInt(iteratorNames.items, 10)).keys(), i => i + 1);\n    }\n\n    return component.evaluateReturnExpression(el, iteratorNames.items, extraVars);\n  }\n\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\n    let clone = document.importNode(templateEl.content, true);\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\n    return currentEl.nextElementSibling;\n  }\n\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\n    if (!nextEl) return; // If the the key's DO match, no need to look ahead.\n\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\n    // If we find it, we'll move it to the current position in the loop.\n\n    let tmpNextEl = nextEl;\n\n    while (tmpNextEl) {\n      if (tmpNextEl.__x_for_key === currentKey) {\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\n      }\n\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\n    }\n  }\n\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\n\n    while (nextElementFromOldLoop) {\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\n      transitionOut(nextElementFromOldLoop, () => {\n        nextElementFromOldLoopImmutable.remove();\n      }, component);\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\n    }\n  }\n\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\n\n    if (attrName === 'value') {\n      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.\n\n      if (value === undefined && expression.match(/\\./)) {\n        value = '';\n      }\n\n      if (el.type === 'radio') {\n        // Set radio value from x-bind:value, if no \"value\" attribute exists.\n        // If there are any initial state values, radio will have a correct\n        // \"checked\" value since x-bind:value is processed before x-model.\n        if (el.attributes.value === undefined && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          el.checked = el.value == value;\n        }\n      } else if (el.type === 'checkbox') {\n        // If we are explicitly binding a string to the :value, set the string,\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\n        // automatically.\n        if (typeof value === 'string' && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          if (Array.isArray(value)) {\n            // I'm purposely not using Array.includes here because it's\n            // strict, and because of Numeric/String mis-casting, I\n            // want the \"includes\" to be \"fuzzy\".\n            el.checked = value.some(val => val == el.value);\n          } else {\n            el.checked = !!value;\n          }\n        }\n      } else if (el.tagName === 'SELECT') {\n        updateSelect(el, value);\n      } else {\n        if (el.value === value) return;\n        el.value = value;\n      }\n    } else if (attrName === 'class') {\n      if (Array.isArray(value)) {\n        const originalClasses = el.__x_original_classes || [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\n      } else if (typeof value === 'object') {\n        // Sorting the keys / class names by their boolean value will ensure that\n        // anything that evaluates to `false` and needs to remove classes is run first.\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\n        keysSortedByBooleanValue.forEach(classNames => {\n          if (value[classNames]) {\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\n          } else {\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\n          }\n        });\n      } else {\n        const originalClasses = el.__x_original_classes || [];\n        const newClasses = convertClassStringToArray(value);\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\n      }\n    } else {\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\n\n      if ([null, undefined, false].includes(value)) {\n        el.removeAttribute(attrName);\n      } else {\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\n      }\n    }\n  }\n\n  function setIfChanged(el, attrName, value) {\n    if (el.getAttribute(attrName) != value) {\n      el.setAttribute(attrName, value);\n    }\n  }\n\n  function updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => {\n      return value + '';\n    });\n    Array.from(el.options).forEach(option => {\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\n    });\n  }\n\n  function handleTextDirective(el, output, expression) {\n    // If nested model key is undefined, set the default value to empty string.\n    if (output === undefined && expression.match(/\\./)) {\n      output = '';\n    }\n\n    el.textContent = output;\n  }\n\n  function handleHtmlDirective(component, el, expression, extraVars) {\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\n  }\n\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n      el.style.display = 'none';\n    };\n\n    const show = () => {\n      if (el.style.length === 1 && el.style.display === 'none') {\n        el.removeAttribute('style');\n      } else {\n        el.style.removeProperty('display');\n      }\n    };\n\n    if (initialUpdate === true) {\n      if (value) {\n        show();\n      } else {\n        hide();\n      }\n\n      return;\n    }\n\n    const handle = resolve => {\n      if (value) {\n        if (el.style.display === 'none' || el.__x_transition) {\n          transitionIn(el, () => {\n            show();\n          }, component);\n        }\n\n        resolve(() => {});\n      } else {\n        if (el.style.display !== 'none') {\n          transitionOut(el, () => {\n            resolve(() => {\n              hide();\n            });\n          }, component);\n        } else {\n          resolve(() => {});\n        }\n      }\n    }; // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n    // If x-show.immediate, foregoe the waiting.\n\n\n    if (modifiers.includes('immediate')) {\n      handle(finish => finish());\n      return;\n    } // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n\n\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\n      component.executeAndClearRemainingShowDirectiveStack();\n    }\n\n    component.showDirectiveStack.push(handle);\n    component.showDirectiveLastElement = el;\n  }\n\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(el, 'x-if');\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\n\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\n      const clone = document.importNode(el.content, true);\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\n      transitionIn(el.nextElementSibling, () => {}, component, initialUpdate);\n      component.initializeElements(el.nextElementSibling, extraVars);\n      el.nextElementSibling.__x_inserted_me = true;\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\n      transitionOut(el.nextElementSibling, () => {\n        el.nextElementSibling.remove();\n      }, component, initialUpdate);\n    }\n  }\n\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    const options = {\n      passive: modifiers.includes('passive')\n    };\n\n    if (modifiers.includes('camel')) {\n      event = camelCase(event);\n    }\n\n    if (modifiers.includes('away')) {\n      let handler = e => {\n        // Don't do anything if the click came from the element or within it.\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\n\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\n        // is from outside it, let's run the expression.\n\n        runListenerHandler(component, expression, e, extraVars);\n\n        if (modifiers.includes('once')) {\n          document.removeEventListener(event, handler, options);\n        }\n      }; // Listen for this event at the root level.\n\n\n      document.addEventListener(event, handler, options);\n    } else {\n      let listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\n\n      let handler = e => {\n        // Remove this global event handler if the element that declared it\n        // has been removed. It's now stale.\n        if (listenerTarget === window || listenerTarget === document) {\n          if (!document.body.contains(el)) {\n            listenerTarget.removeEventListener(event, handler, options);\n            return;\n          }\n        }\n\n        if (isKeyEvent(event)) {\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n            return;\n          }\n        }\n\n        if (modifiers.includes('prevent')) e.preventDefault();\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\n        // the target element matches the element we are registering the\n        // event on, run the handler\n\n        if (!modifiers.includes('self') || e.target === el) {\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\n          returnValue.then(value => {\n            if (value === false) {\n              e.preventDefault();\n            } else {\n              if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler, options);\n              }\n            }\n          });\n        }\n      };\n\n      if (modifiers.includes('debounce')) {\n        let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\n        let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\n        handler = debounce(handler, wait);\n      }\n\n      listenerTarget.addEventListener(event, handler, options);\n    }\n  }\n\n  function runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        '$event': e\n      });\n    });\n  }\n\n  function isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event);\n  }\n\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\n    });\n\n    if (keyModifiers.includes('debounce')) {\n      let debounceIndex = keyModifiers.indexOf('debounce');\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\n    } // If no modifier is specified, we'll call it a press.\n\n\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\n\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\n\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n    if (selectedSystemKeyModifiers.length > 0) {\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n        // Alias \"cmd\" and \"super\" to \"meta\"\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\n        return e[`${modifier}Key`];\n      }); // If all the modifiers selected are pressed, ...\n\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n        // AND the remaining key is pressed as well. It's a press.\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\n      }\n    } // We'll call it NOT a valid keypress.\n\n\n    return true;\n  }\n\n  function keyToModifier(key) {\n    switch (key) {\n      case '/':\n        return 'slash';\n\n      case ' ':\n      case 'Spacebar':\n        return 'space';\n\n      default:\n        return key && kebabCase(key);\n    }\n  }\n\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\n      });\n    });\n  }\n\n  function generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n      // Radio buttons only work properly when they share a name attribute.\n      // People might assume we take care of that for them, because\n      // they already set a shared \"x-model\" attribute.\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\n    }\n\n    return (event, currentValue) => {\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n      if (event instanceof CustomEvent && event.detail) {\n        return event.detail;\n      } else if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle its value inside the array.\n        if (Array.isArray(currentValue)) {\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(i => i !== newValue);\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\n          const rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        const rawValue = event.target.value;\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\n      }\n    };\n  }\n\n  function safeParseNumber(rawValue) {\n    const number = rawValue ? parseFloat(rawValue) : null;\n    return isNumeric(number) ? number : rawValue;\n  }\n\n  /**\n   * Copyright (C) 2017 salesforce.com, inc.\n   */\n  const { isArray } = Array;\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\n  function isUndefined(obj) {\n      return obj === undefined;\n  }\n  function isFunction(obj) {\n      return typeof obj === 'function';\n  }\n  function isObject(obj) {\n      return typeof obj === 'object';\n  }\n  const proxyToValueMap = new WeakMap();\n  function registerProxy(proxy, value) {\n      proxyToValueMap.set(proxy, value);\n  }\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\n  function wrapValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n  }\n  /**\n   * Unwrap property descriptors will set value on original descriptor\n   * We only need to unwrap if value is specified\n   * @param descriptor external descrpitor provided to define new property on original value\n   */\n  function unwrapDescriptor(descriptor) {\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = unwrap(descriptor.value);\n      }\n      return descriptor;\n  }\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      targetKeys.forEach((key) => {\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n          // We do not need to wrap the descriptor if configurable\n          // Because we can deal with wrapping it when user goes through\n          // Get own property descriptor. There is also a chance that this descriptor\n          // could change sometime in the future, so we can defer wrapping\n          // until we need to\n          if (!descriptor.configurable) {\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n          }\n          ObjectDefineProperty(shadowTarget, key, descriptor);\n      });\n      preventExtensions(shadowTarget);\n  }\n  class ReactiveProxyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          const oldValue = originalTarget[key];\n          if (oldValue !== value) {\n              originalTarget[key] = value;\n              valueMutated(originalTarget, key);\n          }\n          else if (key === 'length' && isArray(originalTarget)) {\n              // fix for issue #236: push will add the new index, and by the time length\n              // is updated, the internal length is already equal to the new length value\n              // therefore, the oldValue is equal to the value. This is the forking logic\n              // to support this use case.\n              valueMutated(originalTarget, key);\n          }\n          return true;\n      }\n      deleteProperty(shadowTarget, key) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          delete originalTarget[key];\n          valueMutated(originalTarget, key);\n          return true;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      isExtensible(shadowTarget) {\n          const shadowIsExtensible = isExtensible(shadowTarget);\n          if (!shadowIsExtensible) {\n              return shadowIsExtensible;\n          }\n          const { originalTarget, membrane } = this;\n          const targetIsExtensible = isExtensible(originalTarget);\n          if (!targetIsExtensible) {\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\n          }\n          return targetIsExtensible;\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getPrototypeOf(shadowTarget) {\n          const { originalTarget } = this;\n          return getPrototypeOf(originalTarget);\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = this.membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value, setter or getter (if available) cannot observe\n          // mutations, just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapValue);\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          const { originalTarget, membrane } = this;\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\n          preventExtensions(originalTarget);\n          return true;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          const { originalTarget, membrane } = this;\n          const { valueMutated } = membrane;\n          const { configurable } = descriptor;\n          // We have to check for value in descriptor\n          // because Object.freeze(proxy) calls this method\n          // with only { configurable: false, writeable: false }\n          // Additionally, method will only be called with writeable:false\n          // if the descriptor has a value, as opposed to getter/setter\n          // So we can just check if writable is present and then see if\n          // value is present. This eliminates getter and setter descriptors\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n              descriptor.value = originalDescriptor.value;\n          }\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n          if (configurable === false) {\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n          }\n          valueMutated(originalTarget, key);\n          return true;\n      }\n  }\n\n  function wrapReadOnlyValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n  }\n  class ReadOnlyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { membrane, originalTarget } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getReadOnlyProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          return false;\n      }\n      deleteProperty(shadowTarget, key) {\n          return false;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value or getter (if available) cannot be observed,\n          // just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n          if (hasOwnProperty.call(desc, 'set')) {\n              desc.set = undefined; // readOnly membrane does not allow setters\n          }\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          return false;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          return false;\n      }\n  }\n  function createShadowTarget(value) {\n      let shadowTarget = undefined;\n      if (isArray(value)) {\n          shadowTarget = [];\n      }\n      else if (isObject(value)) {\n          shadowTarget = {};\n      }\n      return shadowTarget;\n  }\n  const ObjectDotPrototype = Object.prototype;\n  function defaultValueIsObservable(value) {\n      // intentionally checking for null\n      if (value === null) {\n          return false;\n      }\n      // treat all non-object types, including undefined, as non-observable values\n      if (typeof value !== 'object') {\n          return false;\n      }\n      if (isArray(value)) {\n          return true;\n      }\n      const proto = getPrototypeOf(value);\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n  }\n  const defaultValueObserved = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueMutated = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueDistortion = (value) => value;\n  function wrapDescriptor(membrane, descriptor, getValue) {\n      const { set, get } = descriptor;\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = getValue(membrane, descriptor.value);\n      }\n      else {\n          if (!isUndefined(get)) {\n              descriptor.get = function () {\n                  // invoking the original getter with the original target\n                  return getValue(membrane, get.call(unwrap(this)));\n              };\n          }\n          if (!isUndefined(set)) {\n              descriptor.set = function (value) {\n                  // At this point we don't have a clear indication of whether\n                  // or not a valid mutation will occur, we don't have the key,\n                  // and we are not sure why and how they are invoking this setter.\n                  // Nevertheless we preserve the original semantics by invoking the\n                  // original setter with the original target and the unwrapped value\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\n              };\n          }\n      }\n      return descriptor;\n  }\n  class ReactiveMembrane {\n      constructor(options) {\n          this.valueDistortion = defaultValueDistortion;\n          this.valueMutated = defaultValueMutated;\n          this.valueObserved = defaultValueObserved;\n          this.valueIsObservable = defaultValueIsObservable;\n          this.objectGraph = new WeakMap();\n          if (!isUndefined(options)) {\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n          }\n      }\n      getProxy(value) {\n          const unwrappedValue = unwrap(value);\n          const distorted = this.valueDistortion(unwrappedValue);\n          if (this.valueIsObservable(distorted)) {\n              const o = this.getReactiveState(unwrappedValue, distorted);\n              // when trying to extract the writable version of a readonly\n              // we return the readonly.\n              return o.readOnly === value ? value : o.reactive;\n          }\n          return distorted;\n      }\n      getReadOnlyProxy(value) {\n          value = unwrap(value);\n          const distorted = this.valueDistortion(value);\n          if (this.valueIsObservable(distorted)) {\n              return this.getReactiveState(value, distorted).readOnly;\n          }\n          return distorted;\n      }\n      unwrapProxy(p) {\n          return unwrap(p);\n      }\n      getReactiveState(value, distortedValue) {\n          const { objectGraph, } = this;\n          let reactiveState = objectGraph.get(distortedValue);\n          if (reactiveState) {\n              return reactiveState;\n          }\n          const membrane = this;\n          reactiveState = {\n              get reactive() {\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                  // caching the reactive proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\n                  return proxy;\n              },\n              get readOnly() {\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                  // caching the readOnly proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                  return proxy;\n              }\n          };\n          objectGraph.set(distortedValue, reactiveState);\n          return reactiveState;\n      }\n  }\n  /** version: 0.26.0 */\n\n  function wrap(data, mutationCallback) {\n\n    let membrane = new ReactiveMembrane({\n      valueMutated(target, key) {\n        mutationCallback(target, key);\n      }\n\n    });\n    return {\n      data: membrane.getProxy(data),\n      membrane: membrane\n    };\n  }\n  function unwrap$1(membrane, observable) {\n    let unwrappedData = membrane.unwrapProxy(observable);\n    let copy = {};\n    Object.keys(unwrappedData).forEach(key => {\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\n      copy[key] = unwrappedData[key];\n    });\n    return copy;\n  }\n\n  class Component {\n    constructor(el, componentForClone = null) {\n      this.$el = el;\n      const dataAttr = this.$el.getAttribute('x-data');\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\n      const initExpression = this.$el.getAttribute('x-init');\n      let dataExtras = {\n        $el: this.$el\n      };\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(dataExtras, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference);\n          }\n        });\n      });\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(dataExpression, dataExtras);\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\n\n      let {\n        membrane,\n        data\n      } = this.wrapDataInObservable(this.unobservedData);\n      this.$data = data;\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\n      // our magic properties to the original data for access.\n\n      this.unobservedData.$el = this.$el;\n      this.unobservedData.$refs = this.getRefsProxy();\n      this.nextTickStack = [];\n\n      this.unobservedData.$nextTick = callback => {\n        this.nextTickStack.push(callback);\n      };\n\n      this.watchers = {};\n\n      this.unobservedData.$watch = (property, callback) => {\n        if (!this.watchers[property]) this.watchers[property] = [];\n        this.watchers[property].push(callback);\n      }; // Register custom magic properties.\n\n\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(this.unobservedData, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference);\n          }\n        });\n      });\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement;\n      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\n\n      if (initExpression && !componentForClone) {\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true;\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\n        this.pauseReactivity = false;\n      } // Register all our listeners and set all our attribute bindings.\n\n\n      this.initializeElements(this.$el); // Use mutation observer to detect new elements being added within this component at run-time.\n      // Alpine's just so darn flexible amirite?\n\n      this.listenForNewElementsToInitialize();\n\n      if (typeof initReturnedCallback === 'function') {\n        // Run the callback returned from the \"x-init\" hook to allow the user to do stuff after\n        // Alpine's got it's grubby little paws all over everything.\n        initReturnedCallback.call(this.$data);\n      }\n\n      componentForClone || setTimeout(() => {\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\n      }, 0);\n    }\n\n    getUnobservedData() {\n      return unwrap$1(this.membrane, this.$data);\n    }\n\n    wrapDataInObservable(data) {\n      var self = this;\n      let updateDom = debounce(function () {\n        self.updateElements(self.$el);\n      }, 0);\n      return wrap(data, (target, key) => {\n        if (self.watchers[key]) {\n          // If there's a watcher for this specific key, run it.\n          self.watchers[key].forEach(callback => callback(target[key]));\n        } else if (Array.isArray(target)) {\n          // Arrays are special cases, if any of the items change, we consider the array as mutated.\n          Object.keys(self.watchers).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.\n            // For example, when calling push, we would get a mutation for the item's key\n            // and a second mutation for the length property.\n\n            if (key === 'length') return;\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData[part])) {\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target));\n              }\n\n              return comparisonData[part];\n            }, self.getUnobservedData());\n          });\n        } else {\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\n          // if this mutation fits any of them.\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\n            // key, then skip it early for performance reasons.\n\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\n            // a match, and call the watcher if one's found.\n\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData)) {\n                // Run the watchers.\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\n              }\n\n              return comparisonData[part];\n            }, self.getUnobservedData());\n          });\n        } // Don't react to data changes for cases like the `x-created` hook.\n\n\n        if (self.pauseReactivity) return;\n        updateDom();\n      });\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n      walk(el, el => {\n        // We've hit a component.\n        if (el.hasAttribute('x-data')) {\n          // If it's not the current one.\n          if (!el.isSameNode(this.$el)) {\n            // Initialize it if it's not.\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\n\n            return false;\n          }\n        }\n\n        return callback(el);\n      });\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\n\n        if (el.__x_inserted_me !== undefined) return false;\n        this.initializeElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    initializeElement(el, extraVars) {\n      // To support class attribute merging, we have to know what the element's\n      // original class attribute looked like for reference.\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\n      }\n\n      this.registerListeners(el, extraVars);\n      this.resolveBoundAttributes(el, true, extraVars);\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\n        this.updateElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    executeAndClearNextTickStack(el) {\n      // Skip spawns from alpine directives\n      if (el === this.$el && this.nextTickStack.length > 0) {\n        // We run the tick stack after the next frame to allow any\n        // running transitions to pass the initial show stage.\n        requestAnimationFrame(() => {\n          while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()();\n          }\n        });\n      }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n      // The goal here is to start all the x-show transitions\n      // and build a nested promise chain so that elements\n      // only hide when the children are finished hiding.\n      this.showDirectiveStack.reverse().map(thing => {\n        return new Promise(resolve => {\n          thing(finish => {\n            resolve(finish);\n          });\n        });\n      }).reduce((nestedPromise, promise) => {\n        return nestedPromise.then(() => {\n          return promise.then(finish => finish());\n        });\n      }, Promise.resolve(() => {})); // We've processed the handler stack. let's clear it.\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement = undefined;\n    }\n\n    updateElement(el, extraVars) {\n      this.resolveBoundAttributes(el, false, extraVars);\n    }\n\n    registerListeners(el, extraVars) {\n      getXAttrs(el, this).forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'on':\n            registerListener(this, el, value, modifiers, expression, extraVars);\n            break;\n\n          case 'model':\n            registerModelListener(this, el, modifiers, expression, extraVars);\n            break;\n        }\n      });\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n      let attrs = getXAttrs(el, this);\n      attrs.forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'model':\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\n            break;\n\n          case 'bind':\n            // The :key binding on an x-for is special, ignore it.\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\n            break;\n\n          case 'text':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleTextDirective(el, output, expression);\n            break;\n\n          case 'html':\n            handleHtmlDirective(this, el, expression, extraVars);\n            break;\n\n          case 'show':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\n            break;\n\n          case 'if':\n            // If this element also has x-for on it, don't process x-if.\n            // We will let the \"x-for\" directive handle the \"if\"ing.\n            if (attrs.some(i => i.type === 'for')) return;\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\n            break;\n\n          case 'for':\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\n            break;\n\n          case 'cloak':\n            el.removeAttribute('x-cloak');\n            break;\n        }\n      });\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n      return saferEval(expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n      return saferEvalNoReturn(expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    getDispatchFunction(el) {\n      return (event, detail = {}) => {\n        el.dispatchEvent(new CustomEvent(event, {\n          detail,\n          bubbles: true\n        }));\n      };\n    }\n\n    listenForNewElementsToInitialize() {\n      const targetNode = this.$el;\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          // Filter out mutations triggered from child components.\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\n\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n            const rawData = saferEval(mutations[i].target.getAttribute('x-data') || '{}', {\n              $el: this.$el\n            });\n            Object.keys(rawData).forEach(key => {\n              if (this.$data[key] !== rawData[key]) {\n                this.$data[key] = rawData[key];\n              }\n            });\n          }\n\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\n\n              if (node.matches('[x-data]') && !node.__x) {\n                node.__x = new Component(node);\n                return;\n              }\n\n              this.initializeElements(node);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n      var self = this;\n      var refObj = {};\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n      // the DOM when the system needs something from it. This way, the framework is flexible and\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n\n      return new Proxy(refObj, {\n        get(object, property) {\n          if (property === '$isAlpineProxy') return true;\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\n          // nested components.\n\n          self.walkAndSkipNestedComponents(self.$el, el => {\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n              ref = el;\n            }\n          });\n          return ref;\n        }\n\n      });\n    }\n\n  }\n\n  const Alpine = {\n    version: \"2.7.0\",\n    pauseMutationObserver: false,\n    magicProperties: {},\n    onComponentInitializeds: [],\n    onBeforeComponentInitializeds: [],\n    ignoreFocusedForValueBinding: false,\n    start: async function start() {\n      if (!isTesting()) {\n        await domReady();\n      }\n\n      this.discoverComponents(el => {\n        this.initializeComponent(el);\n      }); // It's easier and more performant to just support Turbolinks than listen\n      // to MutationObserver mutations at the document level.\n\n      document.addEventListener(\"turbolinks:load\", () => {\n        this.discoverUninitializedComponents(el => {\n          this.initializeComponent(el);\n        });\n      });\n      this.listenForNewUninitializedComponentsAtRunTime(el => {\n        this.initializeComponent(el);\n      });\n    },\n    discoverComponents: function discoverComponents(callback) {\n      const rootEls = document.querySelectorAll('[x-data]');\n      rootEls.forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\n      const rootEls = (el || document).querySelectorAll('[x-data]');\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime(callback) {\n      const targetNode = document.querySelector('body');\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        if (this.pauseMutationObserver) return;\n\n        for (let i = 0; i < mutations.length; i++) {\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              // Discard non-element nodes (like line-breaks)\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\n              // They will take care of themselves.\n\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\n              this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el);\n              }, node.parentElement);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    },\n    initializeComponent: function initializeComponent(el) {\n      if (!el.__x) {\n        // Wrap in a try/catch so that we don't prevent other components\n        // from initializing when one component contains an error.\n        try {\n          el.__x = new Component(el);\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          }, 0);\n        }\n      }\n    },\n    clone: function clone(component, newEl) {\n      if (!newEl.__x) {\n        newEl.__x = new Component(newEl, component);\n      }\n    },\n    addMagicProperty: function addMagicProperty(name, callback) {\n      this.magicProperties[name] = callback;\n    },\n    onComponentInitialized: function onComponentInitialized(callback) {\n      this.onComponentInitializeds.push(callback);\n    },\n    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {\n      this.onBeforeComponentInitializeds.push(callback);\n    }\n  };\n\n  if (!isTesting()) {\n    window.Alpine = Alpine;\n\n    if (window.deferLoadingAlpine) {\n      window.deferLoadingAlpine(function () {\n        window.Alpine.start();\n      });\n    } else {\n      window.Alpine.start();\n    }\n  }\n\n  return Alpine;\n\n})));\n","/**\n * @file\n * Behavior which initializes the simplerSelect jQuery Plugin.\n */\n\n(function ($) {\n  'use strict';\n\n  Drupal.behaviors.cshs = {\n    attach: function (context, settings) {\n      $('select.simpler-select-root', context)\n        .once('cshs')\n        .each(function (idx, element) {\n          // See if we got settings from Drupal for this field.\n          if (typeof settings.cshs !== 'undefined' && typeof settings.cshs[element.id] !== 'undefined') {\n            $(element).simplerSelect(settings.cshs[element.id]);\n          }\n        }\n        );\n    }\n  };\n})(jQuery);\n","/**\n * @file\n * Dropbutton feature.\n */\n\nimport moreVertical from '../../icons/more-vertical.svg';\n\n(function ($, Drupal) {\n  /**\n   * A DropButton presents an HTML list as a button with a primary action.\n   *\n   * All secondary actions beyond the first in the list are presented in a\n   * dropdown list accessible through a toggle arrow associated with the button.\n   *\n   * @constructor Drupal.DropButton\n   *\n   * @param {HTMLElement} dropbutton\n   *   A DOM element.\n   * @param {object} settings\n   *   A list of options including:\n   * @param {string} settings.title\n   *   The text inside the toggle link element. This text is hidden\n   *   from visual UAs.\n   */\n  function DropButton(dropbutton, settings) {\n    // Merge defaults with settings.\n    const options = $.extend(\n      { title: Drupal.t('List additional actions') },\n      settings,\n    );\n    const $dropbutton = $(dropbutton);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$dropbutton = $dropbutton;\n\n    /**\n     * @type {jQuery}\n     */\n    this.$list = $dropbutton.find('.dropbutton');\n\n    /**\n     * Find actions and mark them.\n     *\n     * @type {jQuery}\n     */\n    this.$actions = this.$list.find('.dropbutton-action');\n\n    // Add the special dropdown only if there are hidden actions.\n    if (this.$actions.length > 1) {\n      // Identify the first element of the collection.\n      const $primary = this.$actions.slice(0, 1);\n      // Identify the secondary actions.\n      const $secondary = this.$actions.slice(1);\n      $secondary.addClass('secondary-action');\n      // Add toggle link.\n      $primary.append(Drupal.theme('dropbuttonToggle', options));\n      // Bind mouse events.\n      this.$dropbutton.addClass('dropbutton-multiple').on({\n        /**\n         * Adds a timeout to close the dropdown on mouseleave.\n         *\n         * @ignore\n         */\n        'mouseleave.dropbutton': $.proxy(this.hoverOut, this),\n\n        /**\n         * Clears timeout when mouseout of the dropdown.\n         *\n         * @ignore\n         */\n        'mouseenter.dropbutton': $.proxy(this.hoverIn, this),\n\n        /**\n         * Similar to mouseleave/mouseenter, but for keyboard navigation.\n         *\n         * @ignore\n         */\n        'focusout.dropbutton': $.proxy(this.focusOut, this),\n\n        /**\n         * @ignore\n         */\n        'focusin.dropbutton': $.proxy(this.focusIn, this),\n      });\n    } else {\n      this.$dropbutton.addClass('dropbutton-single');\n    }\n  }\n\n  /**\n   * Delegated callback for opening and closing dropbutton secondary actions.\n   *\n   * @function Drupal.DropButton~dropbuttonClickHandler\n   *\n   * @param {jQuery.Event} e\n   *   The event triggered.\n   */\n  function dropbuttonClickHandler(e) {\n    e.preventDefault();\n    $(e.target)\n      .closest('.dropbutton-wrapper')\n      .toggleClass('open');\n  }\n\n  /**\n   * Process elements with the .dropbutton class on page load.\n   *\n   * @type {Drupal~behavior}\n   *\n   * @prop {Drupal~behaviorAttach} attach\n   *   Attaches dropButton behaviors.\n   */\n  Drupal.behaviors.dropButton = {\n    attach(context, settings) {\n      const $dropbuttons = $(context)\n        .find('.dropbutton-wrapper')\n        .once('dropbutton');\n      if ($dropbuttons.length) {\n        // Adds the delegated handler that will toggle dropdowns on click.\n        const $body = $('body').once('dropbutton-click');\n        if ($body.length) {\n          $body.on('click', '.dropbutton-toggle', dropbuttonClickHandler);\n        }\n        // Initialize all buttons.\n        const il = $dropbuttons.length;\n        for (let i = 0; i < il; i++) {\n          DropButton.dropbuttons.push(\n            new DropButton($dropbuttons[i], settings.dropbutton),\n          );\n        }\n      }\n    },\n  };\n\n  /**\n   * Extend the DropButton constructor.\n   */\n  $.extend(\n    DropButton,\n    /** @lends Drupal.DropButton */ {\n      /**\n       * Store all processed DropButtons.\n       *\n       * @type {Array.<Drupal.DropButton>}\n       */\n      dropbuttons: [],\n    },\n  );\n\n  /**\n   * Extend the DropButton prototype.\n   */\n  $.extend(\n    DropButton.prototype,\n    /** @lends Drupal.DropButton# */ {\n      /**\n       * Toggle the dropbutton open and closed.\n       *\n       * @param {bool} [show]\n       *   Force the dropbutton to open by passing true or to close by\n       *   passing false.\n       */\n      toggle(show) {\n        const isBool = typeof show === 'boolean';\n        show = isBool ? show : !this.$dropbutton.hasClass('open');\n        this.$dropbutton.toggleClass('open', show);\n      },\n\n      /**\n       * @method\n       */\n      hoverIn() {\n        // Clear any previous timer we were using.\n        if (this.timerID) {\n          window.clearTimeout(this.timerID);\n        }\n      },\n\n      /**\n       * @method\n       */\n      hoverOut() {\n        // Wait half a second before closing.\n        this.timerID = window.setTimeout($.proxy(this, 'close'), 500);\n      },\n\n      /**\n       * @method\n       */\n      open() {\n        this.toggle(true);\n      },\n\n      /**\n       * @method\n       */\n      close() {\n        this.toggle(false);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusOut(e) {\n        this.hoverOut.call(this, e);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusIn(e) {\n        this.hoverIn.call(this, e);\n      },\n    },\n  );\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * A toggle is an interactive element often bound to a click handler.\n       *\n       * @param {object} options\n       *   Options object.\n       * @param {string} [options.title]\n       *   The button text.\n       *\n       * @return {string}\n       *   A string representing a DOM fragment.\n       */\n\n      dropbuttonToggle(options) {\n        const dropbuttonClasses = [\n          'dropbutton-toggle',\n          'border-current',\n          'border-l',\n          'pl-2',\n          'flex',\n        ];\n\n        return `<span class=\"${dropbuttonClasses.join(' ')}\">\n          <span class=\"visually-hidden\">${options.title}</span>\n          <button class=\"flex\" type=\"button\">\n            ${moreVertical}\n          </button>\n        </span>`;\n      },\n    },\n  );\n\n  // Expose constructor in the public space.\n  Drupal.DropButton = DropButton;\n})(jQuery, Drupal);\n","/**\n * @file\n * Render standard select with hierarchical options: as set of selects, one for each level of the hierarchy.\n */\nimport chevronDown from '../../icons/chevron-down.svg';\n\n(function ($, pluginName) {\n  'use strict';\n\n  // Create the defaults once.\n  var defaults = {\n    noneLabel: '- Please choose -',\n    noneValue: '_none',\n    labels: []\n  };\n\n  // The actual plugin constructor.\n  function Plugin(element, options) {\n    this.$element = $(element);\n    this.$currentSelect = null;\n\n    this.settings = $.extend({}, defaults, options);\n    this.selectOptions = [];\n\n    this.init();\n  }\n\n  Plugin.prototype = {\n    init: function () {\n      var that = this;\n      // Ensure that we'll clearly initiate a new instance.\n      that.destroy();\n      that.$element.find('option').each(function () {\n        var $option = $(this);\n\n        that.selectOptions.push({\n          value: $option.val(),\n          label: $option.text(),\n          parent: $option.data('parent') || 0,\n          children: []\n        });\n      });\n\n      var tree = that.buildTree(that.selectOptions);\n\n      if (tree === null) {\n        return;\n      }\n\n      var initialValue = that.$element.val();\n      var initialParents = [];\n      var $selectElement = that.createSelect(tree);\n      var $currentSelect = $selectElement;\n\n      if (initialValue) {\n        if (typeof initialValue !== 'string') {\n          // If array, flatten it.\n          initialValue = initialValue.shift();\n        }\n\n        // Get all parents, starting from the initial value.\n        initialParents = that.getAllParents(initialValue);\n        // Reverse the parents, that they start from the root.\n        initialParents.reverse();\n        // Add the current value as the last leave.\n        initialParents.push(initialValue);\n      }\n\n      this.$element.after($selectElement);\n\n      $.each(initialParents, function (i, value) {\n        that.selectSetValue($currentSelect, value);\n\n        var $nextSelect = that.createSelect(that.getOptionInfoByValue(value).children, value, i + 1);\n\n        if (null !== $nextSelect) {\n          $currentSelect.after($nextSelect);\n          $currentSelect = $nextSelect;\n        }\n      });\n\n      // Hide the original.\n      that.$element.hide();\n    },\n\n    /**\n     * Destroy CSHS.\n     */\n    destroy: function () {\n      this.selectOptions = [];\n      this.$element.show().nextAll('.select-wrapper').remove();\n    },\n\n    /**\n     * Given an array of options, build an HTML select element.\n     *\n     * @param {HTMLElement[]|HTMLOptionElement[]} options\n     *   List of options.\n     * @param {String} [parent]\n     *   Parent option.\n     * @param {Number} [level]\n     *   Nesting level.\n     *\n     * @return {jQuery|null}\n     *   Newly created element.\n     */\n    createSelect: function (options, parent, level) {\n      if (!options || options.length < 1) {\n        return null;\n      }\n\n      parent = parent || this.settings.noneValue;\n      level = level || 0;\n\n      const required = this.$element.attr('required');\n\n      const wrapperClasses = [\n        'select-wrapper',\n        'relative',\n      ];\n\n      const chevronClasses = [\n        'pointer-events-none',\n        'absolute',\n        'inset-y-0',\n        'right-0',\n        'flex',\n        'items-center',\n        'px-2',\n      ];\n\n      if (required) chevronClasses.push('text-red-900');\n\n      const chevronElement = `\n      <div class=\"${chevronClasses.join(' ')}\">\n      ${chevronDown}\n      </div>\n      `;\n\n      const selectClasses = [\n        'simpler-select',\n        'w-full',\n      ];\n\n      const selectElement = `<select class=\"${selectClasses.join(' ')}\">`\n\n      var that = this;\n      var $select = $(selectElement).addClass(that.$element.attr('class'));\n      var $wrapper = $(`<div class=\"${wrapperClasses.join(' ')}\">`);\n\n      if (that.$element.hasClass('error')) {\n        $select.addClass('error');\n      }\n\n      // Always add the \"_none\" option.\n      $select.append('<option value=\"' + that.settings.noneValue + '\" data-parent-value=\"' + parent + '\">' + that.settings.noneLabel + '</option>');\n\n      $.each(options, function (i, option) {\n        // Do not add \"_none\" option (already added by code above).\n        if (option.value != that.settings.noneValue) {\n          var $option = $('<option>')\n            .val(option.value)\n            // Remove dashes from the beginning, then set the label.\n            .text(option.label.replace(/(- )+/, ''));\n\n          if (option.children.length) {\n            $option.addClass('has-children');\n          }\n\n          $select.append($option);\n        }\n      });\n\n      $select.change(function () {\n        that.$currentSelect = $(this);\n        // Remove deeper selects.\n        that.selectRemoveNext(that.$currentSelect);\n\n        // Get the selected value and also set the original drop-down.\n        var $selected = that.$currentSelect.find('option:selected');\n        var selectedValue = $selected.val();\n        var parentValue = $selected.data('parent-value');\n\n        if (undefined === parentValue) {\n          parentValue = selectedValue;\n        }\n\n        that.$element\n          .val(parentValue)\n          .change();\n\n        if (selectedValue == that.settings.noneValue) {\n          return;\n        }\n\n        // Build new child select.\n        var optionInfo = that.getOptionInfoByValue(selectedValue);\n\n        if (undefined !== optionInfo.children) {\n          that.addSelectAfter(that.createSelect(optionInfo.children, selectedValue, that.selectGetLevel()));\n        }\n      });\n\n      if (that.settings.labels[level]) {\n        $wrapper.append('<label>' + that.settings.labels[level] + '</label>');\n      }\n\n      $wrapper.append($select);\n      $wrapper.append(chevronElement);\n\n      return $wrapper;\n    },\n\n    /**\n     * Given an flat array an tree is built.\n     *\n     * @param {Object[]} array\n     *   Options list.\n     * @param {Object} [parent]\n     *   Parent option.\n     * @param {Array} [tree]\n     *   Existing options.\n     *\n     * @return {Array}\n     *   Options tree.\n     */\n    buildTree: function (array, parent, tree) {\n      tree = tree || [];\n      parent = parent || { value: 0 };\n\n      var children = $.grep(array, function (child) {\n        // Here must be no strict comparison!\n        return undefined !== child && child.parent == parent.value;\n      });\n\n      if (children.length) {\n        if (0 == parent.value) {\n          tree = children;\n        }\n        else {\n          parent.children = children;\n        }\n\n        for (var i = 0; i < children.length; i++) {\n          this.buildTree(array, children[i], tree);\n        }\n      }\n\n      return tree;\n    },\n\n    /**\n     * Set the value of a select to the given.\n     *\n     * @param {jQuery} $select\n     *   Wrapper element.\n     * @param {String} value\n     *   New value to set.\n     */\n    selectSetValue: function ($select, value) {\n      $select.find('select').val(value);\n    },\n\n    /**\n     * Remove all following selects.\n     */\n    selectRemoveNext: function () {\n      this.$currentSelect\n        .parents('.select-wrapper')\n        .nextAll('.select-wrapper')\n        .remove();\n    },\n\n    /**\n     * Add a newSelect after the currentSelect.\n     *\n     * @param {jQuery} $newSelect\n     *   New \"select\" element.\n     */\n    addSelectAfter: function ($newSelect) {\n      this.$currentSelect.parents('.select-wrapper').after($newSelect);\n    },\n\n    /**\n     * Get the hierarchy level of given select.\n     *\n     * @return {Number}\n     *   Number of wrappers.\n     */\n    selectGetLevel: function () {\n      return this.$currentSelect.parents('.form-type-cshs').find('.select-wrapper').length;\n    },\n\n    /**\n     * Given a value build an array of all parents (from leave to root).\n     *\n     * @param {String} value\n     *   Value of option.\n     * @param {Array} [parents]\n     *   Parent options.\n     *\n     * @return {Array}\n     *   Updated parent options list.\n     */\n    getAllParents: function (value, parents) {\n      if (value == this.settings.noneValue) {\n        return [];\n      }\n\n      parents = parents || [];\n\n      var parent = this.getOptionByValue(value).data('parent');\n\n      if (undefined !== parent && 0 != parent) {\n        parents.push(parent);\n        this.getAllParents(this.getOptionByValue(parent).val(), parents);\n      }\n\n      return parents;\n    },\n\n    /**\n     * Tiny helper to get the option jQuery object.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {jQuery}\n     *   Element.\n     */\n    getOptionByValue: function (value) {\n      return this.$element.find('option[value=\"' + value + '\"]');\n    },\n\n    /**\n     * Helper to get the info-object which corresponds to an option value.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {Object}\n     *   Element.\n     */\n    getOptionInfoByValue: function (value) {\n      var optionInfo = {};\n\n      $.each(this.selectOptions, function (idx, option) {\n        if (option.value == value) {\n          optionInfo = option;\n          return false;\n        }\n      });\n\n      return optionInfo;\n    }\n  };\n\n  // A really lightweight plugin wrapper around the constructor,\n  // preventing against multiple instantiations.\n  $.fn[pluginName] = function (options) {\n    this.each(function () {\n      if (!$.data(this, 'plugin_' + pluginName)) {\n        $.data(this, 'plugin_' + pluginName, new Plugin(this, options));\n      }\n    });\n\n    return this;\n  };\n})(jQuery, 'simplerSelect');\n","/**\n * @file\n * Provide dragging capabilities to admin uis.\n */\n\n/**\n * Triggers when weights columns are toggled.\n *\n * @event columnschange\n */\nimport move from '../../icons/move.svg';\nimport info from '../../icons/info.svg';\n\n(function ($, Drupal, drupalSettings) {\n  /**\n   * Store the state of weight columns display for all tables.\n   *\n   * Default value is to hide weight columns.\n   */\n  let showWeight = JSON.parse(\n    localStorage.getItem('Drupal.tableDrag.showWeight'),\n  );\n\n  /**\n   * Drag and drop table rows with field manipulation.\n   *\n   * Using the drupal_attach_tabledrag() function, any table with weights or\n   * parent relationships may be made into draggable tables. Columns containing\n   * a field may optionally be hidden, providing a better user experience.\n   *\n   * Created tableDrag instances may be modified with custom behaviors by\n   * overriding the .onDrag, .onDrop, .row.onSwap, and .row.onIndent methods.\n   * See blocks.js for an example of adding additional functionality to\n   * tableDrag.\n   *\n   * @type {Drupal~behavior}\n   */\n  Drupal.behaviors.tableDrag = {\n    attach(context, settings) {\n      function initTableDrag(table, base) {\n        if (table.length) {\n          // Create the new tableDrag instance. Save in the Drupal variable\n          // to allow other scripts access to the object.\n          Drupal.tableDrag[base] = new Drupal.tableDrag(\n            table[0],\n            settings.tableDrag[base],\n          );\n        }\n      }\n\n      Object.keys(settings.tableDrag || {}).forEach(base => {\n        initTableDrag(\n          $(context)\n            .find(`#${base}`)\n            .once('tabledrag'),\n          base,\n        );\n      });\n    },\n  };\n\n  /**\n   * Provides table and field manipulation.\n   *\n   * @constructor\n   *\n   * @param {HTMLElement} table\n   *   DOM object for the table to be made draggable.\n   * @param {object} tableSettings\n   *   Settings for the table added via drupal_add_dragtable().\n   */\n  Drupal.tableDrag = function (table, tableSettings) {\n    const self = this;\n    const $table = $(table);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$table = $(table);\n\n    /**\n     *\n     * @type {HTMLElement}\n     */\n    this.table = table;\n\n    /**\n     * @type {object}\n     */\n    this.tableSettings = tableSettings;\n\n    /**\n     * Used to hold information about a current drag operation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.dragObject = null;\n\n    /**\n     * Provides operations for row manipulation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.rowObject = null;\n\n    /**\n     * Remember the previous element.\n     *\n     * @type {?HTMLElement}\n     */\n    this.oldRowElement = null;\n\n    /**\n     * Used to determine up or down direction from last mouse move.\n     *\n     * @type {number}\n     */\n    this.oldY = 0;\n\n    /**\n     * Whether anything in the entire table has changed.\n     *\n     * @type {bool}\n     */\n    this.changed = false;\n\n    /**\n     * Maximum amount of allowed parenting.\n     *\n     * @type {number}\n     */\n    this.maxDepth = 0;\n\n    /**\n     * Direction of the table.\n     *\n     * @type {number}\n     */\n    this.rtl = $(this.table).css('direction') === 'rtl' ? -1 : 1;\n\n    /**\n     *\n     * @type {bool}\n     */\n    this.striping = $(this.table).data('striping') === 1;\n\n    /**\n     * Configure the scroll settings.\n     *\n     * @type {object}\n     *\n     * @prop {number} amount\n     * @prop {number} interval\n     * @prop {number} trigger\n     */\n    this.scrollSettings = { amount: 4, interval: 50, trigger: 70 };\n\n    /**\n     *\n     * @type {?number}\n     */\n    this.scrollInterval = null;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.scrollY = 0;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.windowHeight = 0;\n\n    /**\n     * Check this table's settings for parent relationships.\n     *\n     * For efficiency, large sections of code can be skipped if we don't need to\n     * track horizontal movement and indentations.\n     *\n     * @type {bool}\n     */\n    this.indentEnabled = false;\n    Object.keys(tableSettings || {}).forEach(group => {\n      Object.keys(tableSettings[group] || {}).forEach(n => {\n        if (tableSettings[group][n].relationship === 'parent') {\n          this.indentEnabled = true;\n        }\n        if (tableSettings[group][n].limit > 0) {\n          this.maxDepth = tableSettings[group][n].limit;\n        }\n      });\n    });\n    if (this.indentEnabled) {\n      /**\n       * Total width of indents, set in makeDraggable.\n       *\n       * @type {number}\n       */\n      this.indentCount = 1;\n      // Find the width of indentations to measure mouse movements against.\n      // Because the table doesn't need to start with any indentations, we\n      // manually append 2 indentations in the first draggable row, measure\n      // the offset, then remove.\n      const indent = Drupal.theme('tableDragIndentation');\n      const testRow = $('<tr/>')\n        .addClass('draggable')\n        .appendTo(table);\n      const testCell = $('<td/>')\n        .appendTo(testRow)\n        .prepend(indent)\n        .prepend(indent);\n      const $indentation = testCell.find('.js-indentation');\n\n      /**\n       *\n       * @type {number}\n       */\n      this.indentAmount =\n        $indentation.get(1).offsetLeft - $indentation.get(0).offsetLeft;\n      testRow.remove();\n    }\n\n    // Make each applicable row draggable.\n    // Match immediate children of the parent element to allow nesting.\n    $table.find('> tr.draggable, > tbody > tr.draggable').each(function () {\n      self.makeDraggable(this);\n    });\n\n    const buttonClasses = [\n      'tabledrag-toggle-weight',\n      'appearance-none',\n      'ml-auto',\n      'px-4',\n      'py-3',\n      'border',\n      'border-transparent',\n      'rounded-lg',\n      'shadow',\n      'bg-cyan-500',\n      'text-white',\n      'hover:bg-cyan-600',\n      'focus:outline-none',\n      'focus:shadow-outline',\n      'focus:bg-cyan-600',\n      'transition',\n      'ease-in-out',\n      'duration-150'\n    ];\n\n    // Add a link before the table for users to show or hide weight columns.\n    $table.before(\n      $(`<button type=\"button\" class=\"${buttonClasses.join(' ')}\"></button>`)\n        .attr(\n          'title',\n          Drupal.t('Re-order rows by numerical weight instead of dragging.'),\n        )\n        .on(\n          'click',\n          $.proxy(function (e) {\n            e.preventDefault();\n            this.toggleColumns();\n          }, this),\n        )\n        .wrap('<div class=\"flex flex-col items-end my-2\"></div>')\n        .parent(),\n    );\n\n    // Initialize the specified columns (for example, weight or parent columns)\n    // to show or hide according to user preference. This aids accessibility\n    // so that, e.g., screen reader users can choose to enter weight values and\n    // manipulate form elements directly, rather than using drag-and-drop..\n    self.initColumns();\n\n    // Add event bindings to the document. The self variable is passed along\n    // as event handlers do not have direct access to the tableDrag object.\n    $(document).on('touchmove', event =>\n      self.dragRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('touchend', event =>\n      self.dropRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('mousemove pointermove', event => self.dragRow(event, self));\n    $(document).on('mouseup pointerup', event => self.dropRow(event, self));\n\n    // React to localStorage event showing or hiding weight columns.\n    $(window).on(\n      'storage',\n      $.proxy(function (e) {\n        // Only react to 'Drupal.tableDrag.showWeight' value change.\n        if (e.originalEvent.key === 'Drupal.tableDrag.showWeight') {\n          // This was changed in another window, get the new value for this\n          // window.\n          showWeight = JSON.parse(e.originalEvent.newValue);\n          this.displayColumns(showWeight);\n        }\n      }, this),\n    );\n  };\n\n  /**\n   * Initialize columns containing form elements to be hidden by default.\n   *\n   * Identify and mark each cell with a CSS class so we can easily toggle\n   * show/hide it. Finally, hide columns if user does not have a\n   * 'Drupal.tableDrag.showWeight' localStorage value.\n   */\n  Drupal.tableDrag.prototype.initColumns = function () {\n    const $table = this.$table;\n    let hidden;\n    let cell;\n    let columnIndex;\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Find the first field in this group.\n      Object.keys(this.tableSettings[group]).some(tableSetting => {\n        const field = $table\n          .find(`.${this.tableSettings[group][tableSetting].target}`)\n          .eq(0);\n        if (field.length && this.tableSettings[group][tableSetting].hidden) {\n          hidden = this.tableSettings[group][tableSetting].hidden;\n          cell = field.closest('td');\n          return true;\n        }\n        return false;\n      });\n\n      // Mark the column containing this field so it can be hidden.\n      if (hidden && cell[0]) {\n        // Add 1 to our indexes. The nth-child selector is 1 based, not 0\n        // based. Match immediate children of the parent element to allow\n        // nesting.\n        columnIndex =\n          cell\n            .parent()\n            .find('> td')\n            .index(cell.get(0)) + 1;\n        $table\n          .find('> thead > tr, > tbody > tr, > tr')\n          .each(this.addColspanClass(columnIndex));\n      }\n    });\n    this.displayColumns(showWeight);\n  };\n\n  /**\n   * Mark cells that have colspan.\n   *\n   * In order to adjust the colspan instead of hiding them altogether.\n   *\n   * @param {number} columnIndex\n   *   The column index to add colspan class to.\n   *\n   * @return {function}\n   *   Function to add colspan class.\n   */\n  Drupal.tableDrag.prototype.addColspanClass = function (columnIndex) {\n    return function () {\n      // Get the columnIndex and adjust for any colspans in this row.\n      const $row = $(this);\n      let index = columnIndex;\n      const cells = $row.children();\n      let cell;\n      cells.each(function (n) {\n        if (n < index && this.colSpan && this.colSpan > 1) {\n          index -= this.colSpan - 1;\n        }\n      });\n      if (index > 0) {\n        cell = cells.filter(`:nth-child(${index})`);\n        if (cell[0].colSpan && cell[0].colSpan > 1) {\n          // If this cell has a colspan, mark it so we can reduce the colspan.\n          cell.addClass('tabledrag-has-colspan');\n        } else {\n          // Mark this cell so we can hide it.\n          cell.addClass('tabledrag-hide');\n        }\n      }\n    };\n  };\n\n  /**\n   * Hide or display weight columns. Triggers an event on change.\n   *\n   * @fires event:columnschange\n   *\n   * @param {bool} displayWeight\n   *   'true' will show weight columns.\n   */\n  Drupal.tableDrag.prototype.displayColumns = function (displayWeight) {\n    if (displayWeight) {\n      this.showColumns();\n    }\n    // Default action is to hide columns.\n    else {\n      this.hideColumns();\n    }\n    // Trigger an event to allow other scripts to react to this display change.\n    // Force the extra parameter as a bool.\n    $('table')\n      .findOnce('tabledrag')\n      .trigger('columnschange', !!displayWeight);\n  };\n\n  /**\n   * Toggle the weight column depending on 'showWeight' value.\n   *\n   * Store only default override.\n   */\n  Drupal.tableDrag.prototype.toggleColumns = function () {\n    showWeight = !showWeight;\n    this.displayColumns(showWeight);\n    if (showWeight) {\n      // Save default override.\n      localStorage.setItem('Drupal.tableDrag.showWeight', showWeight);\n    } else {\n      // Reset the value to its default.\n      localStorage.removeItem('Drupal.tableDrag.showWeight');\n    }\n  };\n\n  /**\n   * Hide the columns containing weight/parent form elements.\n   *\n   * Undo showColumns().\n   */\n  Drupal.tableDrag.prototype.hideColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Hide weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', 'none');\n    // Show TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', '');\n    // Reduce the colspan of any effected multi-span columns.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan - 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Show row weights'));\n  };\n\n  /**\n   * Show the columns containing weight/parent form elements.\n   *\n   * Undo hideColumns().\n   */\n  Drupal.tableDrag.prototype.showColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Show weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', '');\n    // Hide TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', 'none');\n    // Increase the colspan for any columns where it was previously reduced.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan + 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Hide row weights'));\n  };\n\n  /**\n   * Find the target used within a particular row and group.\n   *\n   * @param {string} group\n   *   Group selector.\n   * @param {HTMLElement} row\n   *   The row HTML element.\n   *\n   * @return {object}\n   *   The table row settings.\n   */\n  Drupal.tableDrag.prototype.rowSettings = function (group, row) {\n    const field = $(row).find(`.${group}`);\n    const tableSettingsGroup = this.tableSettings[group];\n    return Object.keys(tableSettingsGroup)\n      .map(delta => {\n        const targetClass = tableSettingsGroup[delta].target;\n        let rowSettings;\n        if (field.is(`.${targetClass}`)) {\n          // Return a copy of the row settings.\n          rowSettings = {};\n          Object.keys(tableSettingsGroup[delta]).forEach(n => {\n            rowSettings[n] = tableSettingsGroup[delta][n];\n          });\n        }\n        return rowSettings;\n      })\n      .filter(rowSetting => rowSetting)[0];\n  };\n\n  /**\n   * Take an item and add event handlers to make it become draggable.\n   *\n   * @param {HTMLElement} item\n   *   The item to add event handlers to.\n   */\n  Drupal.tableDrag.prototype.makeDraggable = function (item) {\n    const self = this;\n    const $item = $(item);\n    // Add a class to the title link.\n    $item\n      .find('td:first-of-type')\n      .find('a')\n      .addClass('menu-item__link');\n    // Create the handle.\n    const handleClasses = [\n      'tabledrag-handle',\n      'handle',\n      'cursor-move',\n      'align-middle',\n      'float-left'\n    ];\n    const handle = $(\n      `<span class=\"${handleClasses.join(' ')}\">${move}</span>`,\n    ).attr('title', Drupal.t('Drag to re-order'));\n    // Insert the handle after indentations (if any).\n    const $indentationLast = $item\n      .find('td:first-of-type')\n      .find('.js-indentation')\n      .eq(-1);\n    if ($indentationLast.length) {\n      $indentationLast.after(handle);\n      // Update the total width of indentation in this entire table.\n      self.indentCount = Math.max(\n        $item.find('.js-indentation').length,\n        self.indentCount,\n      );\n    } else {\n      $item\n        .find('td')\n        .eq(0)\n        .prepend(handle);\n    }\n\n    handle.on('mousedown touchstart pointerdown', event => {\n      event.preventDefault();\n      if (event.originalEvent.type === 'touchstart') {\n        event = event.originalEvent.touches[0];\n      }\n      self.dragStart(event, self, item);\n    });\n\n    // Prevent the anchor tag from jumping us to the top of the page.\n    handle.on('click', e => {\n      e.preventDefault();\n    });\n\n    // Set blur cleanup when a handle is focused.\n    handle.on('focus', () => {\n      self.safeBlur = true;\n    });\n\n    // On blur, fire the same function as a touchend/mouseup. This is used to\n    // update values after a row has been moved through the keyboard support.\n    handle.on('blur', event => {\n      if (self.rowObject && self.safeBlur) {\n        self.dropRow(event, self);\n      }\n    });\n\n    // Add arrow-key support to the handle.\n    handle.on('keydown', event => {\n      // If a rowObject doesn't yet exist and this isn't the tab key.\n      if (event.keyCode !== 9 && !self.rowObject) {\n        self.rowObject = new self.row(\n          item,\n          'keyboard',\n          self.indentEnabled,\n          self.maxDepth,\n          true,\n        );\n      }\n\n      let keyChange = false;\n      let groupHeight;\n\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Safari left arrow.\n        case 63234:\n          keyChange = true;\n          self.rowObject.indent(-1 * self.rtl);\n          break;\n\n        // Up arrow.\n        case 38:\n        // Safari up arrow.\n        case 63232: {\n          let $previousRow = $(self.rowObject.element).prev('tr:first-of-type');\n          let previousRow = $previousRow.get(0);\n          while (previousRow && $previousRow.is(':hidden')) {\n            $previousRow = $(previousRow).prev('tr:first-of-type');\n            previousRow = $previousRow.get(0);\n          }\n          if (previousRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'up';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the previous top-level row.\n              groupHeight = 0;\n              while (\n                previousRow &&\n                $previousRow.find('.js-indentation').length\n              ) {\n                $previousRow = $(previousRow).prev('tr:first-of-type');\n                previousRow = $previousRow.get(0);\n                groupHeight += $previousRow.is(':hidden')\n                  ? 0\n                  : previousRow.offsetHeight;\n              }\n              if (previousRow) {\n                self.rowObject.swap('before', previousRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, -groupHeight);\n              }\n            } else if (\n              self.table.tBodies[0].rows[0] !== previousRow ||\n              $previousRow.is('.draggable')\n            ) {\n              // Swap with the previous row (unless previous row is the first\n              // one and undraggable).\n              self.rowObject.swap('before', previousRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, -parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n        // Right arrow.\n        case 39:\n        // Safari right arrow.\n        case 63235:\n          keyChange = true;\n          self.rowObject.indent(self.rtl);\n          break;\n\n        // Down arrow.\n        case 40:\n        // Safari down arrow.\n        case 63233: {\n          let $nextRow = $(self.rowObject.group)\n            .eq(-1)\n            .next('tr:first-of-type');\n          let nextRow = $nextRow.get(0);\n          while (nextRow && $nextRow.is(':hidden')) {\n            $nextRow = $(nextRow).next('tr:first-of-type');\n            nextRow = $nextRow.get(0);\n          }\n          if (nextRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'down';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the next group (necessarily a top-level one).\n              groupHeight = 0;\n              const nextGroup = new self.row(\n                nextRow,\n                'keyboard',\n                self.indentEnabled,\n                self.maxDepth,\n                false,\n              );\n              if (nextGroup) {\n                $(nextGroup.group).each(function () {\n                  groupHeight += $(this).is(':hidden') ? 0 : this.offsetHeight;\n                });\n                const nextGroupRow = $(nextGroup.group)\n                  .eq(-1)\n                  .get(0);\n                self.rowObject.swap('after', nextGroupRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, parseInt(groupHeight, 10));\n              }\n            } else {\n              // Swap with the next row.\n              self.rowObject.swap('after', nextRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n      }\n\n      /* eslint-enable no-fallthrough */\n\n      if (self.rowObject && self.rowObject.changed === true) {\n        $(item).addClass('drag');\n        if (self.oldRowElement) {\n          $(self.oldRowElement).removeClass('drag-previous');\n        }\n        self.oldRowElement = item;\n        if (self.striping === true) {\n          self.restripeTable();\n        }\n        self.onDrag();\n      }\n\n      // Returning false if we have an arrow key to prevent scrolling.\n      if (keyChange) {\n        return false;\n      }\n    });\n\n    // Compatibility addition, return false on keypress to prevent unwanted\n    // scrolling. IE and Safari will suppress scrolling on keydown, but all\n    // other browsers need to return false on keypress.\n    // http://www.quirksmode.org/js/keys.html\n    handle.on('keypress', event => {\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Up arrow.\n        case 38:\n        // Right arrow.\n        case 39:\n        // Down arrow.\n        case 40:\n          return false;\n      }\n\n      /* eslint-enable no-fallthrough */\n    });\n  };\n\n  /**\n   * Pointer event initiator, creates drag object and information.\n   *\n   * @param {jQuery.Event} event\n   *   The event object that trigger the drag.\n   * @param {Drupal.tableDrag} self\n   *   The drag handle.\n   * @param {HTMLElement} item\n   *   The item that that is being dragged.\n   */\n  Drupal.tableDrag.prototype.dragStart = function (event, self, item) {\n    // Create a new dragObject recording the pointer information.\n    self.dragObject = {};\n    self.dragObject.initOffset = self.getPointerOffset(item, event);\n    self.dragObject.initPointerCoords = self.pointerCoords(event);\n    if (self.indentEnabled) {\n      self.dragObject.indentPointerPos = self.dragObject.initPointerCoords;\n    }\n\n    // If there's a lingering row object from the keyboard, remove its focus.\n    if (self.rowObject) {\n      $(self.rowObject.element)\n        .find('a.tabledrag-handle')\n        .trigger('blur');\n    }\n\n    // Create a new rowObject for manipulation of this row.\n    self.rowObject = new self.row(\n      item,\n      'pointer',\n      self.indentEnabled,\n      self.maxDepth,\n      true,\n    );\n\n    // Save the position of the table.\n    self.table.topY = $(self.table).offset().top;\n    self.table.bottomY = self.table.topY + self.table.offsetHeight;\n\n    const dragClasses = [\n      'bg-cyan-100'\n    ];\n\n    // Add classes to the handle and row.\n    $(item).addClass(dragClasses.join(' '));\n\n    // Set the document to use the move cursor during drag.\n    $('body').addClass('drag');\n    if (self.oldRowElement) {\n      $(self.oldRowElement).removeClass('drag-previous');\n    }\n  };\n\n  /**\n   * Pointer movement handler, bound to document.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   *\n   * @return {bool|undefined}\n   *   Undefined if no dragObject is defined, false otherwise.\n   */\n  Drupal.tableDrag.prototype.dragRow = function (event, self) {\n    if (self.dragObject) {\n      self.currentPointerCoords = self.pointerCoords(event);\n      const y = self.currentPointerCoords.y - self.dragObject.initOffset.y;\n      const x = self.currentPointerCoords.x - self.dragObject.initOffset.x;\n\n      // Check for row swapping and vertical scrolling.\n      if (y !== self.oldY) {\n        self.rowObject.direction = y > self.oldY ? 'down' : 'up';\n        // Update the old value.\n        self.oldY = y;\n        // Check if the window should be scrolled (and how fast).\n        const scrollAmount = self.checkScroll(self.currentPointerCoords.y);\n        // Stop any current scrolling.\n        clearInterval(self.scrollInterval);\n        // Continue scrolling if the mouse has moved in the scroll direction.\n        if (\n          (scrollAmount > 0 && self.rowObject.direction === 'down') ||\n          (scrollAmount < 0 && self.rowObject.direction === 'up')\n        ) {\n          self.setScroll(scrollAmount);\n        }\n\n        // If we have a valid target, perform the swap and restripe the table.\n        const currentRow = self.findDropTargetRow(x, y);\n        if (currentRow) {\n          if (self.rowObject.direction === 'down') {\n            self.rowObject.swap('after', currentRow, self);\n          } else {\n            self.rowObject.swap('before', currentRow, self);\n          }\n          if (self.striping === true) {\n            self.restripeTable();\n          }\n        }\n      }\n\n      // Similar to row swapping, handle indentations.\n      if (self.indentEnabled) {\n        const xDiff =\n          self.currentPointerCoords.x - self.dragObject.indentPointerPos.x;\n        // Set the number of indentations the pointer has been moved left or\n        // right.\n        const indentDiff = Math.round(xDiff / self.indentAmount);\n        // Indent the row with our estimated diff, which may be further\n        // restricted according to the rows around this row.\n        const indentChange = self.rowObject.indent(indentDiff);\n        // Update table and pointer indentations.\n        self.dragObject.indentPointerPos.x +=\n          self.indentAmount * indentChange * self.rtl;\n        self.indentCount = Math.max(self.indentCount, self.rowObject.indents);\n      }\n\n      return false;\n    }\n  };\n\n  /**\n   * Pointerup behavior.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   */\n  Drupal.tableDrag.prototype.dropRow = function (event, self) {\n    let droppedRow;\n    let $droppedRow;\n\n    // Drop row functionality.\n    if (self.rowObject !== null) {\n      droppedRow = self.rowObject.element;\n      $droppedRow = $(droppedRow);\n      // The row is already in the right place so we just release it.\n      if (self.rowObject.changed === true) {\n        // Update the fields in the dropped row.\n        self.updateFields(droppedRow);\n\n        // If a setting exists for affecting the entire group, update all the\n        // fields in the entire dragged group.\n        Object.keys(self.tableSettings || {}).forEach(group => {\n          const rowSettings = self.rowSettings(group, droppedRow);\n          if (rowSettings.relationship === 'group') {\n            Object.keys(self.rowObject.children || {}).forEach(n => {\n              self.updateField(self.rowObject.children[n], group);\n            });\n          }\n        });\n\n        self.rowObject.markChanged();\n        if (self.changed === false) {\n          $(Drupal.theme('tableDragChangedWarning'))\n            .insertBefore(self.table)\n            .hide()\n            .fadeIn('slow');\n          self.changed = true;\n        }\n      }\n\n      if (self.indentEnabled) {\n        self.rowObject.removeIndentClasses();\n      }\n      if (self.oldRowElement) {\n        $(self.oldRowElement).removeClass('drag-previous');\n      }\n      $droppedRow.removeClass('drag').addClass('drag-previous');\n      self.oldRowElement = droppedRow;\n      self.onDrop();\n      self.rowObject = null;\n    }\n\n    // Functionality specific only to pointerup events.\n    if (self.dragObject !== null) {\n      self.dragObject = null;\n      $('body').removeClass('drag');\n      clearInterval(self.scrollInterval);\n    }\n  };\n\n  /**\n   * Get the coordinates from the event (allowing for browser differences).\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.pointerCoords = function (event) {\n    if (event.pageX || event.pageY) {\n      return { x: event.pageX, y: event.pageY };\n    }\n    return {\n      x: event.clientX + document.body.scrollLeft - document.body.clientLeft,\n      y: event.clientY + document.body.scrollTop - document.body.clientTop,\n    };\n  };\n\n  /**\n   * Get the event offset from the target element.\n   *\n   * Given a target element and a pointer event, get the event offset from that\n   * element. To do this we need the element's position and the target position.\n   *\n   * @param {HTMLElement} target\n   *   The target HTML element.\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.getPointerOffset = function (target, event) {\n    const docPos = $(target).offset();\n    const pointerPos = this.pointerCoords(event);\n    return { x: pointerPos.x - docPos.left, y: pointerPos.y - docPos.top };\n  };\n\n  /**\n   * Find the row the mouse is currently over.\n   *\n   * This row is then taken and swapped with the one being dragged.\n   *\n   * @param {number} x\n   *   The x coordinate of the mouse on the page (not the screen).\n   * @param {number} y\n   *   The y coordinate of the mouse on the page (not the screen).\n   *\n   * @return {*}\n   *   The drop target row, if found.\n   */\n  Drupal.tableDrag.prototype.findDropTargetRow = function (x, y) {\n    const rows = $(this.table.tBodies[0].rows).not(':hidden');\n    for (let n = 0; n < rows.length; n++) {\n      let row = rows[n];\n      let $row = $(row);\n      const rowY = $row.offset().top;\n      let rowHeight;\n      // Because Safari does not report offsetHeight on table rows, but does on\n      // table cells, grab the firstChild of the row and use that instead.\n      // http://jacob.peargrove.com/blog/2006/technical/table-row-offsettop-bug-in-safari.\n      if (row.offsetHeight === 0) {\n        rowHeight = parseInt(row.firstChild.offsetHeight, 10) / 2;\n      }\n      // Other browsers.\n      else {\n        rowHeight = parseInt(row.offsetHeight, 10) / 2;\n      }\n\n      // Because we always insert before, we need to offset the height a bit.\n      if (y > rowY - rowHeight && y < rowY + rowHeight) {\n        if (this.indentEnabled) {\n          // Check that this row is not a child of the row being dragged.\n          if (\n            Object.keys(this.rowObject.group).some(\n              o => this.rowObject.group[o] === row,\n            )\n          ) {\n            return null;\n          }\n        }\n        // Do not allow a row to be swapped with itself.\n        else if (row === this.rowObject.element) {\n          return null;\n        }\n\n        // Check that swapping with this row is allowed.\n        if (!this.rowObject.isValidSwap(row)) {\n          return null;\n        }\n\n        // We may have found the row the mouse just passed over, but it doesn't\n        // take into account hidden rows. Skip backwards until we find a\n        // draggable row.\n        while ($row.is(':hidden') && $row.prev('tr').is(':hidden')) {\n          $row = $row.prev('tr:first-of-type');\n          row = $row.get(0);\n        }\n        return row;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * After the row is dropped, update the table fields.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   */\n  Drupal.tableDrag.prototype.updateFields = function (changedRow) {\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Each group may have a different setting for relationship, so we find\n      // the source rows for each separately.\n      this.updateField(changedRow, group);\n    });\n  };\n\n  /**\n   * After the row is dropped, update a single table field.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   * @param {string} group\n   *   The settings group on which field updates will occur.\n   */\n  Drupal.tableDrag.prototype.updateField = function (changedRow, group) {\n    let rowSettings = this.rowSettings(group, changedRow);\n    const $changedRow = $(changedRow);\n    let sourceRow;\n    let $previousRow;\n    let previousRow;\n    let useSibling;\n    // Set the row as its own target.\n    if (\n      rowSettings.relationship === 'self' ||\n      rowSettings.relationship === 'group'\n    ) {\n      sourceRow = changedRow;\n    }\n    // Siblings are easy, check previous and next rows.\n    else if (rowSettings.relationship === 'sibling') {\n      $previousRow = $changedRow.prev('tr:first-of-type');\n      previousRow = $previousRow.get(0);\n      const $nextRow = $changedRow.next('tr:first-of-type');\n      const nextRow = $nextRow.get(0);\n      sourceRow = changedRow;\n      if (\n        $previousRow.is('.draggable') &&\n        $previousRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $previousRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = previousRow;\n          }\n        } else {\n          sourceRow = previousRow;\n        }\n      } else if (\n        $nextRow.is('.draggable') &&\n        $nextRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $nextRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = nextRow;\n          }\n        } else {\n          sourceRow = nextRow;\n        }\n      }\n    }\n    // Parents, look up the tree until we find a field not in this group.\n    // Go up as many parents as indentations in the changed row.\n    else if (rowSettings.relationship === 'parent') {\n      $previousRow = $changedRow.prev('tr');\n      previousRow = $previousRow;\n      while (\n        $previousRow.length &&\n        $previousRow.find('.js-indentation').length >= this.rowObject.indents\n      ) {\n        $previousRow = $previousRow.prev('tr');\n        previousRow = $previousRow;\n      }\n      // If we found a row.\n      if ($previousRow.length) {\n        sourceRow = $previousRow.get(0);\n      }\n      // Otherwise we went all the way to the left of the table without finding\n      // a parent, meaning this item has been placed at the root level.\n      else {\n        // Use the first row in the table as source, because it's guaranteed to\n        // be at the root level. Find the first item, then compare this row\n        // against it as a sibling.\n        sourceRow = $(this.table)\n          .find('tr.draggable:first-of-type')\n          .get(0);\n        if (sourceRow === this.rowObject.element) {\n          sourceRow = $(this.rowObject.group[this.rowObject.group.length - 1])\n            .next('tr.draggable')\n            .get(0);\n        }\n        useSibling = true;\n      }\n    }\n\n    // Because we may have moved the row from one category to another,\n    // take a look at our sibling and borrow its sources and targets.\n    this.copyDragClasses(sourceRow, changedRow, group);\n    rowSettings = this.rowSettings(group, changedRow);\n\n    // In the case that we're looking for a parent, but the row is at the top\n    // of the tree, copy our sibling's values.\n    if (useSibling) {\n      rowSettings.relationship = 'sibling';\n      rowSettings.source = rowSettings.target;\n    }\n\n    const targetClass = `.${rowSettings.target}`;\n    const targetElement = $changedRow.find(targetClass).get(0);\n\n    // Check if a target element exists in this row.\n    if (targetElement) {\n      const sourceClass = `.${rowSettings.source}`;\n      const sourceElement = $(sourceClass, sourceRow).get(0);\n      switch (rowSettings.action) {\n        case 'depth':\n          // Get the depth of the target row.\n          targetElement.value = $(sourceElement)\n            .closest('tr')\n            .find('.js-indentation').length;\n          break;\n\n        case 'match':\n          // Update the value.\n          targetElement.value = sourceElement.value;\n          break;\n\n        case 'order': {\n          const siblings = this.rowObject.findSiblings(rowSettings);\n          if ($(targetElement).is('select')) {\n            // Get a list of acceptable values.\n            const values = [];\n            $(targetElement)\n              .find('option')\n              .each(function () {\n                values.push(this.value);\n              });\n            const maxVal = values[values.length - 1];\n            // Populate the values in the siblings.\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                // If there are more items than possible values, assign the\n                // maximum value to the row.\n                if (values.length > 0) {\n                  this.value = values.shift();\n                } else {\n                  this.value = maxVal;\n                }\n              });\n          } else {\n            // Assume a numeric input field.\n            let weight =\n              parseInt(\n                $(siblings[0])\n                  .find(targetClass)\n                  .val(),\n                10,\n              ) || 0;\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                this.value = weight;\n                weight++;\n              });\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * Copy all tableDrag related classes from one row to another.\n   *\n   * Copy all special tableDrag classes from one row's form elements to a\n   * different one, removing any special classes that the destination row\n   * may have had.\n   *\n   * @param {HTMLElement} sourceRow\n   *   The element for the source row.\n   * @param {HTMLElement} targetRow\n   *   The element for the target row.\n   * @param {string} group\n   *   The group selector.\n   */\n  Drupal.tableDrag.prototype.copyDragClasses = function (\n    sourceRow,\n    targetRow,\n    group,\n  ) {\n    const sourceElement = $(sourceRow).find(`.${group}`);\n    const targetElement = $(targetRow).find(`.${group}`);\n    if (sourceElement.length && targetElement.length) {\n      targetElement[0].className = sourceElement[0].className;\n    }\n  };\n\n  /**\n   * Check the suggested scroll of the table.\n   *\n   * @param {number} cursorY\n   *   The Y position of the cursor.\n   *\n   * @return {number}\n   *   The suggested scroll.\n   */\n  Drupal.tableDrag.prototype.checkScroll = function (cursorY) {\n    const de = document.documentElement;\n    const b = document.body;\n\n    const windowHeight =\n      window.innerHeight ||\n      (de.clientHeight && de.clientWidth !== 0\n        ? de.clientHeight\n        : b.offsetHeight);\n    this.windowHeight = windowHeight;\n    let scrollY;\n    if (document.all) {\n      scrollY = !de.scrollTop ? b.scrollTop : de.scrollTop;\n    } else {\n      scrollY = window.pageYOffset ? window.pageYOffset : window.scrollY;\n    }\n    this.scrollY = scrollY;\n    const trigger = this.scrollSettings.trigger;\n    let delta = 0;\n\n    // Return a scroll speed relative to the edge of the screen.\n    if (cursorY - scrollY > windowHeight - trigger) {\n      delta = trigger / (windowHeight + scrollY - cursorY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return delta * this.scrollSettings.amount;\n    }\n    if (cursorY - scrollY < trigger) {\n      delta = trigger / (cursorY - scrollY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return -delta * this.scrollSettings.amount;\n    }\n  };\n\n  /**\n   * Set the scroll for the table.\n   *\n   * @param {number} scrollAmount\n   *   The amount of scroll to apply to the window.\n   */\n  Drupal.tableDrag.prototype.setScroll = function (scrollAmount) {\n    const self = this;\n\n    this.scrollInterval = setInterval(() => {\n      // Update the scroll values stored in the object.\n      self.checkScroll(self.currentPointerCoords.y);\n      const aboveTable = self.scrollY > self.table.topY;\n      const belowTable = self.scrollY + self.windowHeight < self.table.bottomY;\n      if (\n        (scrollAmount > 0 && belowTable) ||\n        (scrollAmount < 0 && aboveTable)\n      ) {\n        window.scrollBy(0, scrollAmount);\n      }\n    }, this.scrollSettings.interval);\n  };\n\n  /**\n   * Command to restripe table properly.\n   */\n  Drupal.tableDrag.prototype.restripeTable = function () {\n    // :even and :odd are reversed because jQuery counts from 0 and\n    // we count from 1, so we're out of sync.\n    // Match immediate children of the parent element to allow nesting.\n    $(this.table)\n      .find('> tbody > tr.draggable, > tr.draggable')\n      .filter(':visible')\n      .filter(':odd')\n      .removeClass('odd')\n      .addClass('even')\n      .end()\n      .filter(':even')\n      .removeClass('even')\n      .addClass('odd');\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row begins dragging.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrag = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is dropped.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrop = function () {\n    return null;\n  };\n\n  /**\n   * Constructor to make a new object to manipulate a table row.\n   *\n   * @param {HTMLElement} tableRow\n   *   The DOM element for the table row we will be manipulating.\n   * @param {string} method\n   *   The method in which this row is being moved. Either 'keyboard' or\n   *   'mouse'.\n   * @param {bool} indentEnabled\n   *   Whether the containing table uses indentations. Used for optimizations.\n   * @param {number} maxDepth\n   *   The maximum amount of indentations this row may contain.\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   */\n  Drupal.tableDrag.prototype.row = function (\n    tableRow,\n    method,\n    indentEnabled,\n    maxDepth,\n    addClasses,\n  ) {\n    const $tableRow = $(tableRow);\n\n    this.element = tableRow;\n    this.method = method;\n    this.group = [tableRow];\n    this.groupDepth = $tableRow.find('.js-indentation').length;\n    this.changed = false;\n    this.table = $tableRow.closest('table')[0];\n    this.indentEnabled = indentEnabled;\n    this.maxDepth = maxDepth;\n    // Direction the row is being moved.\n    this.direction = '';\n    if (this.indentEnabled) {\n      this.indents = $tableRow.find('.js-indentation').length;\n      this.children = this.findChildren(addClasses);\n      this.group = $.merge(this.group, this.children);\n      // Find the depth of this entire group.\n      for (let n = 0; n < this.group.length; n++) {\n        this.groupDepth = Math.max(\n          $(this.group[n]).find('.js-indentation').length,\n          this.groupDepth,\n        );\n      }\n    }\n  };\n\n  /**\n   * Find all children of rowObject by indentation.\n   *\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   *\n   * @return {Array}\n   *   An array of children of the row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findChildren = function (addClasses) {\n    const parentIndentation = this.indents;\n    let currentRow = $(this.element, this.table).next('tr.draggable');\n    const rows = [];\n    let child = 0;\n\n    function rowIndentation(indentNum, el) {\n      const self = $(el);\n      if (child === 1 && indentNum === parentIndentation) {\n        self.addClass('tree-child-first');\n      }\n      if (indentNum === parentIndentation) {\n        self.addClass('tree-child');\n      } else if (indentNum > parentIndentation) {\n        self.addClass('tree-child-horizontal');\n      }\n    }\n\n    while (currentRow.length) {\n      // A greater indentation indicates this is a child.\n      if (currentRow.find('.js-indentation').length > parentIndentation) {\n        child++;\n        rows.push(currentRow[0]);\n        if (addClasses) {\n          currentRow.find('.js-indentation').each(rowIndentation);\n        }\n      } else {\n        break;\n      }\n      currentRow = currentRow.next('tr.draggable');\n    }\n    if (addClasses && rows.length) {\n      $(rows[rows.length - 1])\n        .find(`.js-indentation:nth-child(${parentIndentation + 1})`)\n        .addClass('tree-child-last');\n    }\n    return rows;\n  };\n\n  /**\n   * Ensure that two rows are allowed to be swapped.\n   *\n   * @param {HTMLElement} row\n   *   DOM object for the row being considered for swapping.\n   *\n   * @return {bool}\n   *   Whether the swap is a valid swap or not.\n   */\n  Drupal.tableDrag.prototype.row.prototype.isValidSwap = function (row) {\n    const $row = $(row);\n    if (this.indentEnabled) {\n      let prevRow;\n      let nextRow;\n      if (this.direction === 'down') {\n        prevRow = row;\n        nextRow = $row.next('tr').get(0);\n      } else {\n        prevRow = $row.prev('tr').get(0);\n        nextRow = row;\n      }\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n\n      // We have an invalid swap if the valid indentations interval is empty.\n      if (this.interval.min > this.interval.max) {\n        return false;\n      }\n    }\n\n    // Do not let an un-draggable first row have anything put before it.\n    if (this.table.tBodies[0].rows[0] === row && $row.is(':not(.draggable)')) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Perform the swap between two rows.\n   *\n   * @param {string} position\n   *   Whether the swap will occur 'before' or 'after' the given row.\n   * @param {HTMLElement} row\n   *   DOM element what will be swapped with the row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.swap = function (position, row) {\n    // Makes sure only DOM object are passed to Drupal.detachBehaviors().\n    this.group.forEach(row => {\n      Drupal.detachBehaviors(row, drupalSettings, 'move');\n    });\n    $(row)[position](this.group);\n    // Makes sure only DOM object are passed to Drupal.attachBehaviors()s.\n    this.group.forEach(row => {\n      Drupal.attachBehaviors(row, drupalSettings);\n    });\n    this.changed = true;\n    this.onSwap(row);\n  };\n\n  /**\n   * Determine the valid indentations interval for the row at a given position.\n   *\n   * @param {?HTMLElement} prevRow\n   *   DOM object for the row before the tested position\n   *   (or null for first position in the table).\n   * @param {?HTMLElement} nextRow\n   *   DOM object for the row after the tested position\n   *   (or null for last position in the table).\n   *\n   * @return {object}\n   *   An object with the keys `min` and `max` to indicate the valid indent\n   *   interval.\n   */\n  Drupal.tableDrag.prototype.row.prototype.validIndentInterval = function (\n    prevRow,\n    nextRow,\n  ) {\n    const $prevRow = $(prevRow);\n    let maxIndent;\n\n    // Minimum indentation:\n    // Do not orphan the next row.\n    const minIndent = nextRow ? $(nextRow).find('.js-indentation').length : 0;\n\n    // Maximum indentation:\n    if (\n      !prevRow ||\n      $prevRow.is(':not(.draggable)') ||\n      $(this.element).is('.tabledrag-root')\n    ) {\n      // Do not indent:\n      // - the first row in the table,\n      // - rows dragged below a non-draggable row,\n      // - 'root' rows.\n      maxIndent = 0;\n    } else {\n      // Do not go deeper than as a child of the previous row.\n      maxIndent =\n        $prevRow.find('.js-indentation').length +\n        ($prevRow.is('.tabledrag-leaf') ? 0 : 1);\n      // Limit by the maximum allowed depth for the table.\n      if (this.maxDepth) {\n        maxIndent = Math.min(\n          maxIndent,\n          this.maxDepth - (this.groupDepth - this.indents),\n        );\n      }\n    }\n\n    return { min: minIndent, max: maxIndent };\n  };\n\n  /**\n   * Indent a row within the legal bounds of the table.\n   *\n   * @param {number} indentDiff\n   *   The number of additional indentations proposed for the row (can be\n   *   positive or negative). This number will be adjusted to nearest valid\n   *   indentation level for the row.\n   *\n   * @return {number}\n   *   The number of indentations applied.\n   */\n  Drupal.tableDrag.prototype.row.prototype.indent = function (indentDiff) {\n    const $group = $(this.group);\n    // Determine the valid indentations interval if not available yet.\n    if (!this.interval) {\n      const prevRow = $(this.element)\n        .prev('tr')\n        .get(0);\n      const nextRow = $group\n        .eq(-1)\n        .next('tr')\n        .get(0);\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n    }\n\n    // Adjust to the nearest valid indentation.\n    let indent = this.indents + indentDiff;\n    indent = Math.max(indent, this.interval.min);\n    indent = Math.min(indent, this.interval.max);\n    indentDiff = indent - this.indents;\n\n    for (let n = 1; n <= Math.abs(indentDiff); n++) {\n      // Add or remove indentations.\n      if (indentDiff < 0) {\n        $group.find('.js-indentation:first-of-type').remove();\n        this.indents--;\n      } else {\n        $group\n          .find('td:first-of-type')\n          .prepend(Drupal.theme('tableDragIndentation'));\n        this.indents++;\n      }\n    }\n    if (indentDiff) {\n      // Update indentation for this row.\n      this.changed = true;\n      this.groupDepth += indentDiff;\n      this.onIndent();\n    }\n\n    return indentDiff;\n  };\n\n  /**\n   * Find all siblings for a row.\n   *\n   * According to its subgroup or indentation. Note that the passed-in row is\n   * included in the list of siblings.\n   *\n   * @param {object} rowSettings\n   *   The field settings we're using to identify what constitutes a sibling.\n   *\n   * @return {Array}\n   *   An array of siblings.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findSiblings = function (\n    rowSettings,\n  ) {\n    const siblings = [];\n    const directions = ['prev', 'next'];\n    const rowIndentation = this.indents;\n    let checkRowIndentation;\n    for (let d = 0; d < directions.length; d++) {\n      let checkRow = $(this.element)[directions[d]]();\n      while (checkRow.length) {\n        // Check that the sibling contains a similar target field.\n        if (checkRow.find(`.${rowSettings.target}`)) {\n          // Either add immediately if this is a flat table, or check to ensure\n          // that this row has the same level of indentation.\n          if (this.indentEnabled) {\n            checkRowIndentation = checkRow.find('.js-indentation').length;\n          }\n\n          if (!this.indentEnabled || checkRowIndentation === rowIndentation) {\n            siblings.push(checkRow[0]);\n          } else if (checkRowIndentation < rowIndentation) {\n            // No need to keep looking for siblings when we get to a parent.\n            break;\n          }\n        } else {\n          break;\n        }\n        checkRow = checkRow[directions[d]]();\n      }\n      // Since siblings are added in reverse order for previous, reverse the\n      // completed list of previous siblings. Add the current row and continue.\n      if (directions[d] === 'prev') {\n        siblings.reverse();\n        siblings.push(this.element);\n      }\n    }\n    return siblings;\n  };\n\n  /**\n   * Remove indentation helper classes from the current row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.removeIndentClasses = function () {\n    Object.keys(this.children || {}).forEach(n => {\n      $(this.children[n])\n        .find('.js-indentation')\n        .removeClass('tree-child')\n        .removeClass('tree-child-first')\n        .removeClass('tree-child-last')\n        .removeClass('tree-child-horizontal');\n    });\n  };\n\n  /**\n   * Add an asterisk or other marker to the changed row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.markChanged = function () {\n    const marker = Drupal.theme('tableDragChangedMarker');\n    const cell = $(this.element).find('td:first-of-type');\n    if (cell.find('.tabledrag-changed').length === 0) {\n      cell.append(marker);\n    }\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is indented.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onIndent = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is swapped.\n   *\n   * @param {HTMLElement} swappedRow\n   *   The element for the swapped row.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onSwap = function (swappedRow) {\n    return null;\n  };\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * @return {string}\n       *  Markup for the marker.\n       */\n      tableDragChangedMarker() {\n        const markerClasses = [\n          'tabledrag-changed',\n          'font-bold',\n        ];\n\n        return `\n        <span title=\"${Drupal.t('Changed')}\" class=\"${markerClasses.join(' ')}\">${info}</span>`;\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the indentation.\n       */\n      tableDragIndentation() {\n        return '<div class=\"js-indentation indentation\">&nbsp;</div>';\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the warning.\n       */\n      tableDragChangedWarning() {\n        const warningClasses = [\n          ''\n        ];\n\n        return `\n        <div role=\"alert\" class=\"mb-1 border-l-8 p-4 bg-orange-100 border-orange-500 text-orange-900\">\n          <div class=\"flex items-center\">\n            ${Drupal.theme('tableDragChangedMarker')}\n            <div class=\"mx-3\">\n              ${Drupal.t('You have unsaved changes.')}\n            </div>\n          </div>\n        </div>`;\n      },\n    },\n  );\n})(jQuery, Drupal, drupalSettings);\n"],"sourceRoot":""}