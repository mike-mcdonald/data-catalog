{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./icons/more-vertical.svg","webpack:///./icons/chevron-down.svg","webpack:///./icons/move.svg","webpack:///./icons/info.svg","webpack:///./js/src/alpine.es6.js","webpack:///./node_modules/alpinejs/dist/alpine.js","webpack:///./js/src/cshs.es6.js","webpack:///./js/src/dropbutton.es6.js","webpack:///./js/src/simpler-select.es6.js","webpack:///./js/src/tabledrag.es6.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_defineProperty","obj","configurable","writable","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","arrayUnique","array","a","concat","j","splice","isTesting","navigator","userAgent","includes","debounce","func","wait","timeout","context","this","args","later","clearTimeout","setTimeout","saferEval","expression","dataContext","additionalHelperVariables","Function","values","xAttrRE","isXAttr","attr","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","map","typeMatch","match","valueMatch","modifiers","replace","startsWith","transitionIn","show","forceSkip","attrs","showAttr","settingBothSidesOfTransition","index","indexOf","showCallback","styleValues","duration","modifierValue","origin","first","opacity","scale","second","transitionHelper","transitionHelperIn","directives","enter","find","split","enterStart","enterEnd","transitionClasses","transitionClassesIn","transitionOut","hide","hideCallback","transitionHelperOut","leave","leaveStart","leaveEnd","transitionClassesOut","fallback","rawValue","isNumeric","join","hook1","hook2","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","transitionProperty","trim","transitionDuration","transitionTimingFunction","transition","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","classList","add","remove","start","during","requestAnimationFrame","Number","getComputedStyle","end","isConnected","cleanup","subject","isNaN","handleForDirective","component","initialUpdate","extraVars","tagName","toLowerCase","console","warn","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","iteratorMatch","parseFor","items","ifAttr","evaluateReturnExpression","previousEl","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","xForVars","__x_for","updateElements","clone","document","importNode","content","childElementCount","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","checked","isArray","valueFound","val","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","classNames","className","newClasses","isBooleanAttr","removeAttribute","registerListener","event","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","body","isKeyEvent","keyModifiers","debounceIndex","keyToModifier","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","nextModifier","evaluateCommandExpression","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","multiple","selectedOptions","number","parseFloat","getPrototypeOf","ObjectCreate","ObjectDefineProperty","ObjectDefineProperties","isExtensible","getOwnPropertyNames","preventExtensions","ArrayPush","ArrayConcat","ArrayMap","isUndefined","isFunction","proxyToValueMap","WeakMap","registerProxy","proxy","set","unwrap","replicaOrAny","wrapValue","membrane","valueIsObservable","getProxy","lockShadowTarget","shadowTarget","originalTarget","descriptor","wrapDescriptor","ReactiveProxyHandler","valueObserved","valueMutated","thisArg","argArray","newTarget","shadowIsExtensible","targetIsExtensible","desc","shadowDescriptor","originalDescriptor","unwrapDescriptor","wrapReadOnlyValue","getReadOnlyProxy","ReadOnlyHandler","createShadowTarget","ObjectDotPrototype","defaultValueIsObservable","proto","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","ReactiveMembrane","valueDistortion","objectGraph","unwrappedValue","distorted","getReactiveState","readOnly","reactive","distortedValue","reactiveState","reactiveHandler","Proxy","readOnlyHandler","Component","seedDataForCloning","$el","dataAttr","getAttribute","dataExpression","initExpression","unobservedData","data","wrapDataInObservable","initReturnedCallback","$data","$refs","getRefsProxy","nextTickStack","$nextTick","callback","watchers","$watch","showDirectiveStack","showDirectiveLastElement","pauseReactivity","listenForNewElementsToInitialize","observable","unwrappedData","copy","unwrap$1","self","updateDom","mutationCallback","wrap","fullDotNotationKey","dotNotationParts","reduce","comparisonData","part","is","getUnobservedData","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","walkAndSkipNestedComponents","initializeElement","executeAndClearRemainingShowDirectiveStack","shift","registerListeners","resolveBoundAttributes","updateElement","reverse","thing","Promise","resolve","finish","nestedPromise","promise","then","rightSideOfExpression","registerModelListener","output","innerText","innerHTML","display","removeProperty","handle","handleShowDirective","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleIfDirective","$dispatch","getDispatchFunction","methodReference","saferEvalNoReturn","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","ref","Alpine","async","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector","newEl","deferLoadingAlpine","factory","$","Drupal","behaviors","cshs","attach","settings","once","each","idx","element","id","simplerSelect","jQuery","DropButton","dropbutton","extend","title","$dropbutton","$list","$actions","$primary","slice","addClass","append","theme","on","hoverOut","hoverIn","focusOut","focusIn","dropbuttonClickHandler","toggleClass","dropButton","$dropbuttons","$body","il","dropbuttons","toggle","hasClass","timerID","open","close","dropbuttonToggle","moreVertical","pluginName","defaults","noneLabel","noneValue","labels","Plugin","$element","$currentSelect","selectOptions","init","that","destroy","$option","label","parent","children","tree","buildTree","initialValue","initialParents","$selectElement","createSelect","getAllParents","after","selectSetValue","$nextSelect","getOptionInfoByValue","nextAll","level","chevronClasses","chevronElement","chevronDown","selectElement","$select","$wrapper","change","selectRemoveNext","$selected","selectedValue","parentValue","optionInfo","addSelectAfter","selectGetLevel","grep","child","parents","$newSelect","getOptionByValue","fn","drupalSettings","showWeight","JSON","parse","localStorage","getItem","tableDrag","base","table","initTableDrag","tableSettings","$table","dragObject","rowObject","oldRowElement","oldY","changed","maxDepth","rtl","css","striping","scrollSettings","amount","interval","trigger","scrollInterval","scrollY","windowHeight","indentEnabled","relationship","limit","indentCount","indent","testRow","appendTo","$indentation","prepend","indentAmount","offsetLeft","makeDraggable","before","toggleColumns","initColumns","dragRow","originalEvent","touches","dropRow","newValue","displayColumns","hidden","cell","columnIndex","some","tableSetting","field","eq","addColspanClass","$row","cells","colSpan","displayWeight","showColumns","hideColumns","findOnce","setItem","removeItem","$tables","rowSettings","row","tableSettingsGroup","delta","targetClass","rowSetting","item","$item","move","$indentationLast","Math","max","dragStart","safeBlur","keyCode","groupHeight","keyChange","$previousRow","prev","previousRow","direction","swap","scrollBy","tBodies","rows","parseInt","$nextRow","next","nextRow","nextGroup","nextGroupRow","removeClass","restripeTable","onDrag","initOffset","getPointerOffset","initPointerCoords","pointerCoords","indentPointerPos","topY","offset","top","bottomY","currentPointerCoords","y","x","scrollAmount","checkScroll","clearInterval","setScroll","currentRow","findDropTargetRow","xDiff","indentDiff","round","indentChange","indents","droppedRow","$droppedRow","updateFields","updateField","markChanged","fadeIn","removeIndentClasses","onDrop","pageX","pageY","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","docPos","pointerPos","left","not","rowY","rowHeight","firstChild","isValidSwap","changedRow","$changedRow","sourceRow","useSibling","copyDragClasses","targetElement","sourceClass","sourceElement","action","siblings","findSiblings","maxVal","weight","targetRow","cursorY","de","documentElement","b","innerHeight","clientHeight","clientWidth","all","pageYOffset","setInterval","aboveTable","belowTable","tableRow","method","addClasses","$tableRow","groupDepth","findChildren","merge","parentIndentation","rowIndentation","indentNum","prevRow","validIndentInterval","min","position","detachBehaviors","attachBehaviors","onSwap","$prevRow","maxIndent","minIndent","$group","abs","onIndent","directions","checkRowIndentation","checkRow","marker","swappedRow","tableDragChangedMarker","info","tableDragIndentation","tableDragChangedWarning"],"mappings":"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","file":"js/main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"fill-current stroke-current h-6 w-6 feather feather-more-vertical\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"5\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"19\\\" r=\\\"1\\\"></circle></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"fill-current h-6 w-6\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" class=\\\"fill-current stroke-current h-6 w-6\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-move\\\"><polyline points=\\\"5 9 2 12 5 15\\\"></polyline><polyline points=\\\"9 5 12 2 15 5\\\"></polyline><polyline points=\\\"15 19 12 22 9 19\\\"></polyline><polyline points=\\\"19 9 22 12 19 15\\\"></polyline><line x1=\\\"2\\\" y1=\\\"12\\\" x2=\\\"22\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"2\\\" x2=\\\"12\\\" y2=\\\"22\\\"></line></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"stroke-current h-6 w-6 feather feather-info\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"></circle><line x1=\\\"12\\\" y1=\\\"16\\\" x2=\\\"12\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"8\\\" x2=\\\"12\\\" y2=\\\"8\\\"></line></svg>\"","/**\n * This file exists only to import the alpine.js package into the theme.\n */\nimport 'alpinejs';\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Alpine = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  // Thanks @stimulus:\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\n  function domReady() {\n    return new Promise(resolve => {\n      if (document.readyState == \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  function arrayUnique(array) {\n    var a = array.concat();\n\n    for (var i = 0; i < a.length; ++i) {\n      for (var j = i + 1; j < a.length; ++j) {\n        if (a[i] === a[j]) a.splice(j--, 1);\n      }\n    }\n\n    return a;\n  }\n  function isTesting() {\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\n  }\n  function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\n  }\n  function walk(el, callback) {\n    if (callback(el) === false) return;\n    let node = el.firstElementChild;\n\n    while (node) {\n      walk(node, callback);\n      node = node.nextElementSibling;\n    }\n  }\n  function debounce(func, wait) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        func.apply(context, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n  function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`)(dataContext, ...Object.values(additionalHelperVariables));\n  }\n  function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\n    // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\n    if (Object.keys(dataContext).includes(expression)) {\n      let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n\n      if (typeof methodReference === 'function') {\n        return methodReference.call(dataContext, additionalHelperVariables['$event']);\n      }\n    }\n\n    return new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n  }\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)\\b/;\n  function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\n    return xAttrRE.test(name);\n  }\n  function getXAttrs(el, type) {\n    return Array.from(el.attributes).filter(isXAttr).map(attr => {\n      const name = replaceAtAndColonWithStandardSyntax(attr.name);\n      const typeMatch = name.match(xAttrRE);\n      const valueMatch = name.match(/:([a-zA-Z\\-:]+)/);\n      const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n      return {\n        type: typeMatch ? typeMatch[1] : null,\n        value: valueMatch ? valueMatch[1] : null,\n        modifiers: modifiers.map(i => i.replace('.', '')),\n        expression: attr.value\n      };\n    }).filter(i => {\n      // If no type is passed in for filtering, bypass filter\n      if (!type) return true;\n      return i.type === type;\n    });\n  }\n  function isBooleanAttr(attrName) {\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\n    // Array roughly ordered by estimated usage\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\n    return booleanAttributes.includes(attrName);\n  }\n  function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n      return name.replace('@', 'x-on:');\n    } else if (name.startsWith(':')) {\n      return name.replace(':', 'x-bind:');\n    }\n\n    return name;\n  }\n  function transitionIn(el, show, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show();\n    const attrs = getXAttrs(el, 'transition');\n    const showAttr = getXAttrs(el, 'show')[0]; // If this is triggered by a x-show.transition.\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\n\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\n      transitionHelperIn(el, modifiers, show); // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.length > 0) {\n      transitionClassesIn(el, attrs, show);\n    } else {\n      // If neither, just show that damn thing.\n      show();\n    }\n  }\n  function transitionOut(el, hide, forceSkip = false) {\n    if (forceSkip) return hide();\n    const attrs = getXAttrs(el, 'transition');\n    const showAttr = getXAttrs(el, 'show')[0];\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers;\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide);\n    } else if (attrs.length > 0) {\n      transitionClassesOut(el, attrs, hide);\n    } else {\n      hide();\n    }\n  }\n  function transitionHelperIn(el, modifiers, showCallback) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n      duration: modifierValue(modifiers, 'duration', 150),\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      },\n      second: {\n        opacity: 1,\n        scale: 100\n      }\n    };\n    transitionHelper(el, modifiers, showCallback, () => {}, styleValues);\n  }\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\n    const styleValues = {\n      duration: duration,\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 1,\n        scale: 100\n      },\n      second: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      }\n    };\n    transitionHelper(el, modifiers, () => {}, hideCallback, styleValues);\n  }\n\n  function modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\n\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\n    if (!rawValue) return fallback;\n\n    if (key === 'scale') {\n      // Check if the very next value is NOT a number and return the fallback.\n      // If x-show.transition.scale, we'll use the default scale value.\n      // That is how a user opts out of the opacity transition.\n      if (!isNumeric(rawValue)) return fallback;\n    }\n\n    if (key === 'duration') {\n      // Support x-show.transition.duration.500ms && duration.500\n      let match = rawValue.match(/([0-9]+)ms/);\n      if (match) return match[1];\n    }\n\n    if (key === 'origin') {\n      // Support chaining origin directions: x-show.transition.top.right\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\n      }\n    }\n\n    return rawValue;\n  }\n\n  function transitionHelper(el, modifiers, hook1, hook2, styleValues) {\n    // If the user set these style values, we'll put them back when we're done with them.\n    const opacityCache = el.style.opacity;\n    const transformCache = el.style.transform;\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n\n    const stages = {\n      start() {\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\n      },\n\n      during() {\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        if (transitionOpacity) el.style.opacity = opacityCache;\n        if (transitionScale) el.style.transform = transformCache;\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\n        el.style.transitionProperty = null;\n        el.style.transitionDuration = null;\n        el.style.transitionTimingFunction = null;\n      }\n\n    };\n    transition(el, stages);\n  }\n  function transitionClassesIn(el, directives, showCallback) {\n    const enter = (directives.find(i => i.value === 'enter') || {\n      expression: ''\n    }).expression.split(' ').filter(i => i !== '');\n    const enterStart = (directives.find(i => i.value === 'enter-start') || {\n      expression: ''\n    }).expression.split(' ').filter(i => i !== '');\n    const enterEnd = (directives.find(i => i.value === 'enter-end') || {\n      expression: ''\n    }).expression.split(' ').filter(i => i !== '');\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {});\n  }\n  function transitionClassesOut(el, directives, hideCallback) {\n    const leave = (directives.find(i => i.value === 'leave') || {\n      expression: ''\n    }).expression.split(' ').filter(i => i !== '');\n    const leaveStart = (directives.find(i => i.value === 'leave-start') || {\n      expression: ''\n    }).expression.split(' ').filter(i => i !== '');\n    const leaveEnd = (directives.find(i => i.value === 'leave-end') || {\n      expression: ''\n    }).expression.split(' ').filter(i => i !== '');\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback);\n  }\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    const originalClasses = el.__x_original_classes || [];\n    const stages = {\n      start() {\n        el.classList.add(...classesStart);\n      },\n\n      during() {\n        el.classList.add(...classesDuring);\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        // Don't remove classes that were in the original class attribute.\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\n        el.classList.add(...classesEnd);\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\n      }\n\n    };\n    transition(el, stages);\n  }\n  function transition(el, stages) {\n    stages.start();\n    stages.during();\n    requestAnimationFrame(() => {\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\n      // for every single transition property. Let's grab the first one and call it a day.\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\n      stages.show();\n      requestAnimationFrame(() => {\n        stages.end();\n        setTimeout(() => {\n          stages.hide(); // Adding an \"isConnected\" check, in case the callback\n          // removed the element from the DOM.\n\n          if (el.isConnected) {\n            stages.cleanup();\n          }\n        }, duration);\n      });\n    });\n  }\n  function isNumeric(subject) {\n    return !isNaN(subject);\n  }\n\n  function handleForDirective(component, el, expression, initialUpdate, extraVars) {\n    if (el.tagName.toLowerCase() !== 'template') console.warn('Alpine: [x-for] directive should only be added to <template> tags.');\n    const {\n      single,\n      bunch,\n      iterator1,\n      iterator2\n    } = parseFor(expression);\n    var items;\n    const ifAttr = getXAttrs(el, 'if')[0];\n\n    if (ifAttr && !component.evaluateReturnExpression(el, ifAttr.expression)) {\n      // If there is an \"x-if\" attribute in conjunction with an x-for,\n      // AND x-if resolves to false, just pretend the x-for is\n      // empty, effectively hiding it.\n      items = [];\n    } else {\n      items = component.evaluateReturnExpression(el, bunch, extraVars);\n    } // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n\n\n    var previousEl = el;\n    items.forEach((i, index, group) => {\n      const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group);\n      let currentEl = previousEl.nextElementSibling; // Let's check and see if the x-for has already generated an element last time it ran.\n\n      if (currentEl && currentEl.__x_for_key !== undefined) {\n        // If the the key's don't match.\n        if (currentEl.__x_for_key !== currentKey) {\n          // We'll look ahead to see if we can find it further down.\n          var tmpCurrentEl = currentEl;\n\n          while (tmpCurrentEl) {\n            // If we found it later in the DOM.\n            if (tmpCurrentEl.__x_for_key === currentKey) {\n              // Move it to where it's supposed to be in the DOM.\n              el.parentElement.insertBefore(tmpCurrentEl, currentEl); // And set it as the current element as if we just created it.\n\n              currentEl = tmpCurrentEl;\n              break;\n            }\n\n            tmpCurrentEl = tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined ? tmpCurrentEl.nextElementSibling : false;\n          }\n        } // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n\n\n        delete currentEl.__x_for_key;\n        let xForVars = {};\n        xForVars[single] = i;\n        if (iterator1) xForVars[iterator1] = index;\n        if (iterator2) xForVars[iterator2] = group;\n        currentEl.__x_for = xForVars;\n        component.updateElements(currentEl, () => {\n          return currentEl.__x_for;\n        });\n      } else {\n        // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n        // extra items in the array that need to be added as new elements.\n        // Let's create a clone from the template.\n        const clone = document.importNode(el.content, true);\n        if (clone.childElementCount !== 1) console.warn('Alpine: <template> tag with [x-for] encountered with multiple element roots. Make sure <template> only has a single child node.'); // Insert it where we are in the DOM.\n\n        el.parentElement.insertBefore(clone, currentEl); // Set it as the current element.\n\n        currentEl = previousEl.nextElementSibling; // And transition it in if it's not the first page load.\n\n        transitionIn(currentEl, () => {}, initialUpdate); // Now, let's walk the new DOM node and initialize everything,\n        // including new nested components.\n        // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n        // always up to date for listener handlers that don't get re-registered.\n\n        let xForVars = {};\n        xForVars[single] = i;\n        if (iterator1) xForVars[iterator1] = index;\n        if (iterator2) xForVars[iterator2] = group;\n        currentEl.__x_for = xForVars;\n        component.initializeElements(currentEl, () => {\n          return currentEl.__x_for;\n        });\n      }\n\n      currentEl.__x_for_key = currentKey;\n      previousEl = currentEl;\n    }); // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n\n    var nextElementFromOldLoop = previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined ? previousEl.nextElementSibling : false;\n\n    while (nextElementFromOldLoop) {\n      const nextElementFromOldLoopImmutable = nextElementFromOldLoop;\n      const nextSibling = nextElementFromOldLoop.nextElementSibling;\n      transitionOut(nextElementFromOldLoop, () => {\n        nextElementFromOldLoopImmutable.remove();\n      });\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\n    }\n  } // This was taken from VueJS 2.* core. Thanks Vue!\n\n  function parseFor(expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n    const stripParensRE = /^\\(|\\)$/g;\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n    const inMatch = expression.match(forAliasRE);\n    if (!inMatch) return;\n    const res = {};\n    res.bunch = inMatch[2].trim();\n    const single = inMatch[1].trim().replace(stripParensRE, '');\n    const iteratorMatch = single.match(forIteratorRE);\n\n    if (iteratorMatch) {\n      res.single = single.replace(forIteratorRE, '').trim();\n      res.iterator1 = iteratorMatch[1].trim();\n\n      if (iteratorMatch[2]) {\n        res.iterator2 = iteratorMatch[2].trim();\n      }\n    } else {\n      res.single = single;\n    }\n\n    return res;\n  }\n\n  function getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0];\n    let keyAliases = {\n      [single]: i\n    };\n    if (iterator1) keyAliases[iterator1] = index;\n    if (iterator2) keyAliases[iterator2] = group;\n    return keyAttr ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases) : index;\n  }\n\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\n\n    if (attrName === 'value') {\n      // If nested model key is undefined, set the default value to empty string.\n      if (value === undefined && expression.match(/\\./).length) {\n        value = '';\n      }\n\n      if (el.type === 'radio') {\n        el.checked = el.value == value;\n      } else if (el.type === 'checkbox') {\n        if (Array.isArray(value)) {\n          // I'm purposely not using Array.includes here because it's\n          // strict, and because of Numeric/String mis-casting, I\n          // want the \"includes\" to be \"fuzzy\".\n          let valueFound = false;\n          value.forEach(val => {\n            if (val == el.value) {\n              valueFound = true;\n            }\n          });\n          el.checked = valueFound;\n        } else {\n          el.checked = !!value;\n        } // If we are explicitly binding a string to the :value, set the string,\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\n        // automatically.\n\n\n        if (typeof value === 'string') {\n          el.value = value;\n        }\n      } else if (el.tagName === 'SELECT') {\n        updateSelect(el, value);\n      } else {\n        el.value = value;\n      }\n    } else if (attrName === 'class') {\n      if (Array.isArray(value)) {\n        const originalClasses = el.__x_original_classes || [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\n      } else if (typeof value === 'object') {\n        Object.keys(value).forEach(classNames => {\n          if (value[classNames]) {\n            classNames.split(' ').forEach(className => el.classList.add(className));\n          } else {\n            classNames.split(' ').forEach(className => el.classList.remove(className));\n          }\n        });\n      } else {\n        const originalClasses = el.__x_original_classes || [];\n        const newClasses = value.split(' ');\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\n      }\n    } else if (isBooleanAttr(attrName)) {\n      // Boolean attributes have to be explicitly added and removed, not just set.\n      if (!!value) {\n        el.setAttribute(attrName, '');\n      } else {\n        el.removeAttribute(attrName);\n      }\n    } else {\n      el.setAttribute(attrName, value);\n    }\n  }\n\n  function updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => {\n      return value + '';\n    });\n    Array.from(el.options).forEach(option => {\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\n    });\n  }\n\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n      el.style.display = 'none';\n    };\n\n    const show = () => {\n      if (el.style.length === 1 && el.style.display === 'none') {\n        el.removeAttribute('style');\n      } else {\n        el.style.removeProperty('display');\n      }\n    };\n\n    if (initialUpdate === true) {\n      if (value) {\n        show();\n      } else {\n        hide();\n      }\n\n      return;\n    }\n\n    const handle = resolve => {\n      if (!value) {\n        if (el.style.display !== 'none') {\n          transitionOut(el, () => {\n            resolve(() => {\n              hide();\n            });\n          });\n        } else {\n          resolve(() => {});\n        }\n      } else {\n        if (el.style.display !== '') {\n          transitionIn(el, () => {\n            show();\n          });\n        } // Resolve immediately, only hold up parent `x-show`s for hidin.\n\n\n        resolve(() => {});\n      }\n    }; // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n    // If x-show.immediate, foregoe the waiting.\n\n\n    if (modifiers.includes('immediate')) {\n      handle(finish => finish());\n      return;\n    } // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n\n\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\n      component.executeAndClearRemainingShowDirectiveStack();\n    } // We'll push the handler onto a stack to be handled later.\n\n\n    component.showDirectiveStack.push(handle);\n    component.showDirectiveLastElement = el;\n  }\n\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`);\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\n\n    if (expressionResult && !elementHasAlreadyBeenAdded) {\n      const clone = document.importNode(el.content, true);\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\n      el.nextElementSibling.__x_inserted_me = true;\n      transitionIn(el.nextElementSibling, () => {}, initialUpdate);\n      component.initializeElements(el.nextElementSibling, extraVars);\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\n      transitionOut(el.nextElementSibling, () => {\n        el.nextElementSibling.remove();\n      }, initialUpdate);\n    }\n  }\n\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n      let handler = e => {\n        // Don't do anything if the click came form the element or within it.\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\n\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\n        // is from outside it, let's run the expression.\n\n        runListenerHandler(component, expression, e, extraVars);\n\n        if (modifiers.includes('once')) {\n          document.removeEventListener(event, handler);\n        }\n      }; // Listen for this event at the root level.\n\n\n      document.addEventListener(event, handler);\n    } else {\n      let listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\n\n      let handler = e => {\n        // Remove this global event handler if the element that declared it\n        // has been removed. It's now stale.\n        if (listenerTarget === window || listenerTarget === document) {\n          if (!document.body.contains(el)) {\n            listenerTarget.removeEventListener(event, handler);\n            return;\n          }\n        }\n\n        if (isKeyEvent(event)) {\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n            return;\n          }\n        }\n\n        if (modifiers.includes('prevent')) e.preventDefault();\n        if (modifiers.includes('stop')) e.stopPropagation();\n        const returnValue = runListenerHandler(component, expression, e, extraVars);\n\n        if (returnValue === false) {\n          e.preventDefault();\n        } else {\n          if (modifiers.includes('once')) {\n            listenerTarget.removeEventListener(event, handler);\n          }\n        }\n      };\n\n      if (modifiers.includes('debounce')) {\n        let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\n        let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\n        handler = debounce(handler, wait);\n      }\n\n      listenerTarget.addEventListener(event, handler);\n    }\n  }\n\n  function runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n      return _objectSpread2({}, extraVars(), {\n        '$event': e\n      });\n    });\n  }\n\n  function isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event);\n  }\n\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\n    });\n\n    if (keyModifiers.includes('debounce')) {\n      let debounceIndex = keyModifiers.indexOf('debounce');\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\n    } // If no modifier is specified, we'll call it a press.\n\n\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\n\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\n\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n    if (selectedSystemKeyModifiers.length > 0) {\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n        // Alias \"cmd\" and \"super\" to \"meta\"\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\n        return e[`${modifier}Key`];\n      }); // If all the modifiers selected are pressed, ...\n\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n        // AND the remaining key is pressed as well. It's a press.\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\n      }\n    } // We'll call it NOT a valid keypress.\n\n\n    return true;\n  }\n\n  function keyToModifier(key) {\n    switch (key) {\n      case '/':\n        return 'slash';\n\n      case ' ':\n      case 'Spacebar':\n        return 'space';\n\n      default:\n        return kebabCase(key);\n    }\n  }\n\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n      return _objectSpread2({}, extraVars(), {\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\n      });\n    });\n  }\n\n  function generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n      // Radio buttons only work properly when they share a name attribute.\n      // People might assume we take care of that for them, because\n      // they already set a shared \"x-model\" attribute.\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\n    }\n\n    return (event, currentValue) => {\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n      if (event instanceof CustomEvent && event.detail) {\n        return event.detail;\n      } else if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle it's value inside the array.\n        if (Array.isArray(currentValue)) {\n          return event.target.checked ? currentValue.concat([event.target.value]) : currentValue.filter(i => i !== event.target.value);\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\n          const rawValue = option.value || option.text;\n          const number = rawValue ? parseFloat(rawValue) : null;\n          return isNaN(number) ? rawValue : number;\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        const rawValue = event.target.value;\n        const number = rawValue ? parseFloat(rawValue) : null;\n        return modifiers.includes('number') ? isNaN(number) ? rawValue : number : modifiers.includes('trim') ? rawValue.trim() : rawValue;\n      }\n    };\n  }\n\n  /**\n   * Copyright (C) 2017 salesforce.com, inc.\n   */\n  const { isArray } = Array;\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\n  function isUndefined(obj) {\n      return obj === undefined;\n  }\n  function isFunction(obj) {\n      return typeof obj === 'function';\n  }\n  function isObject(obj) {\n      return typeof obj === 'object';\n  }\n  const proxyToValueMap = new WeakMap();\n  function registerProxy(proxy, value) {\n      proxyToValueMap.set(proxy, value);\n  }\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\n  function wrapValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n  }\n  /**\n   * Unwrap property descriptors will set value on original descriptor\n   * We only need to unwrap if value is specified\n   * @param descriptor external descrpitor provided to define new property on original value\n   */\n  function unwrapDescriptor(descriptor) {\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = unwrap(descriptor.value);\n      }\n      return descriptor;\n  }\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      targetKeys.forEach((key) => {\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n          // We do not need to wrap the descriptor if configurable\n          // Because we can deal with wrapping it when user goes through\n          // Get own property descriptor. There is also a chance that this descriptor\n          // could change sometime in the future, so we can defer wrapping\n          // until we need to\n          if (!descriptor.configurable) {\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n          }\n          ObjectDefineProperty(shadowTarget, key, descriptor);\n      });\n      preventExtensions(shadowTarget);\n  }\n  class ReactiveProxyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          const oldValue = originalTarget[key];\n          if (oldValue !== value) {\n              originalTarget[key] = value;\n              valueMutated(originalTarget, key);\n          }\n          else if (key === 'length' && isArray(originalTarget)) {\n              // fix for issue #236: push will add the new index, and by the time length\n              // is updated, the internal length is already equal to the new length value\n              // therefore, the oldValue is equal to the value. This is the forking logic\n              // to support this use case.\n              valueMutated(originalTarget, key);\n          }\n          return true;\n      }\n      deleteProperty(shadowTarget, key) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          delete originalTarget[key];\n          valueMutated(originalTarget, key);\n          return true;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      isExtensible(shadowTarget) {\n          const shadowIsExtensible = isExtensible(shadowTarget);\n          if (!shadowIsExtensible) {\n              return shadowIsExtensible;\n          }\n          const { originalTarget, membrane } = this;\n          const targetIsExtensible = isExtensible(originalTarget);\n          if (!targetIsExtensible) {\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\n          }\n          return targetIsExtensible;\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getPrototypeOf(shadowTarget) {\n          const { originalTarget } = this;\n          return getPrototypeOf(originalTarget);\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = this.membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value, setter or getter (if available) cannot observe\n          // mutations, just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapValue);\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          const { originalTarget, membrane } = this;\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\n          preventExtensions(originalTarget);\n          return true;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          const { originalTarget, membrane } = this;\n          const { valueMutated } = membrane;\n          const { configurable } = descriptor;\n          // We have to check for value in descriptor\n          // because Object.freeze(proxy) calls this method\n          // with only { configurable: false, writeable: false }\n          // Additionally, method will only be called with writeable:false\n          // if the descriptor has a value, as opposed to getter/setter\n          // So we can just check if writable is present and then see if\n          // value is present. This eliminates getter and setter descriptors\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n              descriptor.value = originalDescriptor.value;\n          }\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n          if (configurable === false) {\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n          }\n          valueMutated(originalTarget, key);\n          return true;\n      }\n  }\n\n  function wrapReadOnlyValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n  }\n  class ReadOnlyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { membrane, originalTarget } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getReadOnlyProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          return false;\n      }\n      deleteProperty(shadowTarget, key) {\n          return false;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value or getter (if available) cannot be observed,\n          // just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n          if (hasOwnProperty.call(desc, 'set')) {\n              desc.set = undefined; // readOnly membrane does not allow setters\n          }\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          return false;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          return false;\n      }\n  }\n  function createShadowTarget(value) {\n      let shadowTarget = undefined;\n      if (isArray(value)) {\n          shadowTarget = [];\n      }\n      else if (isObject(value)) {\n          shadowTarget = {};\n      }\n      return shadowTarget;\n  }\n  const ObjectDotPrototype = Object.prototype;\n  function defaultValueIsObservable(value) {\n      // intentionally checking for null\n      if (value === null) {\n          return false;\n      }\n      // treat all non-object types, including undefined, as non-observable values\n      if (typeof value !== 'object') {\n          return false;\n      }\n      if (isArray(value)) {\n          return true;\n      }\n      const proto = getPrototypeOf(value);\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n  }\n  const defaultValueObserved = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueMutated = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueDistortion = (value) => value;\n  function wrapDescriptor(membrane, descriptor, getValue) {\n      const { set, get } = descriptor;\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = getValue(membrane, descriptor.value);\n      }\n      else {\n          if (!isUndefined(get)) {\n              descriptor.get = function () {\n                  // invoking the original getter with the original target\n                  return getValue(membrane, get.call(unwrap(this)));\n              };\n          }\n          if (!isUndefined(set)) {\n              descriptor.set = function (value) {\n                  // At this point we don't have a clear indication of whether\n                  // or not a valid mutation will occur, we don't have the key,\n                  // and we are not sure why and how they are invoking this setter.\n                  // Nevertheless we preserve the original semantics by invoking the\n                  // original setter with the original target and the unwrapped value\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\n              };\n          }\n      }\n      return descriptor;\n  }\n  class ReactiveMembrane {\n      constructor(options) {\n          this.valueDistortion = defaultValueDistortion;\n          this.valueMutated = defaultValueMutated;\n          this.valueObserved = defaultValueObserved;\n          this.valueIsObservable = defaultValueIsObservable;\n          this.objectGraph = new WeakMap();\n          if (!isUndefined(options)) {\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n          }\n      }\n      getProxy(value) {\n          const unwrappedValue = unwrap(value);\n          const distorted = this.valueDistortion(unwrappedValue);\n          if (this.valueIsObservable(distorted)) {\n              const o = this.getReactiveState(unwrappedValue, distorted);\n              // when trying to extract the writable version of a readonly\n              // we return the readonly.\n              return o.readOnly === value ? value : o.reactive;\n          }\n          return distorted;\n      }\n      getReadOnlyProxy(value) {\n          value = unwrap(value);\n          const distorted = this.valueDistortion(value);\n          if (this.valueIsObservable(distorted)) {\n              return this.getReactiveState(value, distorted).readOnly;\n          }\n          return distorted;\n      }\n      unwrapProxy(p) {\n          return unwrap(p);\n      }\n      getReactiveState(value, distortedValue) {\n          const { objectGraph, } = this;\n          let reactiveState = objectGraph.get(distortedValue);\n          if (reactiveState) {\n              return reactiveState;\n          }\n          const membrane = this;\n          reactiveState = {\n              get reactive() {\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                  // caching the reactive proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\n                  return proxy;\n              },\n              get readOnly() {\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                  // caching the readOnly proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                  return proxy;\n              }\n          };\n          objectGraph.set(distortedValue, reactiveState);\n          return reactiveState;\n      }\n  }\n  /** version: 0.26.0 */\n\n  function wrap(data, mutationCallback) {\n\n    let membrane = new ReactiveMembrane({\n      valueMutated(target, key) {\n        mutationCallback(target, key);\n      }\n\n    });\n    return {\n      data: membrane.getProxy(data),\n      membrane: membrane\n    };\n  }\n  function unwrap$1(membrane, observable) {\n    let unwrappedData = membrane.unwrapProxy(observable);\n    let copy = {};\n    Object.keys(unwrappedData).forEach(key => {\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\n      copy[key] = unwrappedData[key];\n    });\n    return copy;\n  }\n\n  class Component {\n    constructor(el, seedDataForCloning = null) {\n      this.$el = el;\n      const dataAttr = this.$el.getAttribute('x-data');\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\n      const initExpression = this.$el.getAttribute('x-init');\n      this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, {});\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\n\n      let {\n        membrane,\n        data\n      } = this.wrapDataInObservable(this.unobservedData);\n      this.$data = data;\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\n      // our magic properties to the original data for access.\n\n      this.unobservedData.$el = this.$el;\n      this.unobservedData.$refs = this.getRefsProxy();\n      this.nextTickStack = [];\n\n      this.unobservedData.$nextTick = callback => {\n        this.nextTickStack.push(callback);\n      };\n\n      this.watchers = {};\n\n      this.unobservedData.$watch = (property, callback) => {\n        if (!this.watchers[property]) this.watchers[property] = [];\n        this.watchers[property].push(callback);\n      };\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement;\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\n\n      if (initExpression && !seedDataForCloning) {\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true;\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\n        this.pauseReactivity = false;\n      } // Register all our listeners and set all our attribute bindings.\n\n\n      this.initializeElements(this.$el); // Use mutation observer to detect new elements being added within this component at run-time.\n      // Alpine's just so darn flexible amirite?\n\n      this.listenForNewElementsToInitialize();\n\n      if (typeof initReturnedCallback === 'function') {\n        // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n        // Alpine's got it's grubby little paws all over everything.\n        initReturnedCallback.call(this.$data);\n      }\n    }\n\n    getUnobservedData() {\n      return unwrap$1(this.membrane, this.$data);\n    }\n\n    wrapDataInObservable(data) {\n      var self = this;\n      let updateDom = debounce(function () {\n        self.updateElements(self.$el);\n      }, 0);\n      return wrap(data, (target, key) => {\n        if (self.watchers[key]) {\n          // If there's a watcher for this specific key, run it.\n          self.watchers[key].forEach(callback => callback(target[key]));\n        } else {\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\n          // if this mutation fits any of them.\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\n            // key, then skip it early for performance reasons.\n\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\n            // a match, and call the watcher if one's found.\n\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData)) {\n                // Run the watchers.\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\n              }\n\n              return comparisonData[part];\n            }, self.getUnobservedData());\n          });\n        } // Don't react to data changes for cases like the `x-created` hook.\n\n\n        if (self.pauseReactivity) return;\n        updateDom();\n      });\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n      walk(el, el => {\n        // We've hit a component.\n        if (el.hasAttribute('x-data')) {\n          // If it's not the current one.\n          if (!el.isSameNode(this.$el)) {\n            // Initialize it if it's not.\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\n\n            return false;\n          }\n        }\n\n        return callback(el);\n      });\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop\n        if (el.__x_for_key !== undefined) return false;\n        this.initializeElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack(); // Walk through the $nextTick stack and clear it as we go.\n\n      while (this.nextTickStack.length > 0) {\n        this.nextTickStack.shift()();\n      }\n    }\n\n    initializeElement(el, extraVars) {\n      // To support class attribute merging, we have to know what the element's\n      // original class attribute looked like for reference.\n      if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n        el.__x_original_classes = el.getAttribute('class').split(' ');\n      }\n\n      this.registerListeners(el, extraVars);\n      this.resolveBoundAttributes(el, true, extraVars);\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\n        this.updateElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack(); // Walk through the $nextTick stack and clear it as we go.\n\n      while (this.nextTickStack.length > 0) {\n        this.nextTickStack.shift()();\n      }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n      // The goal here is to start all the x-show transitions\n      // and build a nested promise chain so that elements\n      // only hide when the children are finished hiding.\n      this.showDirectiveStack.reverse().map(thing => {\n        return new Promise(resolve => {\n          thing(finish => {\n            resolve(finish);\n          });\n        });\n      }).reduce((nestedPromise, promise) => {\n        return nestedPromise.then(() => {\n          return promise.then(finish => finish());\n        });\n      }, Promise.resolve(() => {})); // We've processed the handler stack. let's clear it.\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement = undefined;\n    }\n\n    updateElement(el, extraVars) {\n      this.resolveBoundAttributes(el, false, extraVars);\n    }\n\n    registerListeners(el, extraVars) {\n      getXAttrs(el).forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'on':\n            registerListener(this, el, value, modifiers, expression, extraVars);\n            break;\n\n          case 'model':\n            registerModelListener(this, el, modifiers, expression, extraVars);\n            break;\n        }\n      });\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n      let attrs = getXAttrs(el);\n      attrs.forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'model':\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars);\n            break;\n\n          case 'bind':\n            // The :key binding on an x-for is special, ignore it.\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\n            handleAttributeBindingDirective(this, el, value, expression, extraVars);\n            break;\n\n          case 'text':\n            var output = this.evaluateReturnExpression(el, expression, extraVars); // If nested model key is undefined, set the default value to empty string.\n\n            if (output === undefined && expression.match(/\\./).length) {\n              output = '';\n            }\n\n            el.innerText = output;\n            break;\n\n          case 'html':\n            el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars);\n            break;\n\n          case 'show':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\n            break;\n\n          case 'if':\n            // If this element also has x-for on it, don't process x-if.\n            // We will let the \"x-for\" directive handle the \"if\"ing.\n            if (attrs.filter(i => i.type === 'for').length > 0) return;\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\n            break;\n\n          case 'for':\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\n            break;\n\n          case 'cloak':\n            el.removeAttribute('x-cloak');\n            break;\n        }\n      });\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n      return saferEval(expression, this.$data, _objectSpread2({}, extraVars(), {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n      return saferEvalNoReturn(expression, this.$data, _objectSpread2({}, extraVars(), {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    getDispatchFunction(el) {\n      return (event, detail = {}) => {\n        el.dispatchEvent(new CustomEvent(event, {\n          detail,\n          bubbles: true\n        }));\n      };\n    }\n\n    listenForNewElementsToInitialize() {\n      const targetNode = this.$el;\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          // Filter out mutations triggered from child components.\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) return;\n\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n            const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {});\n            Object.keys(rawData).forEach(key => {\n              if (this.$data[key] !== rawData[key]) {\n                this.$data[key] = rawData[key];\n              }\n            });\n          }\n\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\n\n              if (node.matches('[x-data]')) {\n                node.__x = new Component(node);\n                return;\n              }\n\n              this.initializeElements(node);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n      var self = this;\n      var refObj = {};\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n      // the DOM when the system needs something from it. This way, the framework is flexible and\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n\n      return new Proxy(refObj, {\n        get(object, property) {\n          if (property === '$isAlpineProxy') return true;\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\n          // nested components.\n\n          self.walkAndSkipNestedComponents(self.$el, el => {\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n              ref = el;\n            }\n          });\n          return ref;\n        }\n\n      });\n    }\n\n  }\n\n  const Alpine = {\n    start: async function start() {\n      if (!isTesting()) {\n        await domReady();\n      }\n\n      this.discoverComponents(el => {\n        this.initializeComponent(el);\n      }); // It's easier and more performant to just support Turbolinks than listen\n      // to MutationObserver mutations at the document level.\n\n      document.addEventListener(\"turbolinks:load\", () => {\n        this.discoverUninitializedComponents(el => {\n          this.initializeComponent(el);\n        });\n      });\n      this.listenForNewUninitializedComponentsAtRunTime(el => {\n        this.initializeComponent(el);\n      });\n    },\n    discoverComponents: function discoverComponents(callback) {\n      const rootEls = document.querySelectorAll('[x-data]');\n      rootEls.forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\n      const rootEls = (el || document).querySelectorAll('[x-data]');\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime(callback) {\n      const targetNode = document.querySelector('body');\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              // Discard non-element nodes (like line-breaks)\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\n              // They will take care of themselves.\n\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\n              this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el);\n              }, node.parentElement);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    },\n    initializeComponent: function initializeComponent(el) {\n      if (!el.__x) {\n        el.__x = new Component(el);\n      }\n    },\n    clone: function clone(component, newEl) {\n      if (!newEl.__x) {\n        newEl.__x = new Component(newEl, component.getUnobservedData());\n      }\n    }\n  };\n\n  if (!isTesting()) {\n    window.Alpine = Alpine;\n\n    if (window.deferLoadingAlpine) {\n      window.deferLoadingAlpine(function () {\n        window.Alpine.start();\n      });\n    } else {\n      window.Alpine.start();\n    }\n  }\n\n  return Alpine;\n\n})));\n","/**\n * @file\n * Behavior which initializes the simplerSelect jQuery Plugin.\n */\n\n(function ($) {\n  'use strict';\n\n  Drupal.behaviors.cshs = {\n    attach: function (context, settings) {\n      $('select.simpler-select-root', context)\n        .once('cshs')\n        .each(function (idx, element) {\n          // See if we got settings from Drupal for this field.\n          if (typeof settings.cshs !== 'undefined' && typeof settings.cshs[element.id] !== 'undefined') {\n            $(element).simplerSelect(settings.cshs[element.id]);\n          }\n        }\n        );\n    }\n  };\n})(jQuery);\n","/**\n * @file\n * Dropbutton feature.\n */\n\nimport moreVertical from '../../icons/more-vertical.svg';\n\n(function ($, Drupal) {\n  /**\n   * A DropButton presents an HTML list as a button with a primary action.\n   *\n   * All secondary actions beyond the first in the list are presented in a\n   * dropdown list accessible through a toggle arrow associated with the button.\n   *\n   * @constructor Drupal.DropButton\n   *\n   * @param {HTMLElement} dropbutton\n   *   A DOM element.\n   * @param {object} settings\n   *   A list of options including:\n   * @param {string} settings.title\n   *   The text inside the toggle link element. This text is hidden\n   *   from visual UAs.\n   */\n  function DropButton(dropbutton, settings) {\n    // Merge defaults with settings.\n    const options = $.extend(\n      { title: Drupal.t('List additional actions') },\n      settings,\n    );\n    const $dropbutton = $(dropbutton);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$dropbutton = $dropbutton;\n\n    /**\n     * @type {jQuery}\n     */\n    this.$list = $dropbutton.find('.dropbutton');\n\n    /**\n     * Find actions and mark them.\n     *\n     * @type {jQuery}\n     */\n    this.$actions = this.$list.find('.dropbutton-action');\n\n    // Add the special dropdown only if there are hidden actions.\n    if (this.$actions.length > 1) {\n      // Identify the first element of the collection.\n      const $primary = this.$actions.slice(0, 1);\n      // Identify the secondary actions.\n      const $secondary = this.$actions.slice(1);\n      $secondary.addClass('secondary-action');\n      // Add toggle link.\n      $primary.append(Drupal.theme('dropbuttonToggle', options));\n      // Bind mouse events.\n      this.$dropbutton.addClass('dropbutton-multiple').on({\n        /**\n         * Adds a timeout to close the dropdown on mouseleave.\n         *\n         * @ignore\n         */\n        'mouseleave.dropbutton': $.proxy(this.hoverOut, this),\n\n        /**\n         * Clears timeout when mouseout of the dropdown.\n         *\n         * @ignore\n         */\n        'mouseenter.dropbutton': $.proxy(this.hoverIn, this),\n\n        /**\n         * Similar to mouseleave/mouseenter, but for keyboard navigation.\n         *\n         * @ignore\n         */\n        'focusout.dropbutton': $.proxy(this.focusOut, this),\n\n        /**\n         * @ignore\n         */\n        'focusin.dropbutton': $.proxy(this.focusIn, this),\n      });\n    } else {\n      this.$dropbutton.addClass('dropbutton-single');\n    }\n  }\n\n  /**\n   * Delegated callback for opening and closing dropbutton secondary actions.\n   *\n   * @function Drupal.DropButton~dropbuttonClickHandler\n   *\n   * @param {jQuery.Event} e\n   *   The event triggered.\n   */\n  function dropbuttonClickHandler(e) {\n    e.preventDefault();\n    $(e.target)\n      .closest('.dropbutton-wrapper')\n      .toggleClass('open');\n  }\n\n  /**\n   * Process elements with the .dropbutton class on page load.\n   *\n   * @type {Drupal~behavior}\n   *\n   * @prop {Drupal~behaviorAttach} attach\n   *   Attaches dropButton behaviors.\n   */\n  Drupal.behaviors.dropButton = {\n    attach(context, settings) {\n      const $dropbuttons = $(context)\n        .find('.dropbutton-wrapper')\n        .once('dropbutton');\n      if ($dropbuttons.length) {\n        // Adds the delegated handler that will toggle dropdowns on click.\n        const $body = $('body').once('dropbutton-click');\n        if ($body.length) {\n          $body.on('click', '.dropbutton-toggle', dropbuttonClickHandler);\n        }\n        // Initialize all buttons.\n        const il = $dropbuttons.length;\n        for (let i = 0; i < il; i++) {\n          DropButton.dropbuttons.push(\n            new DropButton($dropbuttons[i], settings.dropbutton),\n          );\n        }\n      }\n    },\n  };\n\n  /**\n   * Extend the DropButton constructor.\n   */\n  $.extend(\n    DropButton,\n    /** @lends Drupal.DropButton */ {\n      /**\n       * Store all processed DropButtons.\n       *\n       * @type {Array.<Drupal.DropButton>}\n       */\n      dropbuttons: [],\n    },\n  );\n\n  /**\n   * Extend the DropButton prototype.\n   */\n  $.extend(\n    DropButton.prototype,\n    /** @lends Drupal.DropButton# */ {\n      /**\n       * Toggle the dropbutton open and closed.\n       *\n       * @param {bool} [show]\n       *   Force the dropbutton to open by passing true or to close by\n       *   passing false.\n       */\n      toggle(show) {\n        const isBool = typeof show === 'boolean';\n        show = isBool ? show : !this.$dropbutton.hasClass('open');\n        this.$dropbutton.toggleClass('open', show);\n      },\n\n      /**\n       * @method\n       */\n      hoverIn() {\n        // Clear any previous timer we were using.\n        if (this.timerID) {\n          window.clearTimeout(this.timerID);\n        }\n      },\n\n      /**\n       * @method\n       */\n      hoverOut() {\n        // Wait half a second before closing.\n        this.timerID = window.setTimeout($.proxy(this, 'close'), 500);\n      },\n\n      /**\n       * @method\n       */\n      open() {\n        this.toggle(true);\n      },\n\n      /**\n       * @method\n       */\n      close() {\n        this.toggle(false);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusOut(e) {\n        this.hoverOut.call(this, e);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusIn(e) {\n        this.hoverIn.call(this, e);\n      },\n    },\n  );\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * A toggle is an interactive element often bound to a click handler.\n       *\n       * @param {object} options\n       *   Options object.\n       * @param {string} [options.title]\n       *   The button text.\n       *\n       * @return {string}\n       *   A string representing a DOM fragment.\n       */\n\n      dropbuttonToggle(options) {\n        const dropbuttonClasses = [\n          'dropbutton-toggle',\n          'border-current',\n          'border-l',\n          'pl-2',\n          'flex',\n        ];\n\n        return `<span class=\"${dropbuttonClasses.join(' ')}\">\n          <span class=\"visually-hidden\">${options.title}</span>\n          <button class=\"flex\" type=\"button\">\n            ${moreVertical}\n          </button>\n        </span>`;\n      },\n    },\n  );\n\n  // Expose constructor in the public space.\n  Drupal.DropButton = DropButton;\n})(jQuery, Drupal);\n","/**\n * @file\n * Render standard select with hierarchical options: as set of selects, one for each level of the hierarchy.\n */\nimport chevronDown from '../../icons/chevron-down.svg';\n\n(function ($, pluginName) {\n  'use strict';\n\n  // Create the defaults once.\n  var defaults = {\n    noneLabel: '- Please choose -',\n    noneValue: '_none',\n    labels: []\n  };\n\n  // The actual plugin constructor.\n  function Plugin(element, options) {\n    this.$element = $(element);\n    this.$currentSelect = null;\n\n    this.settings = $.extend({}, defaults, options);\n    this.selectOptions = [];\n\n    this.init();\n  }\n\n  Plugin.prototype = {\n    init: function () {\n      var that = this;\n      // Ensure that we'll clearly initiate a new instance.\n      that.destroy();\n      that.$element.find('option').each(function () {\n        var $option = $(this);\n\n        that.selectOptions.push({\n          value: $option.val(),\n          label: $option.text(),\n          parent: $option.data('parent') || 0,\n          children: []\n        });\n      });\n\n      var tree = that.buildTree(that.selectOptions);\n\n      if (tree === null) {\n        return;\n      }\n\n      var initialValue = that.$element.val();\n      var initialParents = [];\n      var $selectElement = that.createSelect(tree);\n      var $currentSelect = $selectElement;\n\n      if (initialValue) {\n        if (typeof initialValue !== 'string') {\n          // If array, flatten it.\n          initialValue = initialValue.shift();\n        }\n\n        // Get all parents, starting from the initial value.\n        initialParents = that.getAllParents(initialValue);\n        // Reverse the parents, that they start from the root.\n        initialParents.reverse();\n        // Add the current value as the last leave.\n        initialParents.push(initialValue);\n      }\n\n      this.$element.after($selectElement);\n\n      $.each(initialParents, function (i, value) {\n        that.selectSetValue($currentSelect, value);\n\n        var $nextSelect = that.createSelect(that.getOptionInfoByValue(value).children, value, i + 1);\n\n        if (null !== $nextSelect) {\n          $currentSelect.after($nextSelect);\n          $currentSelect = $nextSelect;\n        }\n      });\n\n      // Hide the original.\n      that.$element.hide();\n    },\n\n    /**\n     * Destroy CSHS.\n     */\n    destroy: function () {\n      this.selectOptions = [];\n      this.$element.show().nextAll('.select-wrapper').remove();\n    },\n\n    /**\n     * Given an array of options, build an HTML select element.\n     *\n     * @param {HTMLElement[]|HTMLOptionElement[]} options\n     *   List of options.\n     * @param {String} [parent]\n     *   Parent option.\n     * @param {Number} [level]\n     *   Nesting level.\n     *\n     * @return {jQuery|null}\n     *   Newly created element.\n     */\n    createSelect: function (options, parent, level) {\n      if (!options || options.length < 1) {\n        return null;\n      }\n\n      parent = parent || this.settings.noneValue;\n      level = level || 0;\n\n      const required = this.$element.attr('required');\n\n      const wrapperClasses = [\n        'select-wrapper',\n        'relative',\n      ];\n\n      const chevronClasses = [\n        'pointer-events-none',\n        'absolute',\n        'inset-y-0',\n        'right-0',\n        'flex',\n        'items-center',\n        'px-2',\n      ];\n\n      if (required) chevronClasses.push('text-red-900');\n\n      const chevronElement = `\n      <div class=\"${chevronClasses.join(' ')}\">\n      ${chevronDown}\n      </div>\n      `;\n\n      const selectClasses = [\n        'simpler-select',\n        'w-full',\n      ];\n\n      const selectElement = `<select class=\"${selectClasses.join(' ')}\">`\n\n      var that = this;\n      var $select = $(selectElement).addClass(that.$element.attr('class'));\n      var $wrapper = $(`<div class=\"${wrapperClasses.join(' ')}\">`);\n\n      if (that.$element.hasClass('error')) {\n        $select.addClass('error');\n      }\n\n      // Always add the \"_none\" option.\n      $select.append('<option value=\"' + that.settings.noneValue + '\" data-parent-value=\"' + parent + '\">' + that.settings.noneLabel + '</option>');\n\n      $.each(options, function (i, option) {\n        // Do not add \"_none\" option (already added by code above).\n        if (option.value != that.settings.noneValue) {\n          var $option = $('<option>')\n            .val(option.value)\n            // Remove dashes from the beginning, then set the label.\n            .text(option.label.replace(/(- )+/, ''));\n\n          if (option.children.length) {\n            $option.addClass('has-children');\n          }\n\n          $select.append($option);\n        }\n      });\n\n      $select.change(function () {\n        that.$currentSelect = $(this);\n        // Remove deeper selects.\n        that.selectRemoveNext(that.$currentSelect);\n\n        // Get the selected value and also set the original drop-down.\n        var $selected = that.$currentSelect.find('option:selected');\n        var selectedValue = $selected.val();\n        var parentValue = $selected.data('parent-value');\n\n        if (undefined === parentValue) {\n          parentValue = selectedValue;\n        }\n\n        that.$element\n          .val(parentValue)\n          .change();\n\n        if (selectedValue == that.settings.noneValue) {\n          return;\n        }\n\n        // Build new child select.\n        var optionInfo = that.getOptionInfoByValue(selectedValue);\n\n        if (undefined !== optionInfo.children) {\n          that.addSelectAfter(that.createSelect(optionInfo.children, selectedValue, that.selectGetLevel()));\n        }\n      });\n\n      if (that.settings.labels[level]) {\n        $wrapper.append('<label>' + that.settings.labels[level] + '</label>');\n      }\n\n      $wrapper.append($select);\n      $wrapper.append(chevronElement);\n\n      return $wrapper;\n    },\n\n    /**\n     * Given an flat array an tree is built.\n     *\n     * @param {Object[]} array\n     *   Options list.\n     * @param {Object} [parent]\n     *   Parent option.\n     * @param {Array} [tree]\n     *   Existing options.\n     *\n     * @return {Array}\n     *   Options tree.\n     */\n    buildTree: function (array, parent, tree) {\n      tree = tree || [];\n      parent = parent || { value: 0 };\n\n      var children = $.grep(array, function (child) {\n        // Here must be no strict comparison!\n        return undefined !== child && child.parent == parent.value;\n      });\n\n      if (children.length) {\n        if (0 == parent.value) {\n          tree = children;\n        }\n        else {\n          parent.children = children;\n        }\n\n        for (var i = 0; i < children.length; i++) {\n          this.buildTree(array, children[i], tree);\n        }\n      }\n\n      return tree;\n    },\n\n    /**\n     * Set the value of a select to the given.\n     *\n     * @param {jQuery} $select\n     *   Wrapper element.\n     * @param {String} value\n     *   New value to set.\n     */\n    selectSetValue: function ($select, value) {\n      $select.find('select').val(value);\n    },\n\n    /**\n     * Remove all following selects.\n     */\n    selectRemoveNext: function () {\n      this.$currentSelect\n        .parents('.select-wrapper')\n        .nextAll('.select-wrapper')\n        .remove();\n    },\n\n    /**\n     * Add a newSelect after the currentSelect.\n     *\n     * @param {jQuery} $newSelect\n     *   New \"select\" element.\n     */\n    addSelectAfter: function ($newSelect) {\n      this.$currentSelect.parents('.select-wrapper').after($newSelect);\n    },\n\n    /**\n     * Get the hierarchy level of given select.\n     *\n     * @return {Number}\n     *   Number of wrappers.\n     */\n    selectGetLevel: function () {\n      return this.$currentSelect.parents('.form-type-cshs').find('.select-wrapper').length;\n    },\n\n    /**\n     * Given a value build an array of all parents (from leave to root).\n     *\n     * @param {String} value\n     *   Value of option.\n     * @param {Array} [parents]\n     *   Parent options.\n     *\n     * @return {Array}\n     *   Updated parent options list.\n     */\n    getAllParents: function (value, parents) {\n      if (value == this.settings.noneValue) {\n        return [];\n      }\n\n      parents = parents || [];\n\n      var parent = this.getOptionByValue(value).data('parent');\n\n      if (undefined !== parent && 0 != parent) {\n        parents.push(parent);\n        this.getAllParents(this.getOptionByValue(parent).val(), parents);\n      }\n\n      return parents;\n    },\n\n    /**\n     * Tiny helper to get the option jQuery object.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {jQuery}\n     *   Element.\n     */\n    getOptionByValue: function (value) {\n      return this.$element.find('option[value=\"' + value + '\"]');\n    },\n\n    /**\n     * Helper to get the info-object which corresponds to an option value.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {Object}\n     *   Element.\n     */\n    getOptionInfoByValue: function (value) {\n      var optionInfo = {};\n\n      $.each(this.selectOptions, function (idx, option) {\n        if (option.value == value) {\n          optionInfo = option;\n          return false;\n        }\n      });\n\n      return optionInfo;\n    }\n  };\n\n  // A really lightweight plugin wrapper around the constructor,\n  // preventing against multiple instantiations.\n  $.fn[pluginName] = function (options) {\n    this.each(function () {\n      if (!$.data(this, 'plugin_' + pluginName)) {\n        $.data(this, 'plugin_' + pluginName, new Plugin(this, options));\n      }\n    });\n\n    return this;\n  };\n})(jQuery, 'simplerSelect');\n","/**\n * @file\n * Provide dragging capabilities to admin uis.\n */\n\n/**\n * Triggers when weights columns are toggled.\n *\n * @event columnschange\n */\nimport move from '../../icons/move.svg';\nimport info from '../../icons/info.svg';\n\n(function ($, Drupal, drupalSettings) {\n  /**\n   * Store the state of weight columns display for all tables.\n   *\n   * Default value is to hide weight columns.\n   */\n  let showWeight = JSON.parse(\n    localStorage.getItem('Drupal.tableDrag.showWeight'),\n  );\n\n  /**\n   * Drag and drop table rows with field manipulation.\n   *\n   * Using the drupal_attach_tabledrag() function, any table with weights or\n   * parent relationships may be made into draggable tables. Columns containing\n   * a field may optionally be hidden, providing a better user experience.\n   *\n   * Created tableDrag instances may be modified with custom behaviors by\n   * overriding the .onDrag, .onDrop, .row.onSwap, and .row.onIndent methods.\n   * See blocks.js for an example of adding additional functionality to\n   * tableDrag.\n   *\n   * @type {Drupal~behavior}\n   */\n  Drupal.behaviors.tableDrag = {\n    attach(context, settings) {\n      function initTableDrag(table, base) {\n        if (table.length) {\n          // Create the new tableDrag instance. Save in the Drupal variable\n          // to allow other scripts access to the object.\n          Drupal.tableDrag[base] = new Drupal.tableDrag(\n            table[0],\n            settings.tableDrag[base],\n          );\n        }\n      }\n\n      Object.keys(settings.tableDrag || {}).forEach(base => {\n        initTableDrag(\n          $(context)\n            .find(`#${base}`)\n            .once('tabledrag'),\n          base,\n        );\n      });\n    },\n  };\n\n  /**\n   * Provides table and field manipulation.\n   *\n   * @constructor\n   *\n   * @param {HTMLElement} table\n   *   DOM object for the table to be made draggable.\n   * @param {object} tableSettings\n   *   Settings for the table added via drupal_add_dragtable().\n   */\n  Drupal.tableDrag = function (table, tableSettings) {\n    const self = this;\n    const $table = $(table);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$table = $(table);\n\n    /**\n     *\n     * @type {HTMLElement}\n     */\n    this.table = table;\n\n    /**\n     * @type {object}\n     */\n    this.tableSettings = tableSettings;\n\n    /**\n     * Used to hold information about a current drag operation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.dragObject = null;\n\n    /**\n     * Provides operations for row manipulation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.rowObject = null;\n\n    /**\n     * Remember the previous element.\n     *\n     * @type {?HTMLElement}\n     */\n    this.oldRowElement = null;\n\n    /**\n     * Used to determine up or down direction from last mouse move.\n     *\n     * @type {number}\n     */\n    this.oldY = 0;\n\n    /**\n     * Whether anything in the entire table has changed.\n     *\n     * @type {bool}\n     */\n    this.changed = false;\n\n    /**\n     * Maximum amount of allowed parenting.\n     *\n     * @type {number}\n     */\n    this.maxDepth = 0;\n\n    /**\n     * Direction of the table.\n     *\n     * @type {number}\n     */\n    this.rtl = $(this.table).css('direction') === 'rtl' ? -1 : 1;\n\n    /**\n     *\n     * @type {bool}\n     */\n    this.striping = $(this.table).data('striping') === 1;\n\n    /**\n     * Configure the scroll settings.\n     *\n     * @type {object}\n     *\n     * @prop {number} amount\n     * @prop {number} interval\n     * @prop {number} trigger\n     */\n    this.scrollSettings = { amount: 4, interval: 50, trigger: 70 };\n\n    /**\n     *\n     * @type {?number}\n     */\n    this.scrollInterval = null;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.scrollY = 0;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.windowHeight = 0;\n\n    /**\n     * Check this table's settings for parent relationships.\n     *\n     * For efficiency, large sections of code can be skipped if we don't need to\n     * track horizontal movement and indentations.\n     *\n     * @type {bool}\n     */\n    this.indentEnabled = false;\n    Object.keys(tableSettings || {}).forEach(group => {\n      Object.keys(tableSettings[group] || {}).forEach(n => {\n        if (tableSettings[group][n].relationship === 'parent') {\n          this.indentEnabled = true;\n        }\n        if (tableSettings[group][n].limit > 0) {\n          this.maxDepth = tableSettings[group][n].limit;\n        }\n      });\n    });\n    if (this.indentEnabled) {\n      /**\n       * Total width of indents, set in makeDraggable.\n       *\n       * @type {number}\n       */\n      this.indentCount = 1;\n      // Find the width of indentations to measure mouse movements against.\n      // Because the table doesn't need to start with any indentations, we\n      // manually append 2 indentations in the first draggable row, measure\n      // the offset, then remove.\n      const indent = Drupal.theme('tableDragIndentation');\n      const testRow = $('<tr/>')\n        .addClass('draggable')\n        .appendTo(table);\n      const testCell = $('<td/>')\n        .appendTo(testRow)\n        .prepend(indent)\n        .prepend(indent);\n      const $indentation = testCell.find('.js-indentation');\n\n      /**\n       *\n       * @type {number}\n       */\n      this.indentAmount =\n        $indentation.get(1).offsetLeft - $indentation.get(0).offsetLeft;\n      testRow.remove();\n    }\n\n    // Make each applicable row draggable.\n    // Match immediate children of the parent element to allow nesting.\n    $table.find('> tr.draggable, > tbody > tr.draggable').each(function () {\n      self.makeDraggable(this);\n    });\n\n    const buttonClasses = [\n      'tabledrag-toggle-weight',\n      'appearance-none',\n      'ml-auto',\n      'px-4',\n      'py-3',\n      'border',\n      'border-transparent',\n      'rounded-lg',\n      'shadow',\n      'bg-cyan-500',\n      'text-white',\n      'hover:bg-cyan-600',\n      'focus:outline-none',\n      'focus:shadow-outline',\n      'focus:bg-cyan-600',\n      'transition',\n      'ease-in-out',\n      'duration-150'\n    ];\n\n    // Add a link before the table for users to show or hide weight columns.\n    $table.before(\n      $(`<button type=\"button\" class=\"${buttonClasses.join(' ')}\"></button>`)\n        .attr(\n          'title',\n          Drupal.t('Re-order rows by numerical weight instead of dragging.'),\n        )\n        .on(\n          'click',\n          $.proxy(function (e) {\n            e.preventDefault();\n            this.toggleColumns();\n          }, this),\n        )\n        .wrap('<div class=\"flex flex-col items-end my-2\"></div>')\n        .parent(),\n    );\n\n    // Initialize the specified columns (for example, weight or parent columns)\n    // to show or hide according to user preference. This aids accessibility\n    // so that, e.g., screen reader users can choose to enter weight values and\n    // manipulate form elements directly, rather than using drag-and-drop..\n    self.initColumns();\n\n    // Add event bindings to the document. The self variable is passed along\n    // as event handlers do not have direct access to the tableDrag object.\n    $(document).on('touchmove', event =>\n      self.dragRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('touchend', event =>\n      self.dropRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('mousemove pointermove', event => self.dragRow(event, self));\n    $(document).on('mouseup pointerup', event => self.dropRow(event, self));\n\n    // React to localStorage event showing or hiding weight columns.\n    $(window).on(\n      'storage',\n      $.proxy(function (e) {\n        // Only react to 'Drupal.tableDrag.showWeight' value change.\n        if (e.originalEvent.key === 'Drupal.tableDrag.showWeight') {\n          // This was changed in another window, get the new value for this\n          // window.\n          showWeight = JSON.parse(e.originalEvent.newValue);\n          this.displayColumns(showWeight);\n        }\n      }, this),\n    );\n  };\n\n  /**\n   * Initialize columns containing form elements to be hidden by default.\n   *\n   * Identify and mark each cell with a CSS class so we can easily toggle\n   * show/hide it. Finally, hide columns if user does not have a\n   * 'Drupal.tableDrag.showWeight' localStorage value.\n   */\n  Drupal.tableDrag.prototype.initColumns = function () {\n    const $table = this.$table;\n    let hidden;\n    let cell;\n    let columnIndex;\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Find the first field in this group.\n      Object.keys(this.tableSettings[group]).some(tableSetting => {\n        const field = $table\n          .find(`.${this.tableSettings[group][tableSetting].target}`)\n          .eq(0);\n        if (field.length && this.tableSettings[group][tableSetting].hidden) {\n          hidden = this.tableSettings[group][tableSetting].hidden;\n          cell = field.closest('td');\n          return true;\n        }\n        return false;\n      });\n\n      // Mark the column containing this field so it can be hidden.\n      if (hidden && cell[0]) {\n        // Add 1 to our indexes. The nth-child selector is 1 based, not 0\n        // based. Match immediate children of the parent element to allow\n        // nesting.\n        columnIndex =\n          cell\n            .parent()\n            .find('> td')\n            .index(cell.get(0)) + 1;\n        $table\n          .find('> thead > tr, > tbody > tr, > tr')\n          .each(this.addColspanClass(columnIndex));\n      }\n    });\n    this.displayColumns(showWeight);\n  };\n\n  /**\n   * Mark cells that have colspan.\n   *\n   * In order to adjust the colspan instead of hiding them altogether.\n   *\n   * @param {number} columnIndex\n   *   The column index to add colspan class to.\n   *\n   * @return {function}\n   *   Function to add colspan class.\n   */\n  Drupal.tableDrag.prototype.addColspanClass = function (columnIndex) {\n    return function () {\n      // Get the columnIndex and adjust for any colspans in this row.\n      const $row = $(this);\n      let index = columnIndex;\n      const cells = $row.children();\n      let cell;\n      cells.each(function (n) {\n        if (n < index && this.colSpan && this.colSpan > 1) {\n          index -= this.colSpan - 1;\n        }\n      });\n      if (index > 0) {\n        cell = cells.filter(`:nth-child(${index})`);\n        if (cell[0].colSpan && cell[0].colSpan > 1) {\n          // If this cell has a colspan, mark it so we can reduce the colspan.\n          cell.addClass('tabledrag-has-colspan');\n        } else {\n          // Mark this cell so we can hide it.\n          cell.addClass('tabledrag-hide');\n        }\n      }\n    };\n  };\n\n  /**\n   * Hide or display weight columns. Triggers an event on change.\n   *\n   * @fires event:columnschange\n   *\n   * @param {bool} displayWeight\n   *   'true' will show weight columns.\n   */\n  Drupal.tableDrag.prototype.displayColumns = function (displayWeight) {\n    if (displayWeight) {\n      this.showColumns();\n    }\n    // Default action is to hide columns.\n    else {\n      this.hideColumns();\n    }\n    // Trigger an event to allow other scripts to react to this display change.\n    // Force the extra parameter as a bool.\n    $('table')\n      .findOnce('tabledrag')\n      .trigger('columnschange', !!displayWeight);\n  };\n\n  /**\n   * Toggle the weight column depending on 'showWeight' value.\n   *\n   * Store only default override.\n   */\n  Drupal.tableDrag.prototype.toggleColumns = function () {\n    showWeight = !showWeight;\n    this.displayColumns(showWeight);\n    if (showWeight) {\n      // Save default override.\n      localStorage.setItem('Drupal.tableDrag.showWeight', showWeight);\n    } else {\n      // Reset the value to its default.\n      localStorage.removeItem('Drupal.tableDrag.showWeight');\n    }\n  };\n\n  /**\n   * Hide the columns containing weight/parent form elements.\n   *\n   * Undo showColumns().\n   */\n  Drupal.tableDrag.prototype.hideColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Hide weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', 'none');\n    // Show TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', '');\n    // Reduce the colspan of any effected multi-span columns.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan - 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Show row weights'));\n  };\n\n  /**\n   * Show the columns containing weight/parent form elements.\n   *\n   * Undo hideColumns().\n   */\n  Drupal.tableDrag.prototype.showColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Show weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', '');\n    // Hide TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', 'none');\n    // Increase the colspan for any columns where it was previously reduced.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan + 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Hide row weights'));\n  };\n\n  /**\n   * Find the target used within a particular row and group.\n   *\n   * @param {string} group\n   *   Group selector.\n   * @param {HTMLElement} row\n   *   The row HTML element.\n   *\n   * @return {object}\n   *   The table row settings.\n   */\n  Drupal.tableDrag.prototype.rowSettings = function (group, row) {\n    const field = $(row).find(`.${group}`);\n    const tableSettingsGroup = this.tableSettings[group];\n    return Object.keys(tableSettingsGroup)\n      .map(delta => {\n        const targetClass = tableSettingsGroup[delta].target;\n        let rowSettings;\n        if (field.is(`.${targetClass}`)) {\n          // Return a copy of the row settings.\n          rowSettings = {};\n          Object.keys(tableSettingsGroup[delta]).forEach(n => {\n            rowSettings[n] = tableSettingsGroup[delta][n];\n          });\n        }\n        return rowSettings;\n      })\n      .filter(rowSetting => rowSetting)[0];\n  };\n\n  /**\n   * Take an item and add event handlers to make it become draggable.\n   *\n   * @param {HTMLElement} item\n   *   The item to add event handlers to.\n   */\n  Drupal.tableDrag.prototype.makeDraggable = function (item) {\n    const self = this;\n    const $item = $(item);\n    // Add a class to the title link.\n    $item\n      .find('td:first-of-type')\n      .find('a')\n      .addClass('menu-item__link');\n    // Create the handle.\n    const handleClasses = [\n      'tabledrag-handle',\n      'handle',\n      'cursor-move',\n      'align-middle',\n      'float-left'\n    ];\n    const handle = $(\n      `<span class=\"${handleClasses.join(' ')}\">${move}</span>`,\n    ).attr('title', Drupal.t('Drag to re-order'));\n    // Insert the handle after indentations (if any).\n    const $indentationLast = $item\n      .find('td:first-of-type')\n      .find('.js-indentation')\n      .eq(-1);\n    if ($indentationLast.length) {\n      $indentationLast.after(handle);\n      // Update the total width of indentation in this entire table.\n      self.indentCount = Math.max(\n        $item.find('.js-indentation').length,\n        self.indentCount,\n      );\n    } else {\n      $item\n        .find('td')\n        .eq(0)\n        .prepend(handle);\n    }\n\n    handle.on('mousedown touchstart pointerdown', event => {\n      event.preventDefault();\n      if (event.originalEvent.type === 'touchstart') {\n        event = event.originalEvent.touches[0];\n      }\n      self.dragStart(event, self, item);\n    });\n\n    // Prevent the anchor tag from jumping us to the top of the page.\n    handle.on('click', e => {\n      e.preventDefault();\n    });\n\n    // Set blur cleanup when a handle is focused.\n    handle.on('focus', () => {\n      self.safeBlur = true;\n    });\n\n    // On blur, fire the same function as a touchend/mouseup. This is used to\n    // update values after a row has been moved through the keyboard support.\n    handle.on('blur', event => {\n      if (self.rowObject && self.safeBlur) {\n        self.dropRow(event, self);\n      }\n    });\n\n    // Add arrow-key support to the handle.\n    handle.on('keydown', event => {\n      // If a rowObject doesn't yet exist and this isn't the tab key.\n      if (event.keyCode !== 9 && !self.rowObject) {\n        self.rowObject = new self.row(\n          item,\n          'keyboard',\n          self.indentEnabled,\n          self.maxDepth,\n          true,\n        );\n      }\n\n      let keyChange = false;\n      let groupHeight;\n\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Safari left arrow.\n        case 63234:\n          keyChange = true;\n          self.rowObject.indent(-1 * self.rtl);\n          break;\n\n        // Up arrow.\n        case 38:\n        // Safari up arrow.\n        case 63232: {\n          let $previousRow = $(self.rowObject.element).prev('tr:first-of-type');\n          let previousRow = $previousRow.get(0);\n          while (previousRow && $previousRow.is(':hidden')) {\n            $previousRow = $(previousRow).prev('tr:first-of-type');\n            previousRow = $previousRow.get(0);\n          }\n          if (previousRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'up';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the previous top-level row.\n              groupHeight = 0;\n              while (\n                previousRow &&\n                $previousRow.find('.js-indentation').length\n              ) {\n                $previousRow = $(previousRow).prev('tr:first-of-type');\n                previousRow = $previousRow.get(0);\n                groupHeight += $previousRow.is(':hidden')\n                  ? 0\n                  : previousRow.offsetHeight;\n              }\n              if (previousRow) {\n                self.rowObject.swap('before', previousRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, -groupHeight);\n              }\n            } else if (\n              self.table.tBodies[0].rows[0] !== previousRow ||\n              $previousRow.is('.draggable')\n            ) {\n              // Swap with the previous row (unless previous row is the first\n              // one and undraggable).\n              self.rowObject.swap('before', previousRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, -parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n        // Right arrow.\n        case 39:\n        // Safari right arrow.\n        case 63235:\n          keyChange = true;\n          self.rowObject.indent(self.rtl);\n          break;\n\n        // Down arrow.\n        case 40:\n        // Safari down arrow.\n        case 63233: {\n          let $nextRow = $(self.rowObject.group)\n            .eq(-1)\n            .next('tr:first-of-type');\n          let nextRow = $nextRow.get(0);\n          while (nextRow && $nextRow.is(':hidden')) {\n            $nextRow = $(nextRow).next('tr:first-of-type');\n            nextRow = $nextRow.get(0);\n          }\n          if (nextRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'down';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the next group (necessarily a top-level one).\n              groupHeight = 0;\n              const nextGroup = new self.row(\n                nextRow,\n                'keyboard',\n                self.indentEnabled,\n                self.maxDepth,\n                false,\n              );\n              if (nextGroup) {\n                $(nextGroup.group).each(function () {\n                  groupHeight += $(this).is(':hidden') ? 0 : this.offsetHeight;\n                });\n                const nextGroupRow = $(nextGroup.group)\n                  .eq(-1)\n                  .get(0);\n                self.rowObject.swap('after', nextGroupRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, parseInt(groupHeight, 10));\n              }\n            } else {\n              // Swap with the next row.\n              self.rowObject.swap('after', nextRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n      }\n\n      /* eslint-enable no-fallthrough */\n\n      if (self.rowObject && self.rowObject.changed === true) {\n        $(item).addClass('drag');\n        if (self.oldRowElement) {\n          $(self.oldRowElement).removeClass('drag-previous');\n        }\n        self.oldRowElement = item;\n        if (self.striping === true) {\n          self.restripeTable();\n        }\n        self.onDrag();\n      }\n\n      // Returning false if we have an arrow key to prevent scrolling.\n      if (keyChange) {\n        return false;\n      }\n    });\n\n    // Compatibility addition, return false on keypress to prevent unwanted\n    // scrolling. IE and Safari will suppress scrolling on keydown, but all\n    // other browsers need to return false on keypress.\n    // http://www.quirksmode.org/js/keys.html\n    handle.on('keypress', event => {\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Up arrow.\n        case 38:\n        // Right arrow.\n        case 39:\n        // Down arrow.\n        case 40:\n          return false;\n      }\n\n      /* eslint-enable no-fallthrough */\n    });\n  };\n\n  /**\n   * Pointer event initiator, creates drag object and information.\n   *\n   * @param {jQuery.Event} event\n   *   The event object that trigger the drag.\n   * @param {Drupal.tableDrag} self\n   *   The drag handle.\n   * @param {HTMLElement} item\n   *   The item that that is being dragged.\n   */\n  Drupal.tableDrag.prototype.dragStart = function (event, self, item) {\n    // Create a new dragObject recording the pointer information.\n    self.dragObject = {};\n    self.dragObject.initOffset = self.getPointerOffset(item, event);\n    self.dragObject.initPointerCoords = self.pointerCoords(event);\n    if (self.indentEnabled) {\n      self.dragObject.indentPointerPos = self.dragObject.initPointerCoords;\n    }\n\n    // If there's a lingering row object from the keyboard, remove its focus.\n    if (self.rowObject) {\n      $(self.rowObject.element)\n        .find('a.tabledrag-handle')\n        .trigger('blur');\n    }\n\n    // Create a new rowObject for manipulation of this row.\n    self.rowObject = new self.row(\n      item,\n      'pointer',\n      self.indentEnabled,\n      self.maxDepth,\n      true,\n    );\n\n    // Save the position of the table.\n    self.table.topY = $(self.table).offset().top;\n    self.table.bottomY = self.table.topY + self.table.offsetHeight;\n\n    const dragClasses = [\n      'bg-cyan-100'\n    ];\n\n    // Add classes to the handle and row.\n    $(item).addClass(dragClasses.join(' '));\n\n    // Set the document to use the move cursor during drag.\n    $('body').addClass('drag');\n    if (self.oldRowElement) {\n      $(self.oldRowElement).removeClass('drag-previous');\n    }\n  };\n\n  /**\n   * Pointer movement handler, bound to document.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   *\n   * @return {bool|undefined}\n   *   Undefined if no dragObject is defined, false otherwise.\n   */\n  Drupal.tableDrag.prototype.dragRow = function (event, self) {\n    if (self.dragObject) {\n      self.currentPointerCoords = self.pointerCoords(event);\n      const y = self.currentPointerCoords.y - self.dragObject.initOffset.y;\n      const x = self.currentPointerCoords.x - self.dragObject.initOffset.x;\n\n      // Check for row swapping and vertical scrolling.\n      if (y !== self.oldY) {\n        self.rowObject.direction = y > self.oldY ? 'down' : 'up';\n        // Update the old value.\n        self.oldY = y;\n        // Check if the window should be scrolled (and how fast).\n        const scrollAmount = self.checkScroll(self.currentPointerCoords.y);\n        // Stop any current scrolling.\n        clearInterval(self.scrollInterval);\n        // Continue scrolling if the mouse has moved in the scroll direction.\n        if (\n          (scrollAmount > 0 && self.rowObject.direction === 'down') ||\n          (scrollAmount < 0 && self.rowObject.direction === 'up')\n        ) {\n          self.setScroll(scrollAmount);\n        }\n\n        // If we have a valid target, perform the swap and restripe the table.\n        const currentRow = self.findDropTargetRow(x, y);\n        if (currentRow) {\n          if (self.rowObject.direction === 'down') {\n            self.rowObject.swap('after', currentRow, self);\n          } else {\n            self.rowObject.swap('before', currentRow, self);\n          }\n          if (self.striping === true) {\n            self.restripeTable();\n          }\n        }\n      }\n\n      // Similar to row swapping, handle indentations.\n      if (self.indentEnabled) {\n        const xDiff =\n          self.currentPointerCoords.x - self.dragObject.indentPointerPos.x;\n        // Set the number of indentations the pointer has been moved left or\n        // right.\n        const indentDiff = Math.round(xDiff / self.indentAmount);\n        // Indent the row with our estimated diff, which may be further\n        // restricted according to the rows around this row.\n        const indentChange = self.rowObject.indent(indentDiff);\n        // Update table and pointer indentations.\n        self.dragObject.indentPointerPos.x +=\n          self.indentAmount * indentChange * self.rtl;\n        self.indentCount = Math.max(self.indentCount, self.rowObject.indents);\n      }\n\n      return false;\n    }\n  };\n\n  /**\n   * Pointerup behavior.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   */\n  Drupal.tableDrag.prototype.dropRow = function (event, self) {\n    let droppedRow;\n    let $droppedRow;\n\n    // Drop row functionality.\n    if (self.rowObject !== null) {\n      droppedRow = self.rowObject.element;\n      $droppedRow = $(droppedRow);\n      // The row is already in the right place so we just release it.\n      if (self.rowObject.changed === true) {\n        // Update the fields in the dropped row.\n        self.updateFields(droppedRow);\n\n        // If a setting exists for affecting the entire group, update all the\n        // fields in the entire dragged group.\n        Object.keys(self.tableSettings || {}).forEach(group => {\n          const rowSettings = self.rowSettings(group, droppedRow);\n          if (rowSettings.relationship === 'group') {\n            Object.keys(self.rowObject.children || {}).forEach(n => {\n              self.updateField(self.rowObject.children[n], group);\n            });\n          }\n        });\n\n        self.rowObject.markChanged();\n        if (self.changed === false) {\n          $(Drupal.theme('tableDragChangedWarning'))\n            .insertBefore(self.table)\n            .hide()\n            .fadeIn('slow');\n          self.changed = true;\n        }\n      }\n\n      if (self.indentEnabled) {\n        self.rowObject.removeIndentClasses();\n      }\n      if (self.oldRowElement) {\n        $(self.oldRowElement).removeClass('drag-previous');\n      }\n      $droppedRow.removeClass('drag').addClass('drag-previous');\n      self.oldRowElement = droppedRow;\n      self.onDrop();\n      self.rowObject = null;\n    }\n\n    // Functionality specific only to pointerup events.\n    if (self.dragObject !== null) {\n      self.dragObject = null;\n      $('body').removeClass('drag');\n      clearInterval(self.scrollInterval);\n    }\n  };\n\n  /**\n   * Get the coordinates from the event (allowing for browser differences).\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.pointerCoords = function (event) {\n    if (event.pageX || event.pageY) {\n      return { x: event.pageX, y: event.pageY };\n    }\n    return {\n      x: event.clientX + document.body.scrollLeft - document.body.clientLeft,\n      y: event.clientY + document.body.scrollTop - document.body.clientTop,\n    };\n  };\n\n  /**\n   * Get the event offset from the target element.\n   *\n   * Given a target element and a pointer event, get the event offset from that\n   * element. To do this we need the element's position and the target position.\n   *\n   * @param {HTMLElement} target\n   *   The target HTML element.\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.getPointerOffset = function (target, event) {\n    const docPos = $(target).offset();\n    const pointerPos = this.pointerCoords(event);\n    return { x: pointerPos.x - docPos.left, y: pointerPos.y - docPos.top };\n  };\n\n  /**\n   * Find the row the mouse is currently over.\n   *\n   * This row is then taken and swapped with the one being dragged.\n   *\n   * @param {number} x\n   *   The x coordinate of the mouse on the page (not the screen).\n   * @param {number} y\n   *   The y coordinate of the mouse on the page (not the screen).\n   *\n   * @return {*}\n   *   The drop target row, if found.\n   */\n  Drupal.tableDrag.prototype.findDropTargetRow = function (x, y) {\n    const rows = $(this.table.tBodies[0].rows).not(':hidden');\n    for (let n = 0; n < rows.length; n++) {\n      let row = rows[n];\n      let $row = $(row);\n      const rowY = $row.offset().top;\n      let rowHeight;\n      // Because Safari does not report offsetHeight on table rows, but does on\n      // table cells, grab the firstChild of the row and use that instead.\n      // http://jacob.peargrove.com/blog/2006/technical/table-row-offsettop-bug-in-safari.\n      if (row.offsetHeight === 0) {\n        rowHeight = parseInt(row.firstChild.offsetHeight, 10) / 2;\n      }\n      // Other browsers.\n      else {\n        rowHeight = parseInt(row.offsetHeight, 10) / 2;\n      }\n\n      // Because we always insert before, we need to offset the height a bit.\n      if (y > rowY - rowHeight && y < rowY + rowHeight) {\n        if (this.indentEnabled) {\n          // Check that this row is not a child of the row being dragged.\n          if (\n            Object.keys(this.rowObject.group).some(\n              o => this.rowObject.group[o] === row,\n            )\n          ) {\n            return null;\n          }\n        }\n        // Do not allow a row to be swapped with itself.\n        else if (row === this.rowObject.element) {\n          return null;\n        }\n\n        // Check that swapping with this row is allowed.\n        if (!this.rowObject.isValidSwap(row)) {\n          return null;\n        }\n\n        // We may have found the row the mouse just passed over, but it doesn't\n        // take into account hidden rows. Skip backwards until we find a\n        // draggable row.\n        while ($row.is(':hidden') && $row.prev('tr').is(':hidden')) {\n          $row = $row.prev('tr:first-of-type');\n          row = $row.get(0);\n        }\n        return row;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * After the row is dropped, update the table fields.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   */\n  Drupal.tableDrag.prototype.updateFields = function (changedRow) {\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Each group may have a different setting for relationship, so we find\n      // the source rows for each separately.\n      this.updateField(changedRow, group);\n    });\n  };\n\n  /**\n   * After the row is dropped, update a single table field.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   * @param {string} group\n   *   The settings group on which field updates will occur.\n   */\n  Drupal.tableDrag.prototype.updateField = function (changedRow, group) {\n    let rowSettings = this.rowSettings(group, changedRow);\n    const $changedRow = $(changedRow);\n    let sourceRow;\n    let $previousRow;\n    let previousRow;\n    let useSibling;\n    // Set the row as its own target.\n    if (\n      rowSettings.relationship === 'self' ||\n      rowSettings.relationship === 'group'\n    ) {\n      sourceRow = changedRow;\n    }\n    // Siblings are easy, check previous and next rows.\n    else if (rowSettings.relationship === 'sibling') {\n      $previousRow = $changedRow.prev('tr:first-of-type');\n      previousRow = $previousRow.get(0);\n      const $nextRow = $changedRow.next('tr:first-of-type');\n      const nextRow = $nextRow.get(0);\n      sourceRow = changedRow;\n      if (\n        $previousRow.is('.draggable') &&\n        $previousRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $previousRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = previousRow;\n          }\n        } else {\n          sourceRow = previousRow;\n        }\n      } else if (\n        $nextRow.is('.draggable') &&\n        $nextRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $nextRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = nextRow;\n          }\n        } else {\n          sourceRow = nextRow;\n        }\n      }\n    }\n    // Parents, look up the tree until we find a field not in this group.\n    // Go up as many parents as indentations in the changed row.\n    else if (rowSettings.relationship === 'parent') {\n      $previousRow = $changedRow.prev('tr');\n      previousRow = $previousRow;\n      while (\n        $previousRow.length &&\n        $previousRow.find('.js-indentation').length >= this.rowObject.indents\n      ) {\n        $previousRow = $previousRow.prev('tr');\n        previousRow = $previousRow;\n      }\n      // If we found a row.\n      if ($previousRow.length) {\n        sourceRow = $previousRow.get(0);\n      }\n      // Otherwise we went all the way to the left of the table without finding\n      // a parent, meaning this item has been placed at the root level.\n      else {\n        // Use the first row in the table as source, because it's guaranteed to\n        // be at the root level. Find the first item, then compare this row\n        // against it as a sibling.\n        sourceRow = $(this.table)\n          .find('tr.draggable:first-of-type')\n          .get(0);\n        if (sourceRow === this.rowObject.element) {\n          sourceRow = $(this.rowObject.group[this.rowObject.group.length - 1])\n            .next('tr.draggable')\n            .get(0);\n        }\n        useSibling = true;\n      }\n    }\n\n    // Because we may have moved the row from one category to another,\n    // take a look at our sibling and borrow its sources and targets.\n    this.copyDragClasses(sourceRow, changedRow, group);\n    rowSettings = this.rowSettings(group, changedRow);\n\n    // In the case that we're looking for a parent, but the row is at the top\n    // of the tree, copy our sibling's values.\n    if (useSibling) {\n      rowSettings.relationship = 'sibling';\n      rowSettings.source = rowSettings.target;\n    }\n\n    const targetClass = `.${rowSettings.target}`;\n    const targetElement = $changedRow.find(targetClass).get(0);\n\n    // Check if a target element exists in this row.\n    if (targetElement) {\n      const sourceClass = `.${rowSettings.source}`;\n      const sourceElement = $(sourceClass, sourceRow).get(0);\n      switch (rowSettings.action) {\n        case 'depth':\n          // Get the depth of the target row.\n          targetElement.value = $(sourceElement)\n            .closest('tr')\n            .find('.js-indentation').length;\n          break;\n\n        case 'match':\n          // Update the value.\n          targetElement.value = sourceElement.value;\n          break;\n\n        case 'order': {\n          const siblings = this.rowObject.findSiblings(rowSettings);\n          if ($(targetElement).is('select')) {\n            // Get a list of acceptable values.\n            const values = [];\n            $(targetElement)\n              .find('option')\n              .each(function () {\n                values.push(this.value);\n              });\n            const maxVal = values[values.length - 1];\n            // Populate the values in the siblings.\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                // If there are more items than possible values, assign the\n                // maximum value to the row.\n                if (values.length > 0) {\n                  this.value = values.shift();\n                } else {\n                  this.value = maxVal;\n                }\n              });\n          } else {\n            // Assume a numeric input field.\n            let weight =\n              parseInt(\n                $(siblings[0])\n                  .find(targetClass)\n                  .val(),\n                10,\n              ) || 0;\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                this.value = weight;\n                weight++;\n              });\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * Copy all tableDrag related classes from one row to another.\n   *\n   * Copy all special tableDrag classes from one row's form elements to a\n   * different one, removing any special classes that the destination row\n   * may have had.\n   *\n   * @param {HTMLElement} sourceRow\n   *   The element for the source row.\n   * @param {HTMLElement} targetRow\n   *   The element for the target row.\n   * @param {string} group\n   *   The group selector.\n   */\n  Drupal.tableDrag.prototype.copyDragClasses = function (\n    sourceRow,\n    targetRow,\n    group,\n  ) {\n    const sourceElement = $(sourceRow).find(`.${group}`);\n    const targetElement = $(targetRow).find(`.${group}`);\n    if (sourceElement.length && targetElement.length) {\n      targetElement[0].className = sourceElement[0].className;\n    }\n  };\n\n  /**\n   * Check the suggested scroll of the table.\n   *\n   * @param {number} cursorY\n   *   The Y position of the cursor.\n   *\n   * @return {number}\n   *   The suggested scroll.\n   */\n  Drupal.tableDrag.prototype.checkScroll = function (cursorY) {\n    const de = document.documentElement;\n    const b = document.body;\n\n    const windowHeight =\n      window.innerHeight ||\n      (de.clientHeight && de.clientWidth !== 0\n        ? de.clientHeight\n        : b.offsetHeight);\n    this.windowHeight = windowHeight;\n    let scrollY;\n    if (document.all) {\n      scrollY = !de.scrollTop ? b.scrollTop : de.scrollTop;\n    } else {\n      scrollY = window.pageYOffset ? window.pageYOffset : window.scrollY;\n    }\n    this.scrollY = scrollY;\n    const trigger = this.scrollSettings.trigger;\n    let delta = 0;\n\n    // Return a scroll speed relative to the edge of the screen.\n    if (cursorY - scrollY > windowHeight - trigger) {\n      delta = trigger / (windowHeight + scrollY - cursorY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return delta * this.scrollSettings.amount;\n    }\n    if (cursorY - scrollY < trigger) {\n      delta = trigger / (cursorY - scrollY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return -delta * this.scrollSettings.amount;\n    }\n  };\n\n  /**\n   * Set the scroll for the table.\n   *\n   * @param {number} scrollAmount\n   *   The amount of scroll to apply to the window.\n   */\n  Drupal.tableDrag.prototype.setScroll = function (scrollAmount) {\n    const self = this;\n\n    this.scrollInterval = setInterval(() => {\n      // Update the scroll values stored in the object.\n      self.checkScroll(self.currentPointerCoords.y);\n      const aboveTable = self.scrollY > self.table.topY;\n      const belowTable = self.scrollY + self.windowHeight < self.table.bottomY;\n      if (\n        (scrollAmount > 0 && belowTable) ||\n        (scrollAmount < 0 && aboveTable)\n      ) {\n        window.scrollBy(0, scrollAmount);\n      }\n    }, this.scrollSettings.interval);\n  };\n\n  /**\n   * Command to restripe table properly.\n   */\n  Drupal.tableDrag.prototype.restripeTable = function () {\n    // :even and :odd are reversed because jQuery counts from 0 and\n    // we count from 1, so we're out of sync.\n    // Match immediate children of the parent element to allow nesting.\n    $(this.table)\n      .find('> tbody > tr.draggable, > tr.draggable')\n      .filter(':visible')\n      .filter(':odd')\n      .removeClass('odd')\n      .addClass('even')\n      .end()\n      .filter(':even')\n      .removeClass('even')\n      .addClass('odd');\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row begins dragging.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrag = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is dropped.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrop = function () {\n    return null;\n  };\n\n  /**\n   * Constructor to make a new object to manipulate a table row.\n   *\n   * @param {HTMLElement} tableRow\n   *   The DOM element for the table row we will be manipulating.\n   * @param {string} method\n   *   The method in which this row is being moved. Either 'keyboard' or\n   *   'mouse'.\n   * @param {bool} indentEnabled\n   *   Whether the containing table uses indentations. Used for optimizations.\n   * @param {number} maxDepth\n   *   The maximum amount of indentations this row may contain.\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   */\n  Drupal.tableDrag.prototype.row = function (\n    tableRow,\n    method,\n    indentEnabled,\n    maxDepth,\n    addClasses,\n  ) {\n    const $tableRow = $(tableRow);\n\n    this.element = tableRow;\n    this.method = method;\n    this.group = [tableRow];\n    this.groupDepth = $tableRow.find('.js-indentation').length;\n    this.changed = false;\n    this.table = $tableRow.closest('table')[0];\n    this.indentEnabled = indentEnabled;\n    this.maxDepth = maxDepth;\n    // Direction the row is being moved.\n    this.direction = '';\n    if (this.indentEnabled) {\n      this.indents = $tableRow.find('.js-indentation').length;\n      this.children = this.findChildren(addClasses);\n      this.group = $.merge(this.group, this.children);\n      // Find the depth of this entire group.\n      for (let n = 0; n < this.group.length; n++) {\n        this.groupDepth = Math.max(\n          $(this.group[n]).find('.js-indentation').length,\n          this.groupDepth,\n        );\n      }\n    }\n  };\n\n  /**\n   * Find all children of rowObject by indentation.\n   *\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   *\n   * @return {Array}\n   *   An array of children of the row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findChildren = function (addClasses) {\n    const parentIndentation = this.indents;\n    let currentRow = $(this.element, this.table).next('tr.draggable');\n    const rows = [];\n    let child = 0;\n\n    function rowIndentation(indentNum, el) {\n      const self = $(el);\n      if (child === 1 && indentNum === parentIndentation) {\n        self.addClass('tree-child-first');\n      }\n      if (indentNum === parentIndentation) {\n        self.addClass('tree-child');\n      } else if (indentNum > parentIndentation) {\n        self.addClass('tree-child-horizontal');\n      }\n    }\n\n    while (currentRow.length) {\n      // A greater indentation indicates this is a child.\n      if (currentRow.find('.js-indentation').length > parentIndentation) {\n        child++;\n        rows.push(currentRow[0]);\n        if (addClasses) {\n          currentRow.find('.js-indentation').each(rowIndentation);\n        }\n      } else {\n        break;\n      }\n      currentRow = currentRow.next('tr.draggable');\n    }\n    if (addClasses && rows.length) {\n      $(rows[rows.length - 1])\n        .find(`.js-indentation:nth-child(${parentIndentation + 1})`)\n        .addClass('tree-child-last');\n    }\n    return rows;\n  };\n\n  /**\n   * Ensure that two rows are allowed to be swapped.\n   *\n   * @param {HTMLElement} row\n   *   DOM object for the row being considered for swapping.\n   *\n   * @return {bool}\n   *   Whether the swap is a valid swap or not.\n   */\n  Drupal.tableDrag.prototype.row.prototype.isValidSwap = function (row) {\n    const $row = $(row);\n    if (this.indentEnabled) {\n      let prevRow;\n      let nextRow;\n      if (this.direction === 'down') {\n        prevRow = row;\n        nextRow = $row.next('tr').get(0);\n      } else {\n        prevRow = $row.prev('tr').get(0);\n        nextRow = row;\n      }\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n\n      // We have an invalid swap if the valid indentations interval is empty.\n      if (this.interval.min > this.interval.max) {\n        return false;\n      }\n    }\n\n    // Do not let an un-draggable first row have anything put before it.\n    if (this.table.tBodies[0].rows[0] === row && $row.is(':not(.draggable)')) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Perform the swap between two rows.\n   *\n   * @param {string} position\n   *   Whether the swap will occur 'before' or 'after' the given row.\n   * @param {HTMLElement} row\n   *   DOM element what will be swapped with the row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.swap = function (position, row) {\n    // Makes sure only DOM object are passed to Drupal.detachBehaviors().\n    this.group.forEach(row => {\n      Drupal.detachBehaviors(row, drupalSettings, 'move');\n    });\n    $(row)[position](this.group);\n    // Makes sure only DOM object are passed to Drupal.attachBehaviors()s.\n    this.group.forEach(row => {\n      Drupal.attachBehaviors(row, drupalSettings);\n    });\n    this.changed = true;\n    this.onSwap(row);\n  };\n\n  /**\n   * Determine the valid indentations interval for the row at a given position.\n   *\n   * @param {?HTMLElement} prevRow\n   *   DOM object for the row before the tested position\n   *   (or null for first position in the table).\n   * @param {?HTMLElement} nextRow\n   *   DOM object for the row after the tested position\n   *   (or null for last position in the table).\n   *\n   * @return {object}\n   *   An object with the keys `min` and `max` to indicate the valid indent\n   *   interval.\n   */\n  Drupal.tableDrag.prototype.row.prototype.validIndentInterval = function (\n    prevRow,\n    nextRow,\n  ) {\n    const $prevRow = $(prevRow);\n    let maxIndent;\n\n    // Minimum indentation:\n    // Do not orphan the next row.\n    const minIndent = nextRow ? $(nextRow).find('.js-indentation').length : 0;\n\n    // Maximum indentation:\n    if (\n      !prevRow ||\n      $prevRow.is(':not(.draggable)') ||\n      $(this.element).is('.tabledrag-root')\n    ) {\n      // Do not indent:\n      // - the first row in the table,\n      // - rows dragged below a non-draggable row,\n      // - 'root' rows.\n      maxIndent = 0;\n    } else {\n      // Do not go deeper than as a child of the previous row.\n      maxIndent =\n        $prevRow.find('.js-indentation').length +\n        ($prevRow.is('.tabledrag-leaf') ? 0 : 1);\n      // Limit by the maximum allowed depth for the table.\n      if (this.maxDepth) {\n        maxIndent = Math.min(\n          maxIndent,\n          this.maxDepth - (this.groupDepth - this.indents),\n        );\n      }\n    }\n\n    return { min: minIndent, max: maxIndent };\n  };\n\n  /**\n   * Indent a row within the legal bounds of the table.\n   *\n   * @param {number} indentDiff\n   *   The number of additional indentations proposed for the row (can be\n   *   positive or negative). This number will be adjusted to nearest valid\n   *   indentation level for the row.\n   *\n   * @return {number}\n   *   The number of indentations applied.\n   */\n  Drupal.tableDrag.prototype.row.prototype.indent = function (indentDiff) {\n    const $group = $(this.group);\n    // Determine the valid indentations interval if not available yet.\n    if (!this.interval) {\n      const prevRow = $(this.element)\n        .prev('tr')\n        .get(0);\n      const nextRow = $group\n        .eq(-1)\n        .next('tr')\n        .get(0);\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n    }\n\n    // Adjust to the nearest valid indentation.\n    let indent = this.indents + indentDiff;\n    indent = Math.max(indent, this.interval.min);\n    indent = Math.min(indent, this.interval.max);\n    indentDiff = indent - this.indents;\n\n    for (let n = 1; n <= Math.abs(indentDiff); n++) {\n      // Add or remove indentations.\n      if (indentDiff < 0) {\n        $group.find('.js-indentation:first-of-type').remove();\n        this.indents--;\n      } else {\n        $group\n          .find('td:first-of-type')\n          .prepend(Drupal.theme('tableDragIndentation'));\n        this.indents++;\n      }\n    }\n    if (indentDiff) {\n      // Update indentation for this row.\n      this.changed = true;\n      this.groupDepth += indentDiff;\n      this.onIndent();\n    }\n\n    return indentDiff;\n  };\n\n  /**\n   * Find all siblings for a row.\n   *\n   * According to its subgroup or indentation. Note that the passed-in row is\n   * included in the list of siblings.\n   *\n   * @param {object} rowSettings\n   *   The field settings we're using to identify what constitutes a sibling.\n   *\n   * @return {Array}\n   *   An array of siblings.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findSiblings = function (\n    rowSettings,\n  ) {\n    const siblings = [];\n    const directions = ['prev', 'next'];\n    const rowIndentation = this.indents;\n    let checkRowIndentation;\n    for (let d = 0; d < directions.length; d++) {\n      let checkRow = $(this.element)[directions[d]]();\n      while (checkRow.length) {\n        // Check that the sibling contains a similar target field.\n        if (checkRow.find(`.${rowSettings.target}`)) {\n          // Either add immediately if this is a flat table, or check to ensure\n          // that this row has the same level of indentation.\n          if (this.indentEnabled) {\n            checkRowIndentation = checkRow.find('.js-indentation').length;\n          }\n\n          if (!this.indentEnabled || checkRowIndentation === rowIndentation) {\n            siblings.push(checkRow[0]);\n          } else if (checkRowIndentation < rowIndentation) {\n            // No need to keep looking for siblings when we get to a parent.\n            break;\n          }\n        } else {\n          break;\n        }\n        checkRow = checkRow[directions[d]]();\n      }\n      // Since siblings are added in reverse order for previous, reverse the\n      // completed list of previous siblings. Add the current row and continue.\n      if (directions[d] === 'prev') {\n        siblings.reverse();\n        siblings.push(this.element);\n      }\n    }\n    return siblings;\n  };\n\n  /**\n   * Remove indentation helper classes from the current row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.removeIndentClasses = function () {\n    Object.keys(this.children || {}).forEach(n => {\n      $(this.children[n])\n        .find('.js-indentation')\n        .removeClass('tree-child')\n        .removeClass('tree-child-first')\n        .removeClass('tree-child-last')\n        .removeClass('tree-child-horizontal');\n    });\n  };\n\n  /**\n   * Add an asterisk or other marker to the changed row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.markChanged = function () {\n    const marker = Drupal.theme('tableDragChangedMarker');\n    const cell = $(this.element).find('td:first-of-type');\n    if (cell.find('.tabledrag-changed').length === 0) {\n      cell.append(marker);\n    }\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is indented.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onIndent = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is swapped.\n   *\n   * @param {HTMLElement} swappedRow\n   *   The element for the swapped row.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onSwap = function (swappedRow) {\n    return null;\n  };\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * @return {string}\n       *  Markup for the marker.\n       */\n      tableDragChangedMarker() {\n        const markerClasses = [\n          'tabledrag-changed',\n          'font-bold',\n        ];\n\n        return `\n        <span title=\"${Drupal.t('Changed')}\" class=\"${markerClasses.join(' ')}\">${info}</span>`;\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the indentation.\n       */\n      tableDragIndentation() {\n        return '<div class=\"js-indentation indentation\">&nbsp;</div>';\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the warning.\n       */\n      tableDragChangedWarning() {\n        const warningClasses = [\n          ''\n        ];\n\n        return `\n        <div role=\"alert\" class=\"mb-1 border-l-8 p-4 bg-orange-100 border-orange-500 text-orange-900\">\n          <div class=\"flex items-center\">\n            ${Drupal.theme('tableDragChangedMarker')}\n            <div class=\"mx-3\">\n              ${Drupal.t('You have unsaved changes.')}\n            </div>\n          </div>\n        </div>`;\n      },\n    },\n  );\n})(jQuery, Drupal, drupalSettings);\n"],"sourceRoot":""}