# Drupal with PostgreSQL
#
# Access via "http://localhost:8080"
#   (or "http://$(docker-machine ip):8080" if using docker-machine)
#
# During initial Drupal setup,
# Database type: PostgreSQL
# Database name: postgres
# Database username: postgres
# Database password: example
# ADVANCED OPTIONS; Database host: postgres

version: "3.7"

services:
  db:
    image: postgres:11
    environment:
      POSTGRES_DB: datacatalog
      POSTGRES_USER: datacatalogadmin
      POSTGRES_PASSWORD: datacatalog
    volumes:
      - "./artifacts:/docker-entrypoint-initdb.d"
      - "db:/var/lib/postgresql/data"
    networks:
      - code-network
      - db-network

  mail:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: always
    networks:
      - mail-network

  redis:
    image: redis
    networks:
      - cache-network

  web:
    image: nginx:latest
    environment:
      PANTHEON_ENVIRONMENT: dev
    ports:
      - "80:80"
    volumes:
      - ".:/var/www/html:cached"
      - "./nginx.conf:/etc/nginx/nginx.conf"
      - "./site.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - code-network
      - cache-network
      - mail-network

  php:
    build:
      context: .
      dockerfile: php.Dockerfile
    user: www-data
    environment:
      CACHE_HOST: redis
      CACHE_PORT: 6379
      XDEBUG_CONFIG: remote_host=host.docker.internal
    volumes:
      - ".:/var/www/html:cached"
      - "./.user.ini:/usr/local/etc/php/conf.d/custom.ini"
      - "./log.conf:/usr/local/etc/php-fpm.d/zz-log.conf"
    networks:
      - code-network
      - cache-network
      - mail-network
      - db-network

networks:
  code-network:
    driver: bridge
  db-network:
    driver: bridge
  cache-network:
    driver: bridge
  mail-network:
    driver: bridge

volumes:
  tmp:
  db:
