# Drupal with PostgreSQL
#
# Access via "http://localhost:8080"
#   (or "http://$(docker-machine ip):8080" if using docker-machine)
#
# During initial Drupal setup,
# Database type: PostgreSQL
# Database name: postgres
# Database username: postgres
# Database password: example
# ADVANCED OPTIONS; Database host: postgres

version: "3.3"

services:
  db:
    image: postgres:12
    environment:
      POSTGRES_DB: datacatalog
      POSTGRES_USER: datacatalogadmin
      POSTGRES_PASSWORD: datacatalog
    volumes:
      - "./artifacts:/docker-entrypoint-initdb.d"
      - "db:/var/lib/postgresql/data"
    networks:
      - code-network
      - db-network

  redis:
    image: redis
    networks:
      - cache-network

  web:
    build:
      context: .docker/nginx
    environment:
      FASTCGI_HOST: php
      FASTCGI_PORT: 9000
    ports:
      - "8888:80"
    volumes:
      - ".:/var/www/html"
      - "./.docker/nginx/rootfs/etc/nginx/templates:/etc/nginx/templates:cached"
    networks:
      - code-network
      - cache-network
      - mail-network

  php:
    build:
      context: .docker/php
      args:
        INSTALL_XDEBUG: "true"
        INSTALL_COMPOSER: "true"
    user: www-data
    environment:
      CACHE_HOST: redis
      CACHE_PORT: 6379
      DRUPAL_ENV: development
      XDEBUG_CONFIG: mode=debug client_host=host.docker.internal start_with_request=yes
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
    volumes:
      - ".:/var/www/html"
    networks:
      - code-network
      - cache-network
      - mail-network
      - db-network

networks:
  code-network:
    driver: bridge
  db-network:
    driver: bridge
  cache-network:
    driver: bridge
  mail-network:
    driver: bridge

volumes:
  tmp:
  db:
